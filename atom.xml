<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Sanfordy`s　blog</title>
  <subtitle>　　　　　　　</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://sanfordy.com/"/>
  <updated>2016-08-10T14:32:07.000Z</updated>
  <id>http://sanfordy.com/</id>
  
  <author>
    <name>Sanfordy</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>【15】指针</title>
    <link href="http://sanfordy.com/2016/08/01/1-0%20.C%E8%AF%AD%E6%B3%95/%E3%80%9015%E3%80%91%E6%8C%87%E9%92%88/"/>
    <id>http://sanfordy.com/2016/08/01/1-0 .C语法/【15】指针/</id>
    <published>2016-08-01T03:59:05.000Z</published>
    <updated>2016-08-10T14:32:07.000Z</updated>
    
    <content type="html">&lt;blockquote&gt;
&lt;p&gt;C语言中没有String这种类型。其实字符串就是字符序列，由多个字符组成，所以在C语言中，我们可以用字符数组来存储字符串&lt;/p&gt;
&lt;/blockquote&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;直接引用&quot;&gt;&lt;a href=&quot;#直接引用&quot; class=&quot;headerlink&quot; title=&quot;直接引用&quot;&gt;&lt;/a&gt;直接引用&lt;/h2&gt;&lt;p&gt;回想一下，之前我们是如何更改某个变量的值？我们之前是通过变量名来直接引用变量，然后进行赋值：&lt;/p&gt;
&lt;p&gt;&amp;lt; 代码示例 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; a;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;a = &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;lt; 代码分析 &amp;gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;看上去是很简单，其实程序内部是怎么操作的呢？其实，程序对变量的读写操作，实际上是对变量所在的存储空间进行写入或取出数据。就上面的代码而言，系统会自动将变量名a转换为变量的存储地址，根据地址找到变量a的存储空间，然后再将数据10以2进制的形式放入变量a的存储空间中：&lt;br&gt;&lt;img src=&quot;http://images2015.cnblogs.com/blog/776348/201608/776348-20160810173720465-429747711.png&quot; alt=&quot;&quot;&gt;&lt;/li&gt;
&lt;li&gt;通过变量名引用变量，由系统自动完成变量名和其存储地址之间的转换，称为变量的”直接引用”方式。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;什么是指针&quot;&gt;&lt;a href=&quot;#什么是指针&quot; class=&quot;headerlink&quot; title=&quot;什么是指针&quot;&gt;&lt;/a&gt;什么是指针&lt;/h2&gt;&lt;p&gt;我们已经知道，”直接引用”是直接通过变量名来读写变量，C语言中还有一种”间接引用”的方式。&lt;/p&gt;
&lt;p&gt;以变量a为例，首先将变量a的地址存放在另一个变量中，比如存放在变量b中，然后通过变量b来间接引用变量a，间接读写变量a的值。这就是”间接引用”：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2015.cnblogs.com/blog/776348/201608/776348-20160810180021981-656923486.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;如果程序通过”间接引用”的方式来修改a的值，可以这样做：先根据 变量名b 获取 变量b 的地址ffc2，取出变量b中存储的内容ffc1，也就是变量a的地址，再根据变量a的地址ffc1找到a的存储空间，然后修改里面的数据。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;总结&lt;/strong&gt;：用来存放变量地址的变量，就称为”指针变量”。在上面的情况下，变量b就是个”指针变量”，我们可以说指针变量b指向变量a。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;指针的定义&quot;&gt;&lt;a href=&quot;#指针的定义&quot; class=&quot;headerlink&quot; title=&quot;指针的定义&quot;&gt;&lt;/a&gt;指针的定义&lt;/h2&gt;&lt;p&gt;一般形式：类名标识符  *指针变量名;&lt;/p&gt;
&lt;p&gt;&amp;lt; 代码示例 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; *p;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;float&lt;/span&gt; *q;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;lt; 代码分析 &amp;gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;“*”是一个说明符，用来说明这个变量是个指针变量，是不能省略的，但它不属于变量名的一部分。&lt;/li&gt;
&lt;li&gt;前面的类型标识符表示指针变量所指向的变量的类型，而且只能指向这种类型的变量。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;指针的初始化&quot;&gt;&lt;a href=&quot;#指针的初始化&quot; class=&quot;headerlink&quot; title=&quot;指针的初始化&quot;&gt;&lt;/a&gt;指针的初始化&lt;/h2&gt;&lt;h3 id=&quot;先定义后初始化&quot;&gt;&lt;a href=&quot;#先定义后初始化&quot; class=&quot;headerlink&quot; title=&quot;先定义后初始化&quot;&gt;&lt;/a&gt;先定义后初始化&lt;/h3&gt;&lt;p&gt;&amp;lt; 代码示例 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 定义int类型的变量a&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; a = &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 定义一个指针变量p&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; *p;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 将变量a的地址赋值给指针变量p，所以指针变量p指向变量a&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;p = &amp;amp;a;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;lt; 代码分析 &amp;gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;注意第8行，赋值给p的是变量a的地址&amp;amp;a。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;在定义的同时初始化&quot;&gt;&lt;a href=&quot;#在定义的同时初始化&quot; class=&quot;headerlink&quot; title=&quot;在定义的同时初始化&quot;&gt;&lt;/a&gt;在定义的同时初始化&lt;/h3&gt;&lt;p&gt;&amp;lt; 代码示例 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 定义int类型的变量a&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; a = &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 定义一个指针变量p&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 并将变量a的地址赋值给指针变量p，所以指针变量p指向变量a&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; *p = &amp;amp;a;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;初始化的注意&quot;&gt;&lt;a href=&quot;#初始化的注意&quot; class=&quot;headerlink&quot; title=&quot;初始化的注意&quot;&gt;&lt;/a&gt;初始化的注意&lt;/h3&gt;&lt;p&gt;指针变量是用来存放变量地址的，不要给它随意赋值一个常数。下面的写法是错误的：&lt;/p&gt;
&lt;p&gt;&amp;lt; 代码示例 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; *p; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;p = &lt;span class=&quot;number&quot;&gt;200&lt;/span&gt;; &lt;span class=&quot;comment&quot;&gt;// 这是错误的&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;指针运算符&quot;&gt;&lt;a href=&quot;#指针运算符&quot; class=&quot;headerlink&quot; title=&quot;指针运算符&quot;&gt;&lt;/a&gt;指针运算符&lt;/h2&gt;&lt;h3 id=&quot;给指针指向的变量赋值&quot;&gt;&lt;a href=&quot;#给指针指向的变量赋值&quot; class=&quot;headerlink&quot; title=&quot;给指针指向的变量赋值&quot;&gt;&lt;/a&gt;给指针指向的变量赋值&lt;/h3&gt;&lt;p&gt;&amp;lt; 代码示例 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; a = &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;修改前，a的值：%d\n&quot;&lt;/span&gt;, a);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 指针变量p指向变量a（这里的&quot;*&quot;只是用来说明p是个指针变量）&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *p = &amp;amp;a;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 通过指针变量p间接修改变量a的值（这里的&quot;*&quot;是一个指针运算符）&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;*p = &lt;span class=&quot;number&quot;&gt;9&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;修改后，a的值：%d\n&quot;&lt;/span&gt;, a);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;lt; 输出结果 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight delphi&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;修改前，a的值：&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;修改后，a的值：&lt;span class=&quot;number&quot;&gt;9&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;Program&lt;/span&gt; ended &lt;span class=&quot;keyword&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;exit&lt;/span&gt; code: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;lt; 代码分析 &amp;gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;当程序刚执行完第5行代码时，内存中大概的分布情况是这样的：&lt;br&gt;&lt;img src=&quot;http://images2015.cnblogs.com/blog/776348/201608/776348-20160810181155449-310328214.png&quot; alt=&quot;&quot;&gt;&lt;/li&gt;
&lt;li&gt;第8行的“*p”代表根据p值ffc3这个地址访问对应的存储空间，也就是变量a的存储空间，然后将右边的数值9写入到这个存储空间，相当于 a = 9;，于是内存中就变成这样了：&lt;br&gt;&lt;img src=&quot;http://images2015.cnblogs.com/blog/776348/201608/776348-20160810181159293-252393579.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;可以发现，我们通过变量p间接修改了变量a的值。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;取出指针所指向变量的值&quot;&gt;&lt;a href=&quot;#取出指针所指向变量的值&quot; class=&quot;headerlink&quot; title=&quot;取出指针所指向变量的值&quot;&gt;&lt;/a&gt;取出指针所指向变量的值&lt;/h3&gt;&lt;p&gt;指针运算符除了可以赋值之外，还可以用于取值：&lt;/p&gt;
&lt;p&gt;&amp;lt; 代码示例 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; a = &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *p;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;p = &amp;amp;a;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//  *p的意思是：根据p值(即变量a的地址)访问对应的存储空间，并取出存储的内容(即取出变量a的值)，赋值给value。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; value = *p;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;取出a的值：%d\n&quot;&lt;/span&gt;, value);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;lt; 输出结果 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight delphi&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;取出a的值：&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;Program&lt;/span&gt; ended &lt;span class=&quot;keyword&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;exit&lt;/span&gt; code: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;使用注意&quot;&gt;&lt;a href=&quot;#使用注意&quot; class=&quot;headerlink&quot; title=&quot;使用注意&quot;&gt;&lt;/a&gt;使用注意&lt;/h3&gt;&lt;p&gt;在指针变量没有指向确定地址之前，不要对它所指的内容赋值。下面的写法是错误的：&lt;/p&gt;
&lt;p&gt;&amp;lt; 代码示例 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; *p; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;*p = &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;; &lt;span class=&quot;comment&quot;&gt;//这是错误的&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;应该在指针变量指向一个确定的变量后再进行赋值。下面的写法才是正确的：&lt;/p&gt;
&lt;p&gt;&amp;lt; 代码示例 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 定义2个int型变量&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; a = &lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;, b;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 定义一个指向变量b的指针变量p&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; *p;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;p = &amp;amp;b;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 将a的值赋值给变量b&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;*p = a;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;指针的用途举例&quot;&gt;&lt;a href=&quot;#指针的用途举例&quot; class=&quot;headerlink&quot; title=&quot;指针的用途举例&quot;&gt;&lt;/a&gt;指针的用途举例&lt;/h2&gt;&lt;p&gt;前面我们通过指针变量p间接访问了变量a，在有些人看来，觉得指针变量好傻B，直接用变量名a访问变量a不就好了么，干嘛搞这么麻烦。别着急，接下来举个例子，让大家看看指针还能做什么事情。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;说明&lt;/strong&gt;：在16位编译器环境下，一个指针变量占用2个字节。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;例子一&quot;&gt;&lt;a href=&quot;#例子一&quot; class=&quot;headerlink&quot; title=&quot;例子一&quot;&gt;&lt;/a&gt;例子一&lt;/h3&gt;&lt;p&gt;现在有个要求：写一个函数swap，接收2个整型参数，功能是互换两个实参的值。&lt;/p&gt;
&lt;h4 id=&quot;不用指针&quot;&gt;&lt;a href=&quot;#不用指针&quot; class=&quot;headerlink&quot; title=&quot;不用指针&quot;&gt;&lt;/a&gt;不用指针&lt;/h4&gt;&lt;p&gt;如果没学过指针，你可能会这样写：&lt;/p&gt;
&lt;p&gt;&amp;lt; 代码示例 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;swap&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; v1, &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; v2)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;更换前：v1=%d, v2=%d\n&quot;&lt;/span&gt;, v1, v2);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 定义一个中间变量&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; temp;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 交换v1和v2的值&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    temp = v1;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    v1 = v2;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    v2 = temp;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;更换后：v1=%d, v2=%d\n&quot;&lt;/span&gt;, v1, v2);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; a = &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;, b = &lt;span class=&quot;number&quot;&gt;9&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;更换前：a=%d, b=%d\n&quot;&lt;/span&gt;, a, b);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    swap(a, b);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;更换后：a=%d, b=%d\n&quot;&lt;/span&gt;, a, b);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;lt; 输出结果 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight nix&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;更换前：&lt;span class=&quot;attr&quot;&gt;a=10,&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;b=9&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;更换前：&lt;span class=&quot;attr&quot;&gt;v1=10,&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;v2=9&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;更换后：&lt;span class=&quot;attr&quot;&gt;v1=9,&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;v2=10&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;更换后：&lt;span class=&quot;attr&quot;&gt;a=10,&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;b=9Program&lt;/span&gt; ended &lt;span class=&quot;keyword&quot;&gt;with&lt;/span&gt; exit code: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;lt; 代码分析 &amp;gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;虽然v1和v2的值被交换了，但是变量a和b的值根本就没有换过来。因为基本数据类型作为函数实参时，只是纯粹地将值传递给形参，形参的改变并不影响实参。&lt;/li&gt;
&lt;li&gt;在第20行中，将变量a、b的值分别传递给了swap函数的两个形参v1、v2：&lt;br&gt;&lt;img src=&quot;http://images2015.cnblogs.com/blog/776348/201608/776348-20160810211136027-1827316399.png&quot; alt=&quot;&quot;&gt;&lt;/li&gt;
&lt;li&gt;在第8行中，将v1的值赋值给了temp:&lt;br&gt;&lt;img src=&quot;http://images2015.cnblogs.com/blog/776348/201608/776348-20160810211201996-1670795747.png&quot; alt=&quot;&quot;&gt;&lt;/li&gt;
&lt;li&gt;在第9行中，将v2的值赋值给了v1：&lt;br&gt;&lt;img src=&quot;http://images2015.cnblogs.com/blog/776348/201608/776348-20160810211251918-2067342656.png&quot; alt=&quot;&quot;&gt;&lt;/li&gt;
&lt;li&gt;在第10行中，将temp的值赋值给了v2：&lt;br&gt;&lt;img src=&quot;http://images2015.cnblogs.com/blog/776348/201608/776348-20160810211337746-344522993.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;就这样，v1和v2的值被交换了，但是a和b的值一直都没有改变。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;使用指针&quot;&gt;&lt;a href=&quot;#使用指针&quot; class=&quot;headerlink&quot; title=&quot;使用指针&quot;&gt;&lt;/a&gt;使用指针&lt;/h4&gt;&lt;p&gt;&amp;lt; 代码示例 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;swap&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *v1, &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *v2)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 中间变量&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; temp;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 取出v1指向的变量的值&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    temp = *v1;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 取出v2指向的变量的值，然后赋值给v1指向的变量&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    *v1 = *v2;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 赋值给v2指向的变量&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    *v2 = temp;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; a = &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;, b = &lt;span class=&quot;number&quot;&gt;9&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;更换前：a=%d, b=%d\n&quot;&lt;/span&gt;, a, b);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    swap(&amp;amp;a, &amp;amp;b);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;更换后：a=%d, b=%d\n&quot;&lt;/span&gt;, a, b);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;lt; 输出结果 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight nix&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;更换前：&lt;span class=&quot;attr&quot;&gt;a=10,&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;b=9&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;更换后：&lt;span class=&quot;attr&quot;&gt;a=9,&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;b=10&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Program ended &lt;span class=&quot;keyword&quot;&gt;with&lt;/span&gt; exit code: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;lt; 代码分析 &amp;gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;先注意第20行，传递是变量的地址。因此swap函数的形参v1指向了变量a，v2指向了变量b：&lt;br&gt;&lt;img src=&quot;http://images2015.cnblogs.com/blog/776348/201608/776348-20160810211501152-1930237207.png&quot; alt=&quot;&quot;&gt;&lt;/li&gt;
&lt;li&gt;第6行代码是取出v1指向的变量的值，也就是变量a的值：10，然后赋值给变量temp：&lt;br&gt;&lt;img src=&quot;http://images2015.cnblogs.com/blog/776348/201608/776348-20160810211522059-1684052179.png&quot; alt=&quot;&quot;&gt;&lt;/li&gt;
&lt;li&gt;第9行代码是取出v2指向的变量(变量b)的值，然后赋值给v1指向的变量（变量a）：&lt;br&gt;&lt;img src=&quot;http://images2015.cnblogs.com/blog/776348/201608/776348-20160810211537465-1337156886.png&quot; alt=&quot;&quot;&gt;&lt;/li&gt;
&lt;li&gt;第12行代码是将temp变量的值赋值给v2指向的变量（变量b）：&lt;br&gt;&lt;img src=&quot;http://images2015.cnblogs.com/blog/776348/201608/776348-20160810211552684-2082667724.png&quot; alt=&quot;&quot;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;相信你已经感受到指针的强大了，如果没有指针，在一个函数的内部根本改变不了外部的实参。&lt;/p&gt;
&lt;h3 id=&quot;例子二&quot;&gt;&lt;a href=&quot;#例子二&quot; class=&quot;headerlink&quot; title=&quot;例子二&quot;&gt;&lt;/a&gt;例子二&lt;/h3&gt;&lt;p&gt;接下来再举一个指针的实用例子。默认情况下，一个函数只能有一个返回值，有了指针，我们可以实现函数有“多返回值”。&lt;/p&gt;
&lt;p&gt;现在有个要求：写一个函数sumAndMinus，可以同时计算2个整型的和与差，函数执行完毕后，返回和与差（注意了，这里要返回2个值）：&lt;/p&gt;
&lt;p&gt;&amp;lt; 代码示例 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 计算2个整型的和与差&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;sumAndMinus&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; v1, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; v2, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; *minus)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 计算差，并赋值给指针指向的变量&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    *minus = v1 - v2;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 计算和，并返回和&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return v1 + v2;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 定义2个int型变量&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; a = &lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;, b = &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 定义2个变量来分别接收和与差&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; sum, minus;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 调用函数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sum = sumAndMinus(a, b, &amp;amp;minus);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 打印和&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;%d+%d=%d\n&quot;&lt;/span&gt;, a, b, sum);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 打印差&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;%d-%d=%d\n&quot;&lt;/span&gt;, a, b, minus);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;lt; 输出结果 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight delphi&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;+&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;=&lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;-&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;=&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;Program&lt;/span&gt; ended &lt;span class=&quot;keyword&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;exit&lt;/span&gt; code: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;lt; 代码分析 &amp;gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;和与差都由同一个函数计算并返回出来。和是函数的直接返回值，差是通过函数的第3个指针参数间接返回。因此有了指针，我们可以让函数有”无限个”返回值。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;关于指针的疑问&quot;&gt;&lt;a href=&quot;#关于指针的疑问&quot; class=&quot;headerlink&quot; title=&quot;关于指针的疑问&quot;&gt;&lt;/a&gt;关于指针的疑问&lt;/h2&gt;&lt;h3 id=&quot;指针变量占多少内存空间？&quot;&gt;&lt;a href=&quot;#指针变量占多少内存空间？&quot; class=&quot;headerlink&quot; title=&quot;指针变量占多少内存空间？&quot;&gt;&lt;/a&gt;指针变量占多少内存空间？&lt;/h3&gt;&lt;p&gt;在同一种编译器环境下，一个指针变量所占用的内存空间是固定的。比如，在16位编译器环境下，任何一个指针变量都只占用2个字节，并不会随所指向变量的类型而改变。各种编译器下指针所占内存空间如下图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2015.cnblogs.com/blog/776348/201608/776348-20160810213708715-452247161.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;为什么32位编译器下指针变量占用四个字节：因为CPU和内存之间是由32根地址总线连接的，CPU通过这32根地址总线控制内存，每根地址总线都有两种状态（不接通0或不接通1），32根地址线的状态不同时表示控制不同的字节，所以总共能控制2^32个字节。而这32根线的状态需要用32bit即四个字节存储（每个bit存储一个0或1表示不接通或接通）。&lt;/p&gt;
&lt;h3 id=&quot;指针变量为什么要分类型？&quot;&gt;&lt;a href=&quot;#指针变量为什么要分类型？&quot; class=&quot;headerlink&quot; title=&quot;指针变量为什么要分类型？&quot;&gt;&lt;/a&gt;指针变量为什么要分类型？&lt;/h3&gt;&lt;p&gt;既然每个指针变量所占用的内存空间是一样的，而且存储的都是地址，为何指针变量还要分类型？而且只能指向一种类型的变量？比如指向int类型的指针、指向char类型的指针。&lt;/p&gt;
&lt;p&gt;其实，我觉得这个问题跟”数组为什么要分类型”是一样的。看下面的代码：&lt;/p&gt;
&lt;p&gt;&amp;lt; 代码示例 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; c = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//  定义一个指向char类型的指针&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *p = &amp;amp;c;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//  取出&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;%d\n&quot;&lt;/span&gt;, *p);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; *q = &amp;amp;c;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//  取出&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;%d\n&quot;&lt;/span&gt;, *q);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;lt; 输出结果 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight delphi&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;513&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;Program&lt;/span&gt; ended &lt;span class=&quot;keyword&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;exit&lt;/span&gt; code: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;lt; 代码分析 &amp;gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;第15行用一个本应该指向int类型的指针q，指向char类型的变量c，取出来却是513，怎么回事呢？这个要根据内存来分析，根据变量的定义顺序，这些变量在内存中大致如下图排布：&lt;br&gt;&lt;img src=&quot;http://images2015.cnblogs.com/blog/776348/201608/776348-20160810213716418-10922204.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;其中，指针变量p和int类型变量i各占2个字节，char类型的c占一个字节，p指向c，因此p值就是c的地址。&lt;/li&gt;
&lt;li&gt;第9行，用指针p指向变量c。当利用*p来获取变量c的值时，由于指针p知道变量c是char类型的，所以会从ffc3这个地址开始读取1个字节的数据：0000 0001，转为10进制就是1。&lt;/li&gt;
&lt;li&gt;第13行，用指针q指向变量c。当利用*q获取变量c的值时，由于指针q认为变量c是int类型的，所以会从ffc3这个地址开始读取2个字节的数据：0000 0010 0000 0001，转为10进制就是513。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;可见，给指针分类是多么重要的一件事，而且一种指针最好只指向一种类型的变量，那是最安全的。&lt;/p&gt;
&lt;h2 id=&quot;学习指针必须搞定的问题&quot;&gt;&lt;a href=&quot;#学习指针必须搞定的问题&quot; class=&quot;headerlink&quot; title=&quot;学习指针必须搞定的问题&quot;&gt;&lt;/a&gt;学习指针必须搞定的问题&lt;/h2&gt;&lt;h3 id=&quot;常量指针和指针常量&quot;&gt;&lt;a href=&quot;#常量指针和指针常量&quot; class=&quot;headerlink&quot; title=&quot;常量指针和指针常量&quot;&gt;&lt;/a&gt;常量指针和指针常量&lt;/h3&gt;&lt;h4 id=&quot;常量指针&quot;&gt;&lt;a href=&quot;#常量指针&quot; class=&quot;headerlink&quot; title=&quot;常量指针&quot;&gt;&lt;/a&gt;常量指针&lt;/h4&gt;&lt;p&gt;常量指针：常量是形容词，指针是名词。这样看来常量指针本质是指针，常量修饰它，表示这个指针乃是一个指向常量的指针（这里指的是用const 修饰过的变量即常量，而不是普通变量）。因为是常量，所以它的值是不可修改的，因此用*号对指针不能进行赋值操作。当然，这个指针是变量，还可以指向其他的常量，但是这个指针只能指向常量，即存储的值只能是常量的地址而不能是变量的地址。&lt;/p&gt;
&lt;p&gt;在C/C++中，常量指针是这样声明的：&lt;/p&gt;
&lt;p&gt;&amp;lt; 代码示例 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight c++&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//  声明格式一&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; *p;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//  声明格式二&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; *p;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;常量指针的使用要注意，不能用*号对指针进行赋值操作来改变其指向的对象的值，可是仍然可以通过原来的声明修改，也就是说常量指针可以被赋值为变量的地址，之所以叫做常量指针，是限制了通过这个指针修改变量的值。例如：&lt;/p&gt;
&lt;p&gt;&amp;lt; 代码示例 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; a = &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; b = &lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; *c = &amp;amp;a; &lt;span class=&quot;comment&quot;&gt;// 这是合法的&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;　　*c = &lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;; &lt;span class=&quot;comment&quot;&gt;// 非法&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;　　 a = &lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;;&lt;span class=&quot;comment&quot;&gt;// 但可以这样修改c指向的对象的值&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; *d = &amp;amp;b; &lt;span class=&quot;comment&quot;&gt;// b是常量，d可以指向b，d被赋值为b的地址是合法的&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;虽然常量指针指向的对象一般不能改变（这里指的是用const 修饰过的变量即常量，而不是普通变量），可是因为常量指针是一个变量，因此，常量指针可以不被赋初始值，且可以被重新赋值。例如：&lt;/p&gt;
&lt;p&gt;&amp;lt; 代码示例 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; a = &lt;span class=&quot;number&quot;&gt;12&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; b = &lt;span class=&quot;number&quot;&gt;15&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; *c = &amp;amp;a; &lt;span class=&quot;comment&quot;&gt;// 为了简化代码，很多人习惯赋初始值&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; *d;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;d = &amp;amp;a; &lt;span class=&quot;comment&quot;&gt;// 这样当然是可以的&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;c = &amp;amp;b; &lt;span class=&quot;comment&quot;&gt;// 虽然c已经被赋予初始值，可是仍然可以指向另一个变量&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;指针常量&quot;&gt;&lt;a href=&quot;#指针常量&quot; class=&quot;headerlink&quot; title=&quot;指针常量&quot;&gt;&lt;/a&gt;指针常量&lt;/h4&gt;&lt;p&gt;指针常量：指针是形容词，常量是名词。这样看来指针常量的本质是一个常量，指针修饰它，那么说明这个常量的存储的值应该是一个地址。指针常量就是说指针本身就是一个常量，正如整型常量666一样。那么作为常量，那么这个指针的值是无法改变的，就相当于一个整型常量一样，一旦初始化后就不可以改变。所以指针常量声明时必须初始化。初始化后这个指针就一直指向这个变量，可以通过*改变被指向变量的值。&lt;/p&gt;
&lt;p&gt;在C/C++中，指针常量这样声明：&lt;/p&gt;
&lt;p&gt;&amp;lt; 代码示例 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; *&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; b;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;只要const位于指针声明操作符右侧，就表明声明的对象是一个常量，且它的内容是一个指针，也就是一个地址。因为指针常量是一个常量，在声明的时候一定要给它赋初始值。一旦赋值，以后这个常量再也不能指向别的地址。&lt;/p&gt;
&lt;p&gt;虽然指针常量的值不能变，可是它指向的对象是可变的，因为我们并没有限制它指向的对象是常量：&lt;/p&gt;
&lt;p&gt;&amp;lt; 代码示例 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;string.h&quot;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; argc, &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; * argv[])&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; a = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; *&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; b = &amp;amp;a;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    *b = &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;%d&quot;&lt;/span&gt;,*b);&lt;span class=&quot;comment&quot;&gt;//  输出：2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;总结&lt;/strong&gt;：你可以把*读作指针，把const读作常量，那么从左到右一读就可以分辨常量指针和指针常量了。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;指针和地址&quot;&gt;&lt;a href=&quot;#指针和地址&quot; class=&quot;headerlink&quot; title=&quot;指针和地址&quot;&gt;&lt;/a&gt;指针和地址&lt;/h3&gt;&lt;p&gt;地址：是系统的用户地址空间的虚拟内存地址编号，并不是实际的内存地址编号。地址就是一个编号而已，就像门牌号，学号。这没有所谓的存储空间的说法，就是名字。而我们编程使用的地址是虚拟内存地址，就是我们常说的内存地址。&lt;/p&gt;
&lt;p&gt;指针：是一个变量，使用变量时需要系统分配一个内存才能使用。而指针是存储内存地址的一种变量，使用指针就像使用内存地址一样。而对指针的赋值只是改变指针变量存储的值，只是更新了一下变量中存储的值而已。&lt;/p&gt;
&lt;p&gt;区别和联系：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;区别：指针是一个存储地址的变量，占用内存空间，地址只是一串数字，不占内存空间。&lt;/li&gt;
&lt;li&gt;联系：地址是放在指针变量中的。好比 int a=3;中，a（类似于指针）和3（类似于地址）的关系。 &lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;变量和地址的联系&quot;&gt;&lt;a href=&quot;#变量和地址的联系&quot; class=&quot;headerlink&quot; title=&quot;变量和地址的联系&quot;&gt;&lt;/a&gt;变量和地址的联系&lt;/h3&gt;&lt;p&gt;变量占内存空间，地址只是一串数字；每一个变量都有地址，可以通过 &amp;amp;变量名 取得变量的地址，就像每一个人都有一个住址一样的。 &lt;/p&gt;
&lt;h3 id=&quot;指向指针的指针&quot;&gt;&lt;a href=&quot;#指向指针的指针&quot; class=&quot;headerlink&quot; title=&quot;指向指针的指针&quot;&gt;&lt;/a&gt;指向指针的指针&lt;/h3&gt;&lt;p&gt;指向指针的指针：本质是一个指针，只是这个指针指向的变量是一个指针类型的，也叫二级指针。&lt;/p&gt;
&lt;p&gt;&amp;lt; 代码示例 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; **p1;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;指针数组和指向数组的指针&quot;&gt;&lt;a href=&quot;#指针数组和指向数组的指针&quot; class=&quot;headerlink&quot; title=&quot;指针数组和指向数组的指针&quot;&gt;&lt;/a&gt;指针数组和指向数组的指针&lt;/h3&gt;&lt;h4 id=&quot;指针数组&quot;&gt;&lt;a href=&quot;#指针数组&quot; class=&quot;headerlink&quot; title=&quot;指针数组&quot;&gt;&lt;/a&gt;指针数组&lt;/h4&gt;&lt;p&gt;指针数组：本质是一个数组，只是数组中的每一个元素都是指针。&lt;/p&gt;
&lt;p&gt;定义一个指针数组：&lt;/p&gt;
&lt;p&gt;&amp;lt; 代码示例 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//  由于[]比*优先级高，因此p先于[4]结合，形成p[4]这样的形式，这显然是数组形式，表示p数组有四个元素，然后再与p前面的“*”结合，“*”表示此数组是指针类型的，每个数组元素（相当于一个指针变量）都可以指向一个int变量。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; *p[&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;指向数组的指针&quot;&gt;&lt;a href=&quot;#指向数组的指针&quot; class=&quot;headerlink&quot; title=&quot;指向数组的指针&quot;&gt;&lt;/a&gt;指向数组的指针&lt;/h4&gt;&lt;p&gt;指向数组的指针：本质是一个指针，前面是定语，是修饰语，该指针指向一个数组。&lt;/p&gt;
&lt;p&gt;定义一个指向数组的指针：&lt;/p&gt;
&lt;p&gt;&amp;lt; 代码示例 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//   定义一&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; a[&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; * p = a;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//  定义二&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//  用括号括起来的*a使得*首先与a结合，表明a是一个指针，[]表明是一个数组，int 表明这个数组中的元素都是整型的。整体理解就是: 声明一个指向含10个整型元素的数组的指针。 &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;(*a)[&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;数组名和指针&quot;&gt;&lt;a href=&quot;#数组名和指针&quot; class=&quot;headerlink&quot; title=&quot;数组名和指针&quot;&gt;&lt;/a&gt;数组名和指针&lt;/h3&gt;&lt;p&gt;数组名：存放数组中首个元素的地址的常量，是指针常量，内容不可以修改。&lt;/p&gt;
&lt;p&gt;指针：变量，内容可以修改。&lt;/p&gt;
&lt;h3 id=&quot;内存泄露&quot;&gt;&lt;a href=&quot;#内存泄露&quot; class=&quot;headerlink&quot; title=&quot;内存泄露&quot;&gt;&lt;/a&gt;内存泄露&lt;/h3&gt;&lt;p&gt;在编程中根据需要会动态分配一块内存，这块内存如果没有释放，其他任何程序都不能使用。程序结束，程序占用的资源销毁，如果程序没有释放这块内存，那么这块内存就会因为程序的结束而失去和操作系统的联系，导致这块内存无法再次使用。如果泄露的内存过多，导致可用内存越来越少，最后甚至系统所需的内存都不能满足，系统就崩溃了。重启机器后就会正常。因为重启机器后启动系统会重新规划内存，重新分配。 &lt;/p&gt;
&lt;h3 id=&quot;堆和栈&quot;&gt;&lt;a href=&quot;#堆和栈&quot; class=&quot;headerlink&quot; title=&quot;堆和栈&quot;&gt;&lt;/a&gt;堆和栈&lt;/h3&gt;&lt;h4 id=&quot;堆&quot;&gt;&lt;a href=&quot;#堆&quot; class=&quot;headerlink&quot; title=&quot;堆&quot;&gt;&lt;/a&gt;堆&lt;/h4&gt;&lt;p&gt;堆就是一块大内存块。这个内存块是在程序所在的内存块之外的。所有程序都可以在这个堆中请求分配内存。请求成功就用一个指针指向这个请求到的内存，就可以使用了。因为这部分的内存不属于某个程序，实际上是属于系统的，相当于一个公共内存区，对于所有的程序都是可用的。当然，对于这部分的内存的管理，谁申请了就由谁来管理已分配的内存。释放掉之后就由系统来管理，未释放则一直由申请的程序进行管理和使用。如果程序运行结束后忘了释放这块内存，因而在堆中系统还是认为这块内存已经被分配，所以其他程序也就无法申请使用，而这个程序又结束了，这样一来，这块内存就谁也不可用了。这就是内存泄露。久而久之，这样的内存越来越多，那么堆中的内存就少了，自然系统就到空余的内存获取来补充堆内存的数量。然而，泄露的一直持续的话，所有的可用内存都用来做堆内存了，而对内存一直在泄露最后，堆中无可用内存，所有程序就无法请求动态分配内存了。同时此时，系统也无法请求内存，然而系统核心程序运行请求不到内存就失败，这样整个系统就运行不了了，就崩溃了。重启系统后，内存中的数据全部清零，全部重新规划，就不存在这个内存不足的问题了。但是如果还运行这些不完善的程序，还会内存泄露。堆的作用主要就是为程序提供动态内存分配，这样就能满足程序运行时增加内存的要求。程序的代码一般是在栈中的，使用动态内存分配，会给程序在内存的堆（一块特定的内存区域）中分配一块内存，利用这个动态分配函数分配的内存，在使用完后必须使用对应的函数释放相应的内存，不然就会造成内存泄露。&lt;/p&gt;
&lt;h4 id=&quot;栈&quot;&gt;&lt;a href=&quot;#栈&quot; class=&quot;headerlink&quot; title=&quot;栈&quot;&gt;&lt;/a&gt;栈&lt;/h4&gt;&lt;p&gt;栈是一个先进先出的内存结构模型。系统为程序分配内存空间时，都是按照栈的方式进行分配的。因此在程序中出现的函数调用，就是利用栈的特性实现的，这个特性在递归身上表现的淋漓尽致。函数调用时首先将本函数的所有东西压入到栈中，然后执行新函数。执行新函数时将新函数用到的所有东西压入栈顶，使用时出栈即可。执行完后，新函数中所有的东西都出栈了，再出栈就回到了原来函数的执行了。这就是巧妙的利用了栈的特性。程序中自动变量的分配（如 int a ;）就是通过栈来分配的，因而执行完程序之后，这些变量所占的内存自然而然的就释放掉了。&lt;/p&gt;
&lt;h2 id=&quot;参考&quot;&gt;&lt;a href=&quot;#参考&quot; class=&quot;headerlink&quot; title=&quot;参考&quot;&gt;&lt;/a&gt;参考&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;http://www.cnblogs.com/mjios/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;M了个J的博客&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
</content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;C语言中没有String这种类型。其实字符串就是字符序列，由多个字符组成，所以在C语言中，我们可以用字符数组来存储字符串&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="1.0　【C语法】" scheme="http://sanfordy.com/categories/1-0-%E3%80%90C%E8%AF%AD%E6%B3%95%E3%80%91/"/>
    
    
  </entry>
  
  <entry>
    <title>【14】字符串</title>
    <link href="http://sanfordy.com/2016/08/01/1-0%20.C%E8%AF%AD%E6%B3%95/%E3%80%9014%E3%80%91%E5%AD%97%E7%AC%A6%E4%B8%B2/"/>
    <id>http://sanfordy.com/2016/08/01/1-0 .C语法/【14】字符串/</id>
    <published>2016-08-01T03:52:05.000Z</published>
    <updated>2016-08-10T09:24:19.000Z</updated>
    
    <content type="html">&lt;blockquote&gt;
&lt;p&gt;C语言中没有String这种类型。其实字符串就是字符序列，由多个字符组成，所以在C语言中，我们可以用字符数组来存储字符串&lt;/p&gt;
&lt;/blockquote&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;字符串简介&quot;&gt;&lt;a href=&quot;#字符串简介&quot; class=&quot;headerlink&quot; title=&quot;字符串简介&quot;&gt;&lt;/a&gt;字符串简介&lt;/h2&gt;&lt;p&gt;在Java中，一个字符串可以用String类型来存储：&lt;/p&gt;
&lt;p&gt;&amp;lt; 代码示例 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;String s = &lt;span class=&quot;string&quot;&gt;&quot;string&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;C语言中没有String这种类型。其实字符串就是字符序列，由多个字符组成，所以在C语言中，我们可以用字符数组来存储字符串。&lt;/p&gt;
&lt;p&gt;字符串可以看做是一个特殊的字符数组，为了跟普通的字符数组区分开来，应该在字符串的尾部添加了一个结束标志’\0’。’\0’是一个ASCII码值为0的字符，是一个空操作符，表示什么也不干。所以采用字符数组存放字符串，赋值时应包含结束标志’\0’。&lt;/p&gt;
&lt;p&gt;字符串”mj”的存储情况如下（假设用字符数组char a[]来存储）：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2015.cnblogs.com/blog/776348/201608/776348-20160810115159324-73374550.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;注意&lt;/strong&gt;：尾部有个’\0’，如果没有这个结束标记，说明这个字符数组存储的并不是字符串。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;字符串的初始化&quot;&gt;&lt;a href=&quot;#字符串的初始化&quot; class=&quot;headerlink&quot; title=&quot;字符串的初始化&quot;&gt;&lt;/a&gt;字符串的初始化&lt;/h2&gt;&lt;p&gt;&amp;lt; 代码示例 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//  一&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; a[&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;] = &amp;#123;&lt;span class=&quot;string&quot;&gt;&#39;m&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;j&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;\0&#39;&lt;/span&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//  二&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; b[&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;b[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;] = &lt;span class=&quot;string&quot;&gt;&#39;m&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;b[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;] = &lt;span class=&quot;string&quot;&gt;&#39;j&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;b[&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;] = &lt;span class=&quot;string&quot;&gt;&#39;\0&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//  三&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; c[&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;] = &lt;span class=&quot;string&quot;&gt;&quot;mj&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//  四&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; d[] = &lt;span class=&quot;string&quot;&gt;&quot;mj&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;lt; 代码分析 &amp;gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;一般我们使用第11行的初始化方式，系统会自动在字符串尾部加上一个\0结束符。&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;注意&lt;/strong&gt;：字符串所占的空间至少要比字符串长度大1，因为字符串以 ‘\0’ 表⽰结束。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;字符串的输入&quot;&gt;&lt;a href=&quot;#字符串的输入&quot; class=&quot;headerlink&quot; title=&quot;字符串的输入&quot;&gt;&lt;/a&gt;字符串的输入&lt;/h2&gt;&lt;p&gt;stdio.h中有2个函数可以用来接收用户输入的字符串，分别是scanf和gets。&lt;/p&gt;
&lt;h3 id=&quot;scanf&quot;&gt;&lt;a href=&quot;#scanf&quot; class=&quot;headerlink&quot; title=&quot;scanf&quot;&gt;&lt;/a&gt;scanf&lt;/h3&gt;&lt;p&gt;&amp;lt; 代码示例 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; a[&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;scanf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;%s&quot;&lt;/span&gt;, a);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;lt; 代码分析 &amp;gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;scanf函数会从a的首地址开始存放用户输入的字符，存放完毕后，系统会自动在尾部加上一个结束标记’\0’。&lt;/li&gt;
&lt;li&gt;不要写成scanf(“%s”, &amp;amp;a)，因为a已经代表了数组的地址，没必要再加上&amp;amp;这个地址运算符。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;gets&quot;&gt;&lt;a href=&quot;#gets&quot; class=&quot;headerlink&quot; title=&quot;gets&quot;&gt;&lt;/a&gt;gets&lt;/h3&gt;&lt;p&gt;&amp;lt; 代码示例 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight dns&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;char a[&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;]&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;gets(a)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;lt; 代码分析 &amp;gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;gets跟scanf一样，会从a的首地址开始存放用户输入的字符，存放完毕后，系统会自动在尾部加上一个结束标记’\0’。&lt;/li&gt;
&lt;li&gt;gets一次只能读取一个字符串，scanf则可以同时读取多个字符串。&lt;/li&gt;
&lt;li&gt;gets可以读入包含空格、tab的字符串，直到遇到回车为止；scanf不能用来读取空格、tab。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;字符串的输出&quot;&gt;&lt;a href=&quot;#字符串的输出&quot; class=&quot;headerlink&quot; title=&quot;字符串的输出&quot;&gt;&lt;/a&gt;字符串的输出&lt;/h2&gt;&lt;p&gt;我们可以使用stdio.h中两个函数来输出字符串，分别是printf和puts函数。&lt;/p&gt;
&lt;h3 id=&quot;printf&quot;&gt;&lt;a href=&quot;#printf&quot; class=&quot;headerlink&quot; title=&quot;printf&quot;&gt;&lt;/a&gt;printf&lt;/h3&gt;&lt;p&gt;这个函数我们已经用过很多遍了，用格式符%s表示需要输出一个字符串：&lt;/p&gt;
&lt;p&gt;&amp;lt; 代码示例 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; a[&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;] = &amp;#123;&lt;span class=&quot;string&quot;&gt;&#39;m&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;j&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;\0&#39;&lt;/span&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;%s\n&quot;&lt;/span&gt;, a);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;lt; 输出结果 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight delphi&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;mj&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;Program&lt;/span&gt; ended &lt;span class=&quot;keyword&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;exit&lt;/span&gt; code: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;lt; 代码分析 &amp;gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;最后面那个\0是不可能输出的，它只是个空字符，只是字符串结束的标记。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;说到这里，有人可能会想：这样看来，似乎把最后的\0去掉也没什么影响吧，输出结果应该还是一样的啊，都是”mj”。我们可以试一下，把最后面的\0去掉，再进行输出：&lt;/p&gt;
&lt;p&gt;&amp;lt; 代码示例 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; a[&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;] = &amp;#123;&lt;span class=&quot;string&quot;&gt;&#39;m&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;j&#39;&lt;/span&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;%s&quot;&lt;/span&gt;, a);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;lt; 输出结果 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight delphi&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;mj&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;Program&lt;/span&gt; ended &lt;span class=&quot;keyword&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;exit&lt;/span&gt; code: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;lt; 代码分析 &amp;gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;跟上面添加了\0的输出结果是一样的。别高兴地太早了，我只能说你这是侥幸一样的，运气好了一点。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;我们再来看一个例子：&lt;/p&gt;
&lt;p&gt;&amp;lt; 代码示例 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//  添加了结束符\0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; a[&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;] = &amp;#123;&lt;span class=&quot;string&quot;&gt;&#39;m&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;j&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;\0&#39;&lt;/span&gt;&amp;#125;; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//  假设忘记添加结束符\0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; b[] = &amp;#123;&lt;span class=&quot;string&quot;&gt;&#39;i&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;s&#39;&lt;/span&gt;&amp;#125;; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 输出字符串a&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;字符串a：%s\n&quot;&lt;/span&gt;, a); &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 输出字符串b&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;字符串b：%s\n&quot;&lt;/span&gt;, b); &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//  打印a的地址&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;a的地址：%x\n&quot;&lt;/span&gt;, a);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//  打印b的地址&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;b的地址：%x\n&quot;&lt;/span&gt;, b);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;lt; 输出结果 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight armasm&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;字符串a：mj&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;字符串&lt;span class=&quot;keyword&quot;&gt;b：ismj&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;a的地址：&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;fbff809&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;b的地址：5fbff807&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;span class=&quot;symbol&quot;&gt;Program&lt;/span&gt; ended with exit &lt;span class=&quot;meta&quot;&gt;code&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;lt; 代码分析 &amp;gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;看清楚了，第4行的字符数组b后面没有添加结束符\0，因此b不算是个正宗的字符串。&lt;/li&gt;
&lt;li&gt;按照你的猜想，字符串b的输出应该就是”is”，但是当我们尝试输出b的时候，把a也输出了。要搞清楚为什么，首先要看看a和b的内存地址：&lt;br&gt;&lt;img src=&quot;http://images2015.cnblogs.com/blog/776348/201608/776348-20160810143638949-521231888.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;可以看出来，数组b和a的内存地址是连续的。我们再看第9行代码，%s表示期望输出一个字符串，因此printf函数会从b的首地址开始按顺序输出字符，一直到\0字符为止，因为\0是字符串的结束标记。所以，如果想要创建一个字符串，记得加上结束符\0，不然后果很严重，会访问到一些垃圾数据。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;puts&quot;&gt;&lt;a href=&quot;#puts&quot; class=&quot;headerlink&quot; title=&quot;puts&quot;&gt;&lt;/a&gt;puts&lt;/h3&gt;&lt;p&gt;&amp;lt; 代码示例 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; a[] = &lt;span class=&quot;string&quot;&gt;&quot;mj&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;puts&lt;/span&gt;(a);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;puts&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;lmj&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;lt; 输出结果 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight delphi&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;mj&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;lmj&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;Program&lt;/span&gt; ended &lt;span class=&quot;keyword&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;exit&lt;/span&gt; code: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;lt; 代码分析 &amp;gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;看第2行代码，puts函数会从a的首地址开始输出字符，一直到\0字符为止。&lt;/li&gt;
&lt;li&gt;从输出结果可以看出puts函数输出一个字符串后会自动换行。&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;注意&lt;/strong&gt;：puts函数一次只能输出一个字符串，printf函数则可以同时输出多个字符串。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;字符串常用处理函数&quot;&gt;&lt;a href=&quot;#字符串常用处理函数&quot; class=&quot;headerlink&quot; title=&quot;字符串常用处理函数&quot;&gt;&lt;/a&gt;字符串常用处理函数&lt;/h2&gt;&lt;p&gt;下面介绍的字符串处理函数都是在string.h头文件中声明的，使用前要包含这个头文件。&lt;/p&gt;
&lt;p&gt;系统提供的字符串处理函数都是根据 ‘\0’ 来判断字符串是否结束。&lt;/p&gt;
&lt;h3 id=&quot;strlen&quot;&gt;&lt;a href=&quot;#strlen&quot; class=&quot;headerlink&quot; title=&quot;strlen&quot;&gt;&lt;/a&gt;strlen&lt;/h3&gt;&lt;p&gt;这个函数可以用来测量字符串的字符个数，不包括\0：&lt;/p&gt;
&lt;p&gt;&amp;lt; 代码示例 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; size = &lt;span class=&quot;built_in&quot;&gt;strlen&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;mj&quot;&lt;/span&gt;); &lt;span class=&quot;comment&quot;&gt;// 长度为2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; s1[] = &lt;span class=&quot;string&quot;&gt;&quot;lmj&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; size1 = &lt;span class=&quot;built_in&quot;&gt;strlen&lt;/span&gt;(s1); &lt;span class=&quot;comment&quot;&gt;// 长度为3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; s2[] = &amp;#123;&lt;span class=&quot;string&quot;&gt;&#39;m&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;j&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;\0&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;l&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;m&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;j&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;\0&#39;&lt;/span&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; size2 = &lt;span class=&quot;built_in&quot;&gt;strlen&lt;/span&gt;(s2); &lt;span class=&quot;comment&quot;&gt;// 长度为2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;lt; 代码分析 &amp;gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;看一下第7行，strlen函数会从s2的首地址开始计算字符个数，直到遇到空字符\0为止。因为s2的第1个\0之前只有mj这2个字符，所以长度为2。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;strcpy&quot;&gt;&lt;a href=&quot;#strcpy&quot; class=&quot;headerlink&quot; title=&quot;strcpy&quot;&gt;&lt;/a&gt;strcpy&lt;/h3&gt;&lt;p&gt;&amp;lt; 代码示例 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; s[&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;strcpy&lt;/span&gt;(s, &lt;span class=&quot;string&quot;&gt;&quot;lmj&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;lt; 代码分析 &amp;gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;strcpy函数会将右边的”lmj”字符串拷贝到字符数组s中。从s的首地址开始，逐个字符拷贝，直到拷贝到\0为止。当然，在s的尾部肯定会保留一个\0。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;假设右边的字符串中有好几个\0，strcpy函数只会拷贝第1个\0之前的内容，后面的内容不拷贝：&lt;/p&gt;
&lt;p&gt;&amp;lt; 代码示例 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; s[&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; c[] = &amp;#123;&lt;span class=&quot;string&quot;&gt;&#39;m&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;j&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;\0&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;l&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;m&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;j&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;\0&#39;&lt;/span&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;strcpy&lt;/span&gt;(s, c);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;lt; 代码分析 &amp;gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;最后字符串s中的内容为：mj。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;strcat&quot;&gt;&lt;a href=&quot;#strcat&quot; class=&quot;headerlink&quot; title=&quot;strcat&quot;&gt;&lt;/a&gt;strcat&lt;/h3&gt;&lt;p&gt;&amp;lt; 代码示例 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; s1[&lt;span class=&quot;number&quot;&gt;30&lt;/span&gt;] = &lt;span class=&quot;string&quot;&gt;&quot;LOVE&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;strcat&lt;/span&gt;(s1, &lt;span class=&quot;string&quot;&gt;&quot;OC&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;lt; 代码分析 &amp;gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;strcat函数会将右边的”OC”字符串拼接到s1的尾部，最后s1的内容就变成了”LOVEOC”：&lt;br&gt;&lt;img src=&quot;http://images2015.cnblogs.com/blog/776348/201608/776348-20160810145929012-605081378.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;strcat函数会从s1的第1个\0字符开始连接字符串，s1的第1个\0字符会被右边的字符串覆盖，连接完毕后在s1的尾部保留一个\0。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;注意下面的情况：&lt;/p&gt;
&lt;p&gt;&amp;lt; 代码示例 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; s1[&lt;span class=&quot;number&quot;&gt;30&lt;/span&gt;] = &amp;#123;&lt;span class=&quot;string&quot;&gt;&#39;L&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;m&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;j&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;\0&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;L&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;o&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;v&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;e&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;\0&#39;&lt;/span&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;strcat&lt;/span&gt;(s1, &lt;span class=&quot;string&quot;&gt;&quot;OC&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;%s\n&quot;&lt;/span&gt;, s1);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;lt; 输出结果 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight delphi&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;LmjOC&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;Program&lt;/span&gt; ended &lt;span class=&quot;keyword&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;exit&lt;/span&gt; code: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;lt; 代码分析 &amp;gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;第1行初始化的s1有2个\0，经过第2行的strcat函数后：&lt;br&gt;&lt;img src=&quot;http://images2015.cnblogs.com/blog/776348/201608/776348-20160810145937762-2089615226.png&quot; alt=&quot;&quot;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;strcmp&quot;&gt;&lt;a href=&quot;#strcmp&quot; class=&quot;headerlink&quot; title=&quot;strcmp&quot;&gt;&lt;/a&gt;strcmp&lt;/h3&gt;&lt;p&gt;这个函数可以用来比较2个字符串的大小。调用形式为：strcmp(字符串1, 字符串2)。&lt;/p&gt;
&lt;p&gt;两个字符串从左至右逐个字符比较（按照字符的ASCII码值的大小），直到字符不相同或者遇见’\0’为止。如果全部字符都相同，则返回值为0。如果不相同，则返回两个字符串中第一个不相同的字符ASCII码值的差。即字符串1大于字符串2时函数返回值为正，否则为负：&lt;/p&gt;
&lt;p&gt;&amp;lt; 代码示例 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight mipsasm&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;char &lt;span class=&quot;built_in&quot;&gt;s1&lt;/span&gt;[] = &lt;span class=&quot;string&quot;&gt;&quot;abc&quot;&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;char &lt;span class=&quot;built_in&quot;&gt;s2&lt;/span&gt;[] = &lt;span class=&quot;string&quot;&gt;&quot;abc&quot;&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;char &lt;span class=&quot;built_in&quot;&gt;s3&lt;/span&gt;[] = &lt;span class=&quot;string&quot;&gt;&quot;aBc&quot;&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;char &lt;span class=&quot;built_in&quot;&gt;s4&lt;/span&gt;[] = &lt;span class=&quot;string&quot;&gt;&quot;ccb&quot;&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;printf(&lt;span class=&quot;string&quot;&gt;&quot;%d, %d, %d\n&quot;&lt;/span&gt;, strcmp(&lt;span class=&quot;built_in&quot;&gt;s1&lt;/span&gt;, &lt;span class=&quot;built_in&quot;&gt;s2&lt;/span&gt;), strcmp(&lt;span class=&quot;built_in&quot;&gt;s1&lt;/span&gt;, &lt;span class=&quot;built_in&quot;&gt;s3&lt;/span&gt;), strcmp(&lt;span class=&quot;built_in&quot;&gt;s1&lt;/span&gt;, &lt;span class=&quot;built_in&quot;&gt;s4&lt;/span&gt;))&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;lt; 输出结果 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight delphi&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;32&lt;/span&gt;, -&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;Program&lt;/span&gt; ended &lt;span class=&quot;keyword&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;exit&lt;/span&gt; code: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;lt; 代码分析 &amp;gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;s1和s2相同，所以返回0。&lt;/li&gt;
&lt;li&gt;s1和s3是第2个字符不相同，b的ASCII码值是98，B的ASCII码值是66，b - B = 32，所以返回32。&lt;/li&gt;
&lt;li&gt;s1和s4是第1个字符就不相同，a的ASCII码值是97，c的ASCII码值是99，a - c = -2，所以返回-2。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;参考&quot;&gt;&lt;a href=&quot;#参考&quot; class=&quot;headerlink&quot; title=&quot;参考&quot;&gt;&lt;/a&gt;参考&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;http://www.cnblogs.com/mjios/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;M了个J的博客&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
</content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;C语言中没有String这种类型。其实字符串就是字符序列，由多个字符组成，所以在C语言中，我们可以用字符数组来存储字符串&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="1.0　【C语法】" scheme="http://sanfordy.com/categories/1-0-%E3%80%90C%E8%AF%AD%E6%B3%95%E3%80%91/"/>
    
    
  </entry>
  
  <entry>
    <title>【13】数组</title>
    <link href="http://sanfordy.com/2016/08/01/1-0%20.C%E8%AF%AD%E6%B3%95/%E3%80%9013%E3%80%91%E6%95%B0%E7%BB%84/"/>
    <id>http://sanfordy.com/2016/08/01/1-0 .C语法/【13】数组/</id>
    <published>2016-08-01T02:52:05.000Z</published>
    <updated>2016-08-10T01:39:46.000Z</updated>
    
    <content type="html">&lt;blockquote&gt;
&lt;p&gt;定义数组时，系统将按照数组类型和个数分配一段连续的存储空间来存储数组元素，如int a[3]占据了连续的6字节存储空间（在16位编译器环境下，一个int类型占用2个字节）。要注意的是，数组名代表着整个数组的地址，也就是数组的起始地址。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;地址&quot;&gt;&lt;a href=&quot;#地址&quot; class=&quot;headerlink&quot; title=&quot;地址&quot;&gt;&lt;/a&gt;地址&lt;/h2&gt;&lt;p&gt;为了让大家更好地学习和理解数组，我们先来认识一下内存中的”地址”。计算机中的内存是以字节为单位的存储空间。内存的每一个字节都有一个唯一的编号，这个编号就称为地址。凡存放在内存中的程序和数据都有一个地址，也就是说，一个函数也有自己的内存地址。&lt;/p&gt;
&lt;p&gt;当定义一个变量时，系统就分配一个带有唯一地址的存储单元来存储这个变量，比如：&lt;/p&gt;
&lt;p&gt;&amp;lt; 代码示例 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; a = &lt;span class=&quot;string&quot;&gt;&#39;A&#39;&lt;/span&gt;; &lt;span class=&quot;comment&quot;&gt;// A的ASCII值为65&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; b = &lt;span class=&quot;number&quot;&gt;66&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;lt; 代码分析 &amp;gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在16bit编译器环境下，系统为a、b分别分配1个字节、2个字节的存储单元。变量存储单元的第一个字节的地址就是该变量的地址：&lt;br&gt;&lt;img src=&quot;http://images2015.cnblogs.com/blog/776348/201608/776348-20160809182257637-1614323130.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;可以看出，变量a的地址是ffc3；变量b的地址是ffc1。内存中存储的都是2进制数据。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在调试过程中，我们采取打印的方式查看变量的地址：&lt;/p&gt;
&lt;p&gt;&amp;lt; 代码示例 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; c = &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 以16进制形式输出地址&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;16进制:%x\n&quot;&lt;/span&gt;, &amp;amp;c);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 以10进制形式输出地址&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;10进制:%d\n&quot;&lt;/span&gt;, &amp;amp;c);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;lt; 输出结果 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight delphi&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;16&lt;/span&gt;进制:&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;fbff7ec&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;进制:&lt;span class=&quot;number&quot;&gt;1606416364&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;Program&lt;/span&gt; ended &lt;span class=&quot;keyword&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;exit&lt;/span&gt; code: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;一维数组&quot;&gt;&lt;a href=&quot;#一维数组&quot; class=&quot;headerlink&quot; title=&quot;一维数组&quot;&gt;&lt;/a&gt;一维数组&lt;/h2&gt;&lt;h3 id=&quot;一维数组的定义&quot;&gt;&lt;a href=&quot;#一维数组的定义&quot; class=&quot;headerlink&quot; title=&quot;一维数组的定义&quot;&gt;&lt;/a&gt;一维数组的定义&lt;/h3&gt;&lt;p&gt;定义的形式为：类型  数组名[元素个数]。&lt;/p&gt;
&lt;p&gt;&amp;lt; 代码示例 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; a[&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;[]只能放在数组名的后面，下面的都是错误写法：&lt;/p&gt;
&lt;p&gt;&amp;lt; 代码示例 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;[&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;] a; &lt;span class=&quot;comment&quot;&gt;// 错误&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;[] b; &lt;span class=&quot;comment&quot;&gt;// 错误&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;[]里面的个数必须是一个固定值，可以是常量（比如6、8）、常量表达式（比如3+4、5*7）。绝对不能使用变量或者变量表达式来表示元素个数，大多数情况下不要省略元素个数（当数组作为函数的形参和数组初始化时除外）：&lt;/p&gt;
&lt;p&gt;&amp;lt; 代码示例 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//  下面的都是正确写法  //&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;  a[&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;];   &lt;span class=&quot;comment&quot;&gt;// 整型常量&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;  b[&lt;span class=&quot;string&quot;&gt;&#39;A&#39;&lt;/span&gt;];  &lt;span class=&quot;comment&quot;&gt;// 字符常量，其实就是65&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;  c[&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;*&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;];  &lt;span class=&quot;comment&quot;&gt;// 整型常量表达式&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//  下面的都是错误写法  //&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; a[]; &lt;span class=&quot;comment&quot;&gt;// 没有指定元素个数，错误&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;9&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; a[i]; &lt;span class=&quot;comment&quot;&gt;// 用变量做元素个数，错误&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;一维数组的存储&quot;&gt;&lt;a href=&quot;#一维数组的存储&quot; class=&quot;headerlink&quot; title=&quot;一维数组的存储&quot;&gt;&lt;/a&gt;一维数组的存储&lt;/h3&gt;&lt;p&gt;定义数组时，系统将按照数组类型和个数分配一段连续的存储空间来存储数组元素，如int a[3]占据了连续的6字节存储空间（在16位编译器环境下，一个int类型占用2个字节）。要注意的是，数组名代表着整个数组的地址，也就是数组的起始地址：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2015.cnblogs.com/blog/776348/201608/776348-20160809214541777-1132269344.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;数组a的地址是ffc1，a[0]的地址是ffc1，a[1]的地址是ffc3，a[2]的地址是ffc5。因此a == &amp;amp;a[0]，即第一个元素的地址就是整个数组的地址。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;注意&lt;/strong&gt;：其实a不算是变量，是个常量，它代表着数组的地址。上图把a放到变量一栏是为了方便大家理解数组结构。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;一维数组的初始化&quot;&gt;&lt;a href=&quot;#一维数组的初始化&quot; class=&quot;headerlink&quot; title=&quot;一维数组的初始化&quot;&gt;&lt;/a&gt;一维数组的初始化&lt;/h3&gt;&lt;p&gt;初始化的一般形式是：类型  数组名[元素个数] = {元素1, 元素2, …};&lt;/p&gt;
&lt;p&gt;&amp;lt; 代码示例 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; a[&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;] = &amp;#123;&lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;元素值列表可以是数组所有元素的初值，也可以是前面部分元素的初值：&lt;/p&gt;
&lt;p&gt;&amp;lt; 代码示例 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; a[&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;] = &amp;#123;&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;lt; 代码分析 &amp;gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;当数组为整型时，初始化未确定初值的元素，默认为0，所以上面的a[2]、a[3]都为0。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;当对全部数组元素都赋初值时，可以省略元素个数：&lt;/p&gt;
&lt;p&gt;&amp;lt; 代码示例 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; a[] = &amp;#123;&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;7&lt;/span&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;lt; 代码分析 &amp;gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;说明数组a的元素个数是3。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;数组初始化时的赋值方式只能用于数组的定义，定义之后只能一个元素一个元素地赋值：&lt;/p&gt;
&lt;p&gt;&amp;lt; 代码示例 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; a[&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;a[&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;] = &amp;#123;&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;&amp;#125;; &lt;span class=&quot;comment&quot;&gt;// 错误&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;a = &amp;#123;&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;&amp;#125;; &lt;span class=&quot;comment&quot;&gt;// 错误&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;lt; 代码分析 &amp;gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;第2行的a[3]代表着访问数组的第4个元素，首先这里已经是数组下标越界了；就算没有越界，给a[3]赋值时也应该赋一个int类型的整数，不应该是{}。&lt;/li&gt;
&lt;li&gt;第3行的a是数组名，代表着数组的地址，它是个常量！给常量赋值，那肯定错了！&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;一维数组与函数参数&quot;&gt;&lt;a href=&quot;#一维数组与函数参数&quot; class=&quot;headerlink&quot; title=&quot;一维数组与函数参数&quot;&gt;&lt;/a&gt;一维数组与函数参数&lt;/h3&gt;&lt;p&gt;一维数组的元素作为函数实参，与同类型的简单变量作为实参一样，是单向的值传递，即数组元素的值传给形参，形参的改变不影响实参：&lt;/p&gt;
&lt;p&gt;&amp;lt; 代码示例 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// b是test函数的形参(形式参数)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; b)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    b = &lt;span class=&quot;number&quot;&gt;9&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; a[&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    a[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;] = &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;函数调用前的a[0]：%d\n&quot;&lt;/span&gt;, a[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    test(a[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;]); &lt;span class=&quot;comment&quot;&gt;// a[0]是test函数的实参(实际参数)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;函数调用后的a[0]：%d\n&quot;&lt;/span&gt;, a[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;lt; 输出结果 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight stylus&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;函数调用前的&lt;span class=&quot;selector-tag&quot;&gt;a&lt;/span&gt;[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;]：&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;函数调用后的&lt;span class=&quot;selector-tag&quot;&gt;a&lt;/span&gt;[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;]：&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Program ended with exit &lt;span class=&quot;selector-tag&quot;&gt;code&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;大家都知道，数组名代表着整个数组的地址，如果一维数组的名字作为函数实参，传递的是整个数组，即形参数组和实参数组完全等同，是存放在同一存储空间的同一个数组。这样形参数组修改时，实参数组也同时被修改了。形参数组的元素个数可以省略：&lt;/p&gt;
&lt;p&gt;&amp;lt; 代码示例 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// b是test函数的形参(形式参数)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; b[])&lt;/span&gt; &lt;/span&gt;&amp;#123; &lt;span class=&quot;comment&quot;&gt;// 也可以写int b[3]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    b[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;] = &lt;span class=&quot;number&quot;&gt;9&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; a[&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    a[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;] = &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;函数调用前的a[0]：%d\n&quot;&lt;/span&gt;, a[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    test(a); &lt;span class=&quot;comment&quot;&gt;// a是test函数的实参(实际参数)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;函数调用后的a[0]：%d\n&quot;&lt;/span&gt;, a[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;lt; 输出结果 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight stylus&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;函数调用前的&lt;span class=&quot;selector-tag&quot;&gt;a&lt;/span&gt;[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;]：&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;函数调用后的&lt;span class=&quot;selector-tag&quot;&gt;a&lt;/span&gt;[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;]：&lt;span class=&quot;number&quot;&gt;9&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Program ended with exit &lt;span class=&quot;selector-tag&quot;&gt;code&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;二维数组&quot;&gt;&lt;a href=&quot;#二维数组&quot; class=&quot;headerlink&quot; title=&quot;二维数组&quot;&gt;&lt;/a&gt;二维数组&lt;/h2&gt;&lt;h3 id=&quot;二维数组的定义&quot;&gt;&lt;a href=&quot;#二维数组的定义&quot; class=&quot;headerlink&quot; title=&quot;二维数组的定义&quot;&gt;&lt;/a&gt;二维数组的定义&lt;/h3&gt;&lt;p&gt;定义形式：类型  数组名[行数][列数];&lt;/p&gt;
&lt;h3 id=&quot;二维数组的存储&quot;&gt;&lt;a href=&quot;#二维数组的存储&quot; class=&quot;headerlink&quot; title=&quot;二维数组的存储&quot;&gt;&lt;/a&gt;二维数组的存储&lt;/h3&gt;&lt;p&gt;C语言把二维数组当作是一维数组的集合，即二维数组是一个特殊的一维数组：它的元素是一维数组。例如int a[2][3]可以看作由一维数组a[0]和一维数组a[1]组成，这两个一维数组都包含了3个int类型的元素：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2015.cnblogs.com/blog/776348/201608/776348-20160809215946137-1142619093.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;二维数组的存放顺序是按行存放的，先存放第一行的元素，再存放第2行的元素。例如int a[2][3]的存放顺序是：a[0][0] → a[0][1] → a[0][2] → a[1][0] → a[1][1] → a[1][2]。&lt;/p&gt;
&lt;p&gt;再来看看在内存中的存储情况，例如int a[2][2]：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2015.cnblogs.com/blog/776348/201608/776348-20160809215954371-182260266.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;a[0]、a[1]也是数组，是一维数组，而且a[0]、a[1]就是数组名，因此a[0]、a[1]就代表着这个一维数组的地址。&lt;/li&gt;
&lt;li&gt;数组a的地址是ffc1，数组a[0]的地址也是ffc1，即a = a[0]；&lt;/li&gt;
&lt;li&gt;元素a[0][0]的地址是ffc1，所以数组a[0]的地址和元素a[0][0]的地址相同，即a[0] = &amp;amp;a[0][0]；&lt;/li&gt;
&lt;li&gt;最终可以得出结论：a = a[0] = &amp;amp;a[0][0]，以此类推，可以得出a[1] = &amp;amp;a[1][0]&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;二维数组的初始化&quot;&gt;&lt;a href=&quot;#二维数组的初始化&quot; class=&quot;headerlink&quot; title=&quot;二维数组的初始化&quot;&gt;&lt;/a&gt;二维数组的初始化&lt;/h3&gt;&lt;p&gt;按行进行初始化：&lt;/p&gt;
&lt;p&gt;&amp;lt; 代码示例 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; a[&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;][&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;] = &amp;#123; &amp;#123;&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;&amp;#125;, &amp;#123;&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;&amp;#125; &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;按存储顺序进行初始化（先存放第1行，再存放第2行）：&lt;/p&gt;
&lt;p&gt;&amp;lt; 代码示例 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; a[&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;][&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;] = &amp;#123;&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;对部分元素进行初始化：&lt;/p&gt;
&lt;p&gt;&amp;lt; 代码示例 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; a[&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;][&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;] = &amp;#123; &amp;#123;&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;&amp;#125;, &amp;#123;&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;&amp;#125; &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; b[&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;][&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;] = &amp;#123; &amp;#123; &amp;#125;, &amp;#123; , , &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;&amp;#125;, &amp;#123;&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;&amp;#125;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;如果只初始化了部分元素，可以省略行数，但是不可以省略列数：&lt;/p&gt;
&lt;p&gt;&amp;lt; 代码示例 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; a[][&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;] = &amp;#123;&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; a[][&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;] = &amp;#123;&amp;#123;&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;&amp;#125;, &amp;#123;&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;&amp;#125;, &amp;#123;&amp;#125;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;有些人可能想不明白，为什么可以省略行数，但不可以省略列数。也有人可能会问，可不可以只指定行数，但是省略列数？其实这个问题很简单，如果我们这样写：&lt;/p&gt;
&lt;p&gt;&amp;lt; 代码示例 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; a[&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;][] = &amp;#123;&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;&amp;#125;; &lt;span class=&quot;comment&quot;&gt;// 错误写法&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;lt; 代码分析 &amp;gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;大家都知道，二维数组会先存放第1行的元素，由于不确定列数，也就是不确定第1行要存放多少个元素，所以这里会产生很多种情况，可能1、2是属于第1行的，也可能1、2、3、4是第一行的，甚至1、2、3、4、5、6全部都是属于第1行的&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;二维数组与函数参数&quot;&gt;&lt;a href=&quot;#二维数组与函数参数&quot; class=&quot;headerlink&quot; title=&quot;二维数组与函数参数&quot;&gt;&lt;/a&gt;二维数组与函数参数&lt;/h3&gt;&lt;p&gt;&amp;lt; 代码示例 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; argc, &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; * argv[])&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#123;   &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; a1[][&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;])&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; a[&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;][&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;] = &amp;#123;&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;23&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;7&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;7&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//  把二维数组名a传递给a1.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    f(a);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;a[1][2]：%d\n&quot;&lt;/span&gt;,a[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;][&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//  a1[][3]在第二维大小相同的前提下，形参数组的第一位可以与实参数组不同，例如实参为a[3][3]，形参可以为a[6][3]，a[111][3].&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; a1[][&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;])&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    a1[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;][&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;] = &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;lt; 输出结果 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight markdown&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;a[&lt;span class=&quot;string&quot;&gt;1&lt;/span&gt;][&lt;span class=&quot;symbol&quot;&gt;2&lt;/span&gt;]：4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Program ended with exit code: 0&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;字符数组&quot;&gt;&lt;a href=&quot;#字符数组&quot; class=&quot;headerlink&quot; title=&quot;字符数组&quot;&gt;&lt;/a&gt;字符数组&lt;/h2&gt;&lt;p&gt;字符数组用于存放字符变量的数组称为字符数组。&lt;/p&gt;
&lt;p&gt;字符数组属于⼀维数组，定义方式与普通一维数组相似，只是类型是char。 字符数组的定义: &lt;/p&gt;
&lt;p&gt;&amp;lt; 代码示例 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;￼&lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; c[&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;] = &amp;#123;‘i’ , ‘P’ , ‘h’ , ‘o’ , ‘n’ , ‘e’&amp;#125;; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; c[&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;] = “iPhone” ;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;注意：有‘\0’结束标识的字符数组也称为字符串。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;字符串数组&quot;&gt;&lt;a href=&quot;#字符串数组&quot; class=&quot;headerlink&quot; title=&quot;字符串数组&quot;&gt;&lt;/a&gt;字符串数组&lt;/h2&gt;&lt;h3 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h3&gt;&lt;p&gt;字符串数组本质上是二维字符数组。&lt;/p&gt;
&lt;p&gt;一维字符数组中存放一个字符串，比如一个名字char name[] = “mj”，直接赋值为字符串，此时不需要手动添加\0，编译器会自动添加。&lt;/p&gt;
&lt;p&gt;如果要存储多个字符串，比如一个班所有学生的名字，则需要二维字符数组，char names[15][20]可以存放15个学生的姓名(假设姓名不超过20字符)。&lt;/p&gt;
&lt;p&gt;如果要存储两个班的学生姓名，那么可以用三维字符数组char names[2][15][20]。&lt;/p&gt;
&lt;h3 id=&quot;字符串数组的初始化&quot;&gt;&lt;a href=&quot;#字符串数组的初始化&quot; class=&quot;headerlink&quot; title=&quot;字符串数组的初始化&quot;&gt;&lt;/a&gt;字符串数组的初始化&lt;/h3&gt;&lt;p&gt;&amp;lt; 代码示例 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; names[&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;][&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;] = &amp;#123; &amp;#123;&lt;span class=&quot;string&quot;&gt;&#39;J&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;a&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;y&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;\0&#39;&lt;/span&gt;&amp;#125;, &amp;#123;&lt;span class=&quot;string&quot;&gt;&#39;J&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;i&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;m&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;\0&#39;&lt;/span&gt;&amp;#125; &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; names2[&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;][&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;] = &amp;#123; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;Jay&quot;&lt;/span&gt;&amp;#125;, &amp;#123;&lt;span class=&quot;string&quot;&gt;&quot;Jim&quot;&lt;/span&gt;&amp;#125; &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; names3[&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;][&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;] = &amp;#123; &lt;span class=&quot;string&quot;&gt;&quot;Jay&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;Jim&quot;&lt;/span&gt; &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;lt; 代码分析 &amp;gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;可以把字符串数组看作是一维数组，它的元素是字符串。字符串数组names由字符串”Jay”和字符串”Jim”构成。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;参考&quot;&gt;&lt;a href=&quot;#参考&quot; class=&quot;headerlink&quot; title=&quot;参考&quot;&gt;&lt;/a&gt;参考&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;http://www.cnblogs.com/mjios/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;M了个J的博客&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
</content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;定义数组时，系统将按照数组类型和个数分配一段连续的存储空间来存储数组元素，如int a[3]占据了连续的6字节存储空间（在16位编译器环境下，一个int类型占用2个字节）。要注意的是，数组名代表着整个数组的地址，也就是数组的起始地址。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="1.0　【C语法】" scheme="http://sanfordy.com/categories/1-0-%E3%80%90C%E8%AF%AD%E6%B3%95%E3%80%91/"/>
    
    
  </entry>
  
  <entry>
    <title>【12】基本运算</title>
    <link href="http://sanfordy.com/2016/08/01/1-0%20.C%E8%AF%AD%E6%B3%95/%E3%80%9012%E3%80%91%E5%9F%BA%E6%9C%AC%E8%BF%90%E7%AE%97/"/>
    <id>http://sanfordy.com/2016/08/01/1-0 .C语法/【12】基本运算/</id>
    <published>2016-08-01T00:52:05.000Z</published>
    <updated>2016-08-09T09:51:15.000Z</updated>
    
    <content type="html">&lt;blockquote&gt;
&lt;p&gt;计算机的基本能力就是计算，所以一门程序设计语言的计算能力是非常重要的。C语言之所以无所不能，是因为它不仅有丰富的数据类型，还有强大的计算能力。C语言一共有34种运算符，包括了常见的加减乘除运算。这讲就对C语言中的运算符做一个详细介绍。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;计算机的基本能力就是计算，所以一门程序设计语言的计算能力是非常重要的。C语言之所以无所不能，是因为它不仅有丰富的数据类型，还有强大的计算能力。C语言一共有34种运算符，包括了常见的加减乘除运算。这讲就对C语言中的运算符做一个详细介绍。&lt;/p&gt;
&lt;h2 id=&quot;算术运算符&quot;&gt;&lt;a href=&quot;#算术运算符&quot; class=&quot;headerlink&quot; title=&quot;算术运算符&quot;&gt;&lt;/a&gt;算术运算符&lt;/h2&gt;&lt;p&gt;算术运算符非常地简单，就是小学数学里面的一些加减乘除操作。不过呢，还是有一些语法细节需要注意的。&lt;/p&gt;
&lt;h3 id=&quot;加法运算符：&quot;&gt;&lt;a href=&quot;#加法运算符：&quot; class=&quot;headerlink&quot; title=&quot;加法运算符：+&quot;&gt;&lt;/a&gt;加法运算符：+&lt;/h3&gt;&lt;p&gt;跟平时用的加号一样。&lt;/p&gt;
&lt;h3 id=&quot;减法运算符-或-负值运算符：&quot;&gt;&lt;a href=&quot;#减法运算符-或-负值运算符：&quot; class=&quot;headerlink&quot; title=&quot;减法运算符 或 负值运算符：-&quot;&gt;&lt;/a&gt;减法运算符 或 负值运算符：-&lt;/h3&gt;&lt;p&gt;&amp;lt; 代码示例 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; b = &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt; - &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; a = &lt;span class=&quot;number&quot;&gt;-10&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;lt; 代码分析 &amp;gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在第1行利用减法运算符 - 进行了减法运算，再将差赋值给了变量b，最终变量b的值是5。&lt;/li&gt;
&lt;li&gt;在第3行中，这个 - 并不是什么减法运算符，而算是一个负值运算符，-10代表的是负十。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;乘法运算符：&quot;&gt;&lt;a href=&quot;#乘法运算符：&quot; class=&quot;headerlink&quot; title=&quot;乘法运算符：*&quot;&gt;&lt;/a&gt;乘法运算符：*&lt;/h3&gt;&lt;p&gt;&amp;lt; 代码示例 &amp;gt; &lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; b = &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt; * &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;lt; 代码分析 &amp;gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;乘法运算符并不是x或者X，而是星号*。变量b最终的值是50。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;除法运算符：&quot;&gt;&lt;a href=&quot;#除法运算符：&quot; class=&quot;headerlink&quot; title=&quot;除法运算符：/&quot;&gt;&lt;/a&gt;除法运算符：/&lt;/h3&gt;&lt;p&gt;除法运算符并不是÷，而是一个正斜杠 /。&lt;/p&gt;
&lt;p&gt;&amp;lt; 代码示例 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;double&lt;/span&gt; a = &lt;span class=&quot;number&quot;&gt;10.0&lt;/span&gt; / &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;double&lt;/span&gt; b = &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt; / &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;a=%f, b=%f \n&quot;&lt;/span&gt;, a, b);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;lt; 输出结果 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight delphi&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;a=&lt;span class=&quot;number&quot;&gt;2.500000&lt;/span&gt;, b=&lt;span class=&quot;number&quot;&gt;2.000000&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;Program&lt;/span&gt; ended &lt;span class=&quot;keyword&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;exit&lt;/span&gt; code: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;lt; 代码分析 &amp;gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;第1行中的10.0是浮点型，4是整型，因此会将4自动类型提升为浮点型后再进行运算，最后变量b的值是2.5。&lt;/li&gt;
&lt;li&gt;第2行中的10和4都是整型，计算机中的运算有个原则：相同数据类型的值才能进行运算，而且运算结果依然是同一种数据类型。因此，整数除于整数，求出来的结果依然是整数，会损失小数部分。&lt;/li&gt;
&lt;li&gt;如果想让整数除于整数不损失精度的话，可以将某个整数强制转换为浮点型数据。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;模运算符-或称-取余运算符：&quot;&gt;&lt;a href=&quot;#模运算符-或称-取余运算符：&quot; class=&quot;headerlink&quot; title=&quot;模运算符 或称 取余运算符：%&quot;&gt;&lt;/a&gt;模运算符 或称 取余运算符：%&lt;/h3&gt;&lt;p&gt;这个%并不是除号÷，它是一个取余运算符，或者叫做模运算符。取余的意思是，取得两个整数相除之后的余数。比如，5除于2的余数是1，5除于3的余数是2。因此使用这个%有个原则：%两侧必须都为整数。下面的写法是错误的：&lt;/p&gt;
&lt;p&gt;&amp;lt; 代码示例 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; a = &lt;span class=&quot;number&quot;&gt;5.0&lt;/span&gt; % &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;lt; 代码分析 &amp;gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;编译器会直接报错，因为5.0并非整数。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;正数取余&quot;&gt;&lt;a href=&quot;#正数取余&quot; class=&quot;headerlink&quot; title=&quot;正数取余&quot;&gt;&lt;/a&gt;正数取余&lt;/h4&gt;&lt;p&gt;&amp;lt; 代码示例 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; a = &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt; % &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; b = &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; % &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;lt; 代码分析 &amp;gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;简单计算可得：变量a的值为1，变量b的值为2。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;负数取余&quot;&gt;&lt;a href=&quot;#负数取余&quot; class=&quot;headerlink&quot; title=&quot;负数取余&quot;&gt;&lt;/a&gt;负数取余&lt;/h4&gt;&lt;p&gt;&amp;lt; 代码示例 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; a = &lt;span class=&quot;number&quot;&gt;-5&lt;/span&gt; % &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; b = &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt; % &lt;span class=&quot;number&quot;&gt;-2&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; c = &lt;span class=&quot;number&quot;&gt;-5&lt;/span&gt; % &lt;span class=&quot;number&quot;&gt;-2&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;lt; 代码分析 &amp;gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;利用%求出来的余数是正数还是负数，由%左边的被除数决定，被除数是正数，余数就是正数，反之则反。因此变量a、b、c的值分别是-1、1、-1。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;运算顺序&quot;&gt;&lt;a href=&quot;#运算顺序&quot; class=&quot;headerlink&quot; title=&quot;运算顺序&quot;&gt;&lt;/a&gt;运算顺序&lt;/h3&gt;&lt;h4 id=&quot;算术表达式&quot;&gt;&lt;a href=&quot;#算术表达式&quot; class=&quot;headerlink&quot; title=&quot;算术表达式&quot;&gt;&lt;/a&gt;算术表达式&lt;/h4&gt;&lt;p&gt;用算术运算符将数据连接起来的式子，称为“算术表达式”。比如a + b、10 * 5等。如果表达式比较复杂的话，那么就要注意一下它的运算顺序。表达式的运算顺序是按照运算符的结合方向和优先级进行的。&lt;/p&gt;
&lt;h4 id=&quot;结合方向&quot;&gt;&lt;a href=&quot;#结合方向&quot; class=&quot;headerlink&quot; title=&quot;结合方向&quot;&gt;&lt;/a&gt;结合方向&lt;/h4&gt;&lt;p&gt;算术运算符的结合方向是从左到右。例如表达式2+3+4，先计算2+3。&lt;/p&gt;
&lt;h4 id=&quot;优先级&quot;&gt;&lt;a href=&quot;#优先级&quot; class=&quot;headerlink&quot; title=&quot;优先级&quot;&gt;&lt;/a&gt;优先级&lt;/h4&gt;&lt;p&gt;优先级越高，就越先进行运算，当优先级相同时，参照结合方向。&lt;/p&gt;
&lt;p&gt;算术运算符的优先级排序：负值运算符（-）&amp;gt; 乘（*）、除（/）、模（%）运算符 &amp;gt; 加（+）、减（-）运算符。&lt;/p&gt;
&lt;h4 id=&quot;小括号&quot;&gt;&lt;a href=&quot;#小括号&quot; class=&quot;headerlink&quot; title=&quot;小括号&quot;&gt;&lt;/a&gt;小括号&lt;/h4&gt;&lt;p&gt;如果需要先计算优先级低的可以使用小括号()括住，小括号的优先级是最高的！&lt;/p&gt;
&lt;h2 id=&quot;赋值运算符&quot;&gt;&lt;a href=&quot;#赋值运算符&quot; class=&quot;headerlink&quot; title=&quot;赋值运算符&quot;&gt;&lt;/a&gt;赋值运算符&lt;/h2&gt;&lt;p&gt;赋值运算符又分两种：简单赋值运算符 和 复合赋值运算符。&lt;/p&gt;
&lt;h3 id=&quot;简单赋值运算符：&quot;&gt;&lt;a href=&quot;#简单赋值运算符：&quot; class=&quot;headerlink&quot; title=&quot;简单赋值运算符：=&quot;&gt;&lt;/a&gt;简单赋值运算符：=&lt;/h3&gt;&lt;h4 id=&quot;简单用法&quot;&gt;&lt;a href=&quot;#简单用法&quot; class=&quot;headerlink&quot; title=&quot;简单用法&quot;&gt;&lt;/a&gt;简单用法&lt;/h4&gt;&lt;p&gt;其实这个等号 = 从讲变量开始就见过它了，它的作用是将右边的值赋值给左边。&lt;/p&gt;
&lt;p&gt;&amp;lt; 代码示例 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;int a = 10 + 5;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;lt; 代码分析 &amp;gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;赋值运算符的结合方向是：从右到左，而且优先级比算术运算符低。因此先进行等号=右边的加法运算，运算完毕后再将结果赋值给等号右边的变量。最后变量a的值是15。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;连续赋值&quot;&gt;&lt;a href=&quot;#连续赋值&quot; class=&quot;headerlink&quot; title=&quot;连续赋值&quot;&gt;&lt;/a&gt;连续赋值&lt;/h4&gt;&lt;p&gt;&amp;lt; 代码示例 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt; int a, b;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;a = b = 10;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;lt; 代码分析 &amp;gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在第1行分别定义了int类型的变量a、b。&lt;/li&gt;
&lt;li&gt;第3行代码的意思：将10赋值给变量b，再把变量b的值赋值给a。所以最后变量a、b的值都是10。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;使用注意&quot;&gt;&lt;a href=&quot;#使用注意&quot; class=&quot;headerlink&quot; title=&quot;使用注意&quot;&gt;&lt;/a&gt;使用注意&lt;/h4&gt;&lt;p&gt;等号=左边只能是变量，不能是常量！常量都是不可变的，怎么可以再次赋值呢？下面的写法是错误的：&lt;/p&gt;
&lt;p&gt;&amp;lt; 代码示例 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt; = &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt; + &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;复合赋值运算符&quot;&gt;&lt;a href=&quot;#复合赋值运算符&quot; class=&quot;headerlink&quot; title=&quot;复合赋值运算符&quot;&gt;&lt;/a&gt;复合赋值运算符&lt;/h3&gt;&lt;p&gt;&amp;lt; 代码示例 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;a += &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;+&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;  &lt;span class=&quot;comment&quot;&gt;//  等价于 a = a +（3+2）。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;a -= &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;+&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;，&lt;span class=&quot;comment&quot;&gt;//  等价于 a = a -（3+2）。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;a *= &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;+&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;，&lt;span class=&quot;comment&quot;&gt;//  等价于 a = a *（3+2）。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;a /= &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;+&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;，&lt;span class=&quot;comment&quot;&gt;//  等价于 a = a /（3+2）。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;a %= &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;+&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;，&lt;span class=&quot;comment&quot;&gt;//  等价于 a = a %（3+2）。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;自增自减运算符&quot;&gt;&lt;a href=&quot;#自增自减运算符&quot; class=&quot;headerlink&quot; title=&quot;自增自减运算符&quot;&gt;&lt;/a&gt;自增自减运算符&lt;/h2&gt;&lt;p&gt;自增自减运算符都只能用于变量，你写个5++是错误的，因为5是常量。&lt;/p&gt;
&lt;h3 id=&quot;自增运算符：&quot;&gt;&lt;a href=&quot;#自增运算符：&quot; class=&quot;headerlink&quot; title=&quot;自增运算符：++&quot;&gt;&lt;/a&gt;自增运算符：++&lt;/h3&gt;&lt;p&gt;&amp;lt; 代码示例 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;a++; &lt;span class=&quot;comment&quot;&gt;//  等价于 a = a+1;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;++a; &lt;span class=&quot;comment&quot;&gt;//  等价于 a = a+1;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;自减运算符：–&quot;&gt;&lt;a href=&quot;#自减运算符：–&quot; class=&quot;headerlink&quot; title=&quot;自减运算符：–&quot;&gt;&lt;/a&gt;自减运算符：–&lt;/h3&gt;&lt;p&gt;&amp;lt; 代码示例 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;a--; &lt;span class=&quot;comment&quot;&gt;//  等价于 a = a-1;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;--a; &lt;span class=&quot;comment&quot;&gt;//  等价于 a = a-1;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;a和a-的区别&quot;&gt;&lt;a href=&quot;#a和a-的区别&quot; class=&quot;headerlink&quot; title=&quot;++a和a++的区别&quot;&gt;&lt;/a&gt;++a和a++的区别&lt;/h3&gt;&lt;p&gt;&amp;lt; 代码示例 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; a = &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; b = ++a;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; a = &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; b = a++;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;lt; 代码分析 &amp;gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;第1段代码：++a的意思是先对a执行+1操作，再将a的值赋值给b。因此最后a、b的值都是11。&lt;/li&gt;
&lt;li&gt;第2段代码：a++的意思是先将a的值拷贝出来一份，然后对a执行+1操作，于是a变成了11，但是拷贝出来的值还是10，a++运算完毕后，再将拷贝出来的值10赋值给了b，所以最后变量b的值是10，变量a的值是11。&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;注意&lt;/strong&gt;：自减运算符也是一样的区别。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;再来看一个比较刁钻的例子：&lt;/p&gt;
&lt;p&gt;&amp;lt; 代码示例 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; a = &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; a = a++;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;lt; 代码分析 &amp;gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;很多人一眼看上去，觉得最后a的值应该是11，其实最后a的值是10。前面已经说过a++的作用了，这里也是一样的。先将a的值拷贝出来一份，然后对a执行+1操作，于是a变成了11，但是拷贝出来的值还是10，a++运算完毕后，再将拷贝出来的值10赋值给了a，所以最后变量a的值是10。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;逗号运算符&quot;&gt;&lt;a href=&quot;#逗号运算符&quot; class=&quot;headerlink&quot; title=&quot;逗号运算符&quot;&gt;&lt;/a&gt;逗号运算符&lt;/h2&gt;&lt;p&gt;逗号运算符“,”主要用于连接表达式，用逗号运算符连接起来的表达式称为逗号表达式。它的一般形式为：表达式1, 表达式2, … …, 表达式n。&lt;/p&gt;
&lt;p&gt;逗号表达式的运算过程是：从左到右的顺序，先计算表达式1，接着计算表达式2，…，最后计算表达式n，整个逗号表达式的值是最后一个表达式的值：&lt;/p&gt;
&lt;p&gt;&amp;lt; 代码示例 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; a = &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; b = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; c;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;c = (++a, a *= &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, b = a / &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;c = %d&quot;&lt;/span&gt;, c);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;lt; 输出结果 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight delphi&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;c = &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;Program&lt;/span&gt; ended &lt;span class=&quot;keyword&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;exit&lt;/span&gt; code: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;lt; 代码分析 &amp;gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;++a的结果为3，a *= 2的结果为6，b = a / 3的结果为2。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这里要注意的是，右边的表达式是有用括号()包住的，如果不用括号包住，也就是：&lt;/p&gt;
&lt;p&gt;&amp;lt; 代码示例 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;c = ++a, a *= &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, b = a / &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;c = %d&quot;&lt;/span&gt;, c);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;lt; 输出结果 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight delphi&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;c = &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;Program&lt;/span&gt; ended &lt;span class=&quot;keyword&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;exit&lt;/span&gt; code: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;lt; 代码分析 &amp;gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;因为c = ++a也属于逗号表达式的一部分，跟后面的a *= 2以及b = a / 3是相互独立的。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;关系运算符&quot;&gt;&lt;a href=&quot;#关系运算符&quot; class=&quot;headerlink&quot; title=&quot;关系运算符&quot;&gt;&lt;/a&gt;关系运算符&lt;/h2&gt;&lt;h3 id=&quot;“真”与“假”&quot;&gt;&lt;a href=&quot;#“真”与“假”&quot; class=&quot;headerlink&quot; title=&quot;“真”与“假”&quot;&gt;&lt;/a&gt;“真”与“假”&lt;/h3&gt;&lt;p&gt;默认情况下，我们在程序中写的每一句正确代码都会被执行。但很多时候，我们想在某个条件成立的情况下才执行某一段代码。比如微信的这个界面：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2015.cnblogs.com/blog/776348/201607/776348-20160731215744731-1017647345.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;如果用户点击了注册按钮，我们就执行“跳转到注册界面”的代码；如果用户点击了登录按钮，我们就执行“跳转到登录界面”的代码。如果用户没做出任何操作，就不执行前面所说的两段代码。像这种情况的话可以使用条件语句来完成，但是我们暂时不学习条件语句，先来看一些更基础的知识：如何判断一个条件成不成立。如果这个都不会判断，还执行什么代码。&lt;/p&gt;
&lt;p&gt;在C语言中，条件成立称为“真”，条件不成立称为“假”，因此，判断条件是否成立，就是判断条件的“真假”。那怎么判断真假呢？C语言规定，任何非0值都为“真”，只有0才为“假”。也就是说，108、-18、4.5、-10.5等都是“真”，0则是“假”。&lt;/p&gt;
&lt;h3 id=&quot;关系运算符的简单使用&quot;&gt;&lt;a href=&quot;#关系运算符的简单使用&quot; class=&quot;headerlink&quot; title=&quot;关系运算符的简单使用&quot;&gt;&lt;/a&gt;关系运算符的简单使用&lt;/h3&gt;&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;a&amp;lt;&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;;&lt;span class=&quot;comment&quot;&gt;//  小于&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;a&amp;lt;=&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;;&lt;span class=&quot;comment&quot;&gt;//  小于等于&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;a&amp;gt;&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;;&lt;span class=&quot;comment&quot;&gt;//  大于&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;a&amp;gt;=&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;;&lt;span class=&quot;comment&quot;&gt;//  大于等于&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;a==&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;;&lt;span class=&quot;comment&quot;&gt;//  等于&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;a!=&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;;&lt;span class=&quot;comment&quot;&gt;//  不等于&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;关系运算符的运算结果只有2种：如果条件成立，结果就为1，也就是“真”；如果条件不成立，结果就为0，也就是“假”：&lt;/p&gt;
&lt;p&gt;&amp;lt; 代码示例 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; a1 = &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt; &amp;gt; &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;; &lt;span class=&quot;comment&quot;&gt;// 1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; a2 = &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt; &amp;lt; &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;; &lt;span class=&quot;comment&quot;&gt;// 0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;关系运算符的使用注意&quot;&gt;&lt;a href=&quot;#关系运算符的使用注意&quot; class=&quot;headerlink&quot; title=&quot;关系运算符的使用注意&quot;&gt;&lt;/a&gt;关系运算符的使用注意&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;关系运算符中==、!=的优先级相等，&amp;lt;、&amp;lt;=、&amp;gt;、&amp;gt;=的优先级相等，且前者的优先级低于后者。eg：2==3&amp;gt;1 ：先算3&amp;gt;1，条件成立，结果为1。再计算2==1，条件不成立，结果为0。因此2==3&amp;gt;1的结果为0。&lt;/li&gt;
&lt;li&gt;关系运算符的结合方向为“从左往右”。eg：4&amp;gt;3&amp;gt;2 ：先算4&amp;gt;3，条件成立，结果为1。再与2比较，即1&amp;gt;2，条件不成立，结果为0。因此4&amp;gt;3&amp;gt;2的结果为0。&lt;/li&gt;
&lt;li&gt;关系运算符的优先级小于算术运算符。eg：3+4&amp;gt;8-2 ：先计算3+4，结果为7。再计算8-2，结果为6。最后计算7&amp;gt;6，条件成立，结果为1。因此3+4&amp;gt;8-2的结果为1。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;逻辑运算符&quot;&gt;&lt;a href=&quot;#逻辑运算符&quot; class=&quot;headerlink&quot; title=&quot;逻辑运算符&quot;&gt;&lt;/a&gt;逻辑运算符&lt;/h2&gt;&lt;p&gt;有时候，我们需要在多个条件同时成立的时候才能执行某段代码，比如：用户只有同时输入了QQ和密码，才能执行登录代码，如果只输入了QQ或者只输入了密码，就不能执行登录代码。这种情况下，我们就要借助于C语言提供的逻辑运算符。&lt;/p&gt;
&lt;p&gt;C语言提供了3个逻辑运算符：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;逻辑与：&amp;amp;&amp;amp;&lt;/li&gt;
&lt;li&gt;逻辑或：||&lt;/li&gt;
&lt;li&gt;逻辑非：!&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;注意&lt;/strong&gt;：这些都是英文字符，不要写成中文字符。跟关系运算符一样，逻辑运算的结果只有2个：“真”为1，“假”为0&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;逻辑与：-amp-amp&quot;&gt;&lt;a href=&quot;#逻辑与：-amp-amp&quot; class=&quot;headerlink&quot; title=&quot;逻辑与：&amp;amp;&amp;amp;&quot;&gt;&lt;/a&gt;逻辑与：&amp;amp;&amp;amp;&lt;/h3&gt;&lt;h4 id=&quot;使用格式&quot;&gt;&lt;a href=&quot;#使用格式&quot; class=&quot;headerlink&quot; title=&quot;使用格式&quot;&gt;&lt;/a&gt;使用格式&lt;/h4&gt;&lt;p&gt;“条件A &amp;amp;&amp;amp; 条件B”&lt;/p&gt;
&lt;h4 id=&quot;运算结果&quot;&gt;&lt;a href=&quot;#运算结果&quot; class=&quot;headerlink&quot; title=&quot;运算结果&quot;&gt;&lt;/a&gt;运算结果&lt;/h4&gt;&lt;p&gt;只有当条件A和条件B都成立时，结果才为1，也就是“真”；其余情况的结果都为0，也就是“假”。因此，条件A或条件B只要有一个不成立，结果都为0，也就是“假”&lt;/p&gt;
&lt;h4 id=&quot;运算过程&quot;&gt;&lt;a href=&quot;#运算过程&quot; class=&quot;headerlink&quot; title=&quot;运算过程&quot;&gt;&lt;/a&gt;运算过程&lt;/h4&gt;&lt;p&gt;总是先判断条件A是否成立。如果条件A成立，接着再判断条件B是否成立：如果条件B成立，“条件A &amp;amp;&amp;amp; 条件B”的结果就为1，即“真”，如果条件B不成立，结果就为0，即“假”。如果条件A不成立，就不会再去判断条件B是否成立：因为条件A已经不成立了，不管条件B如何，“条件A &amp;amp;&amp;amp; 条件B”的结果肯定是0，也就是“假”。&lt;/p&gt;
&lt;h4 id=&quot;举例&quot;&gt;&lt;a href=&quot;#举例&quot; class=&quot;headerlink&quot; title=&quot;举例&quot;&gt;&lt;/a&gt;举例&lt;/h4&gt;&lt;p&gt;逻辑与的结合方向是“自左至右”。比如表达式 (a&amp;gt;3) &amp;amp;&amp;amp; (a&amp;lt;5)：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;若a的值是4：先判断a&amp;gt;3，成立；再判断a&amp;lt;5，也成立。因此结果为1&lt;/li&gt;
&lt;li&gt;若a的值是2：先判断a&amp;gt;3，不成立，停止判断。因此结果为0&lt;/li&gt;
&lt;li&gt;因此，如果a的值在(3, 5)这个范围内，结果就为1；否则，结果就为0&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&quot;注意&quot;&gt;&lt;a href=&quot;#注意&quot; class=&quot;headerlink&quot; title=&quot;注意&quot;&gt;&lt;/a&gt;注意&lt;/h4&gt;&lt;p&gt;若想判断a的值是否在(3, 5)范围内，千万不能写成3&lt;a&lt;5，因为关系运算符的结合方向为“从左往右”。比如a为2，它会先算3&lt;a，也就是3&lt;2，条件不成立，结果为0。再与5比较，即0&lt;5，条件成立，结果为1。因此3&lt;a&lt;5的结果为1，条件成立，也就是说当a的值为2时，a的值是在(3, 5)范围内的。这明显是不对的。正确的判断方法是：(a=&quot;&quot;&gt;3) &amp;amp;&amp;amp; (a&amp;lt;5)。&lt;/a&lt;5，因为关系运算符的结合方向为“从左往右”。比如a为2，它会先算3&lt;a，也就是3&lt;2，条件不成立，结果为0。再与5比较，即0&lt;5，条件成立，结果为1。因此3&lt;a&lt;5的结果为1，条件成立，也就是说当a的值为2时，a的值是在(3,&gt;&lt;/p&gt;
&lt;p&gt;C语言规定：任何非0值都为“真”，只有0才为“假”。因此逻辑与也适用于数值。比如 5 &amp;amp;&amp;amp; 4的结果是1，为“真”；-6 &amp;amp;&amp;amp; 0的结果是0，为“假”。&lt;/p&gt;
&lt;h3 id=&quot;逻辑或：&quot;&gt;&lt;a href=&quot;#逻辑或：&quot; class=&quot;headerlink&quot; title=&quot;逻辑或：||&quot;&gt;&lt;/a&gt;逻辑或：||&lt;/h3&gt;&lt;h4 id=&quot;使用格式-1&quot;&gt;&lt;a href=&quot;#使用格式-1&quot; class=&quot;headerlink&quot; title=&quot;使用格式&quot;&gt;&lt;/a&gt;使用格式&lt;/h4&gt;&lt;p&gt;“条件A || 条件B”&lt;/p&gt;
&lt;h4 id=&quot;运算结果-1&quot;&gt;&lt;a href=&quot;#运算结果-1&quot; class=&quot;headerlink&quot; title=&quot;运算结果&quot;&gt;&lt;/a&gt;运算结果&lt;/h4&gt;&lt;p&gt;当条件A或条件B只要有一个成立时（也包括条件A和条件B都成立），结果就为1，也就是“真”；只有当条件A和条件B都不成立时，结果才为0，也就是“假”。&lt;/p&gt;
&lt;h4 id=&quot;运算过程-1&quot;&gt;&lt;a href=&quot;#运算过程-1&quot; class=&quot;headerlink&quot; title=&quot;运算过程&quot;&gt;&lt;/a&gt;运算过程&lt;/h4&gt;&lt;p&gt;总是先判断条件A是否成立。如果条件A成立，就不会再去判断条件B是否成立：因为条件A已经成立了，不管条件B如何，“条件A || 条件B”的结果肯定是1，也就是“真”。如果条件A不成立，接着再判断条件B是否成立：如果条件B成立，“条件A || 条件B”的结果就为1，即“真”，如果条件B不成立，结果就为0，即“假”。&lt;/p&gt;
&lt;h4 id=&quot;举例-1&quot;&gt;&lt;a href=&quot;#举例-1&quot; class=&quot;headerlink&quot; title=&quot;举例&quot;&gt;&lt;/a&gt;举例&lt;/h4&gt;&lt;p&gt;逻辑或的结合方向是“自左至右”，比如表达式 (a&lt;3) ||=&quot;&quot; (a=&quot;&quot;&gt;5)。&lt;/3)&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;若a的值是4：先判断a&lt;3，不成立；再判断a&gt;5，也不成立。因此结果为0&lt;/3，不成立；再判断a&gt;&lt;/li&gt;
&lt;li&gt;若a的值是2：先判断a&amp;lt;3，成立，停止判断。因此结果为1&lt;/li&gt;
&lt;li&gt;因此，如果a的值在(-∞, 3)或者(5, +∞)范围内，结果就为1；否则，结果就为0&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&quot;注意-1&quot;&gt;&lt;a href=&quot;#注意-1&quot; class=&quot;headerlink&quot; title=&quot;注意&quot;&gt;&lt;/a&gt;注意&lt;/h4&gt;&lt;p&gt;C语言规定：任何非0值都为“真”，只有0才为“假”。因此逻辑或也适用于数值。比如 5 || 4的结果是1，为“真”；-6 || 0的结果是1，为“真”；0 || 0的结果是0，为“假”。&lt;/p&gt;
&lt;h3 id=&quot;逻辑非：&quot;&gt;&lt;a href=&quot;#逻辑非：&quot; class=&quot;headerlink&quot; title=&quot;逻辑非：!&quot;&gt;&lt;/a&gt;逻辑非：!&lt;/h3&gt;&lt;h4 id=&quot;使用格式-2&quot;&gt;&lt;a href=&quot;#使用格式-2&quot; class=&quot;headerlink&quot; title=&quot;使用格式&quot;&gt;&lt;/a&gt;使用格式&lt;/h4&gt;&lt;p&gt;“! 条件A”&lt;/p&gt;
&lt;h4 id=&quot;运算结果-2&quot;&gt;&lt;a href=&quot;#运算结果-2&quot; class=&quot;headerlink&quot; title=&quot;运算结果&quot;&gt;&lt;/a&gt;运算结果&lt;/h4&gt;&lt;p&gt;其实就是对条件A进行取反：若条件A成立，结果就为0，即“假”；若条件A不成立，结果就为1，即“真”。也就是说：真的变假，假的变真。&lt;/p&gt;
&lt;h4 id=&quot;举例-2&quot;&gt;&lt;a href=&quot;#举例-2&quot; class=&quot;headerlink&quot; title=&quot;举例&quot;&gt;&lt;/a&gt;举例&lt;/h4&gt;&lt;p&gt;逻辑非的结合方向是“自右至左”。比如表达式 ! (a&amp;gt;5)&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;若a的值是6：先判断a&amp;gt;5，成立，再取反之后的结果为0&lt;/li&gt;
&lt;li&gt;若a的值是2：先判断a&amp;gt;3，不成立，再取反之后的结果为1&lt;/li&gt;
&lt;li&gt;因此，如果a的值大于5，结果就为0；否则，结果就为1&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&quot;注意-2&quot;&gt;&lt;a href=&quot;#注意-2&quot; class=&quot;headerlink&quot; title=&quot;注意&quot;&gt;&lt;/a&gt;注意&lt;/h4&gt;&lt;p&gt;可以多次连续使用逻辑非运算符：!(4&amp;gt;2)结果为0，是“假”，!!(4&amp;gt;2)结果为1，是“真”，!!!(4&amp;gt;2)结果为0，是“假”&lt;/p&gt;
&lt;p&gt;C语言规定：任何非0值都为“真”，只有0才为“假”。因此，对非0值进行逻辑非!运算的结果都是0，对0值进行逻辑非!运算的结果为1。!5、!6.7、!-9的结果都为0，!0的结果为1&lt;/p&gt;
&lt;h3 id=&quot;优先级-1&quot;&gt;&lt;a href=&quot;#优先级-1&quot; class=&quot;headerlink&quot; title=&quot;优先级&quot;&gt;&lt;/a&gt;优先级&lt;/h3&gt;&lt;p&gt;逻辑运算符的优先级顺序为： 小括号() &amp;gt; 负号 - &amp;gt; ! &amp;gt; 算术运算符 &amp;gt; 关系运算符 &amp;gt; &amp;amp;&amp;amp; &amp;gt; ||。&lt;/p&gt;
&lt;p&gt;表达式!(3&amp;gt;5) || (2&lt;4) &amp;&amp;=&quot;&quot; (6&lt;1)=&quot;&quot; ：先计算=&quot;&quot; !(3=&quot;&quot;&gt;5)、(2&amp;lt;4)、(6&amp;lt;1)，结果为1，式子变为1 || 1 &amp;amp;&amp;amp; 0，再计算1 &amp;amp;&amp;amp; 0，式子变为1 || 0，最后的结果为1。&lt;/4)&gt;&lt;/p&gt;
&lt;p&gt;表达式3+2&lt;5||6&gt;3 等价于 ((3+2) &amp;lt; 5) || (6&amp;gt;3)，结果为1。&lt;/5||6&gt;&lt;/p&gt;
&lt;p&gt;表达式4&amp;gt;3 &amp;amp;&amp;amp; !-5&amp;gt;2 等价于 (4&amp;gt;3) &amp;amp;&amp;amp;  ((!(-5)) &amp;gt; 2) ，结果为0。&lt;/p&gt;
&lt;h2 id=&quot;三目运算符&quot;&gt;&lt;a href=&quot;#三目运算符&quot; class=&quot;headerlink&quot; title=&quot;三目运算符&quot;&gt;&lt;/a&gt;三目运算符&lt;/h2&gt;&lt;p&gt;C语言提供了唯一一个三目运算符：条件运算符。&lt;/p&gt;
&lt;h3 id=&quot;使用格式-3&quot;&gt;&lt;a href=&quot;#使用格式-3&quot; class=&quot;headerlink&quot; title=&quot;使用格式&quot;&gt;&lt;/a&gt;使用格式&lt;/h3&gt;&lt;p&gt;表达式A ? 表达式B : 表达式C&lt;/p&gt;
&lt;h3 id=&quot;运算结果-3&quot;&gt;&lt;a href=&quot;#运算结果-3&quot; class=&quot;headerlink&quot; title=&quot;运算结果&quot;&gt;&lt;/a&gt;运算结果&lt;/h3&gt;&lt;p&gt;如果表达式A成立，也就是为“真”，条件运算符的结果就是表达式B的值，否则，就为表达式C的值&lt;/p&gt;
&lt;h3 id=&quot;结合方向和优先级&quot;&gt;&lt;a href=&quot;#结合方向和优先级&quot; class=&quot;headerlink&quot; title=&quot;结合方向和优先级&quot;&gt;&lt;/a&gt;结合方向和优先级&lt;/h3&gt;&lt;p&gt;优先级顺序为：算术运算符 &amp;gt; 关系运算符 &amp;gt; 条件运算符 &amp;gt; 赋值运算符。&lt;/p&gt;
&lt;p&gt;条件运算符的结合方向是“从右至左”。&lt;/p&gt;
&lt;p&gt;&amp;lt; 代码示例 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; a = &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;&amp;gt;&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt; ? &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;+&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt; : &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;&amp;gt;&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt; ? &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;+&lt;span class=&quot;number&quot;&gt;6&lt;/span&gt; : &lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;&amp;gt;&lt;span class=&quot;number&quot;&gt;7&lt;/span&gt;+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//  上面的代码等价于：int a = (3&amp;gt;4) ? (4+5) : ( (5&amp;gt;4) ? (5+6) : (6&amp;gt;(7+1)) );&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//  简化一下就是：int a = 0 ? 9 : ( 1 ? 11 : 0 );&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//  继续简化为：int a = 0 ? 9 : 11;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;位运算符&quot;&gt;&lt;a href=&quot;#位运算符&quot; class=&quot;headerlink&quot; title=&quot;位运算符&quot;&gt;&lt;/a&gt;位运算符&lt;/h2&gt;&lt;p&gt;所谓位运算就是对每一个二进制位进行运算。C语言一共提供了6种位运算符，只能对整数进行操作，分别是：&lt;code&gt;&amp;amp;&lt;/code&gt;按位与、&lt;code&gt;|&lt;/code&gt;按位或、&lt;code&gt;^&lt;/code&gt;按位异或、&lt;code&gt;&amp;lt;&amp;lt;&lt;/code&gt;左移、&lt;code&gt;&amp;gt;&amp;gt;&lt;/code&gt;右移、&lt;code&gt;~&lt;/code&gt;取反。&lt;/p&gt;
&lt;h3 id=&quot;按位与：-amp&quot;&gt;&lt;a href=&quot;#按位与：-amp&quot; class=&quot;headerlink&quot; title=&quot;按位与：&amp;amp;&quot;&gt;&lt;/a&gt;按位与：&amp;amp;&lt;/h3&gt;&lt;p&gt;使用形式：整数a &amp;amp; 整数b。&lt;/p&gt;
&lt;p&gt;功能：整数a和b各对应的二进位相与。只有对应的两个二进位均为1时，结果位才为1，否则为0。参与运算的数以补码方式出现。&lt;/p&gt;
&lt;p&gt;举例：比如9&amp;amp;5，其实就是1001&amp;amp;101=1，因此9&amp;amp;5=1。&lt;/p&gt;
&lt;p&gt;规律：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;相同整数相&amp;amp;的结果是整数本身。比如5&amp;amp;5=5。&lt;/li&gt;
&lt;li&gt;多个整数相&amp;amp;的结果跟顺序无关。比如5&amp;amp;6&amp;amp;7=5&amp;amp;7&amp;amp;6。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;按位或：&quot;&gt;&lt;a href=&quot;#按位或：&quot; class=&quot;headerlink&quot; title=&quot;按位或：|&quot;&gt;&lt;/a&gt;按位或：|&lt;/h3&gt;&lt;p&gt;使用形式：整数a | 整数b。&lt;/p&gt;
&lt;p&gt;功能：整数a和b各对应的二进位相或。只要对应的二个二进位有一个为1时，结果位就为1，否则为0。参与运算的数以补码方式出现。&lt;/p&gt;
&lt;p&gt;举例：比如9|5，其实就是1001|101=1101，因此9|5=13。&lt;/p&gt;
&lt;p&gt;规律：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;相同整数相|的结果是整数本身。比如5|5=5。&lt;/li&gt;
&lt;li&gt;多个整数相|的结果跟顺序无关。比如5|6|7=5|7|6。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;按位异或：&quot;&gt;&lt;a href=&quot;#按位异或：&quot; class=&quot;headerlink&quot; title=&quot;按位异或：^&quot;&gt;&lt;/a&gt;按位异或：^&lt;/h3&gt;&lt;p&gt;使用形式：整数a ^ 整数b。&lt;/p&gt;
&lt;p&gt;功能：整数a和b各对应的二进位相异或。当对应的二进位相异（不相同）时，结果为1，否则为0。参与运算的数以补码方式出现。&lt;/p&gt;
&lt;p&gt;举例：比如9^5，其实就是1001^101=1100，因此9^5=12。&lt;/p&gt;
&lt;p&gt;规律：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;二进制中，与1相^就会取反，与0相^保持原位。&lt;/li&gt;
&lt;li&gt;相同整数相^的结果是0。比如5^5=0。&lt;/li&gt;
&lt;li&gt;多个整数相^的结果跟顺序无关。比如5^6^7=5^7^6。因此得出结论：a^b^a = b。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;取反：&quot;&gt;&lt;a href=&quot;#取反：&quot; class=&quot;headerlink&quot; title=&quot;取反：~&quot;&gt;&lt;/a&gt;取反：~&lt;/h3&gt;&lt;p&gt;&lt;code&gt;~&lt;/code&gt;为单目运算符，具有右结合性，使用形式：~整数a&lt;/p&gt;
&lt;p&gt;功能：对整数a的各二进位进行取反（0变1，1变0）&lt;/p&gt;
&lt;p&gt;举例：比如~9，其实就是~(0000 0000 0000 0000 0000 0000 0000 1001)=(1111 1111 1111 1111 1111 1111 1111 0110)，因此~9=-10&lt;/p&gt;
&lt;h3 id=&quot;左移：-lt-lt&quot;&gt;&lt;a href=&quot;#左移：-lt-lt&quot; class=&quot;headerlink&quot; title=&quot;左移：&amp;lt;&amp;lt;&quot;&gt;&lt;/a&gt;左移：&amp;lt;&amp;lt;&lt;/h3&gt;&lt;p&gt;&lt;code&gt;&amp;lt;&amp;lt;&lt;/code&gt;是双目运算符，使用形式：整数a&amp;lt;&amp;lt;正数n。&lt;/p&gt;
&lt;p&gt;功能：把整数a的各二进位全部左移n位，高位丢弃，低位补0。左移n位其实就是乘以2的n次方。&lt;/p&gt;
&lt;p&gt;举例：3&amp;lt;&amp;lt;4，3本来是0000 0011，左移4位后变成了0011 0000，因此3&amp;lt;&amp;lt;4 = 48 = 3 * 24。&lt;/p&gt;
&lt;p&gt;需要注意的是：由于左移是丢弃最高位，0补最低位，所以符号位也会被丢弃，左移出来的结果值可能会改变正负性。&lt;/p&gt;
&lt;h3 id=&quot;右移：-gt-gt&quot;&gt;&lt;a href=&quot;#右移：-gt-gt&quot; class=&quot;headerlink&quot; title=&quot;右移：&amp;gt;&amp;gt;&quot;&gt;&lt;/a&gt;右移：&amp;gt;&amp;gt;&lt;/h3&gt;&lt;p&gt;&lt;code&gt;&amp;gt;&amp;gt;&lt;/code&gt;是双目运算符，使用形式：整数a&amp;gt;&amp;gt;正数n。&lt;/p&gt;
&lt;p&gt;功能：把整数a的各二进位全部右移n位，保持符号位不变。右移n位其实就是除以2的n次方。&lt;/p&gt;
&lt;p&gt;举例：32&amp;gt;&amp;gt;3，32本来是0010 0000，右移3位后变成了0000 0100，因此32&amp;gt;&amp;gt;3 = 4 = 32 / 23。&lt;/p&gt;
&lt;h2 id=&quot;sizeof&quot;&gt;&lt;a href=&quot;#sizeof&quot; class=&quot;headerlink&quot; title=&quot;sizeof&quot;&gt;&lt;/a&gt;sizeof&lt;/h2&gt;&lt;h3 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h3&gt;&lt;p&gt;sizeof可以用来计算一个变量或者一个常量、一种数据类型所占的内存字节数：&lt;/p&gt;
&lt;p&gt;&amp;lt; 代码示例 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; size = &lt;span class=&quot;keyword&quot;&gt;sizeof&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;10所占的字节数：%d&quot;&lt;/span&gt;, size);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;lt; 输出结果 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight delphi&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;所占的字节数：&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;Program&lt;/span&gt; ended &lt;span class=&quot;keyword&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;exit&lt;/span&gt; code: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;lt; 代码分析 &amp;gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;10是int类型的数据，在64bit编译器环境下，int类型需要占用4个字节。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;用法&quot;&gt;&lt;a href=&quot;#用法&quot; class=&quot;headerlink&quot; title=&quot;用法&quot;&gt;&lt;/a&gt;用法&lt;/h3&gt;&lt;p&gt;sizeof一共有3种形式。&lt;/p&gt;
&lt;h4 id=&quot;sizeof-变量-常量&quot;&gt;&lt;a href=&quot;#sizeof-变量-常量&quot; class=&quot;headerlink&quot; title=&quot;sizeof( 变量\常量 )&quot;&gt;&lt;/a&gt;sizeof( 变量\常量 )&lt;/h4&gt;&lt;p&gt;&amp;lt; 代码示例 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;sizeof&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;); &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; c = &lt;span class=&quot;string&quot;&gt;&#39;a&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;sizeof&lt;/span&gt;(c);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;sizeof-变量-常量-1&quot;&gt;&lt;a href=&quot;#sizeof-变量-常量-1&quot; class=&quot;headerlink&quot; title=&quot;sizeof 变量\常量&quot;&gt;&lt;/a&gt;sizeof 变量\常量&lt;/h4&gt;&lt;p&gt;&amp;lt; 代码示例 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;sizeof&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; c = &lt;span class=&quot;string&quot;&gt;&#39;a&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;sizeof&lt;/span&gt; c;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;sizeof-数据类型&quot;&gt;&lt;a href=&quot;#sizeof-数据类型&quot; class=&quot;headerlink&quot; title=&quot;sizeof( 数据类型 )&quot;&gt;&lt;/a&gt;sizeof( 数据类型 )&lt;/h4&gt;&lt;p&gt;&amp;lt; 代码示例 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;sizeof&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;float&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;注意&lt;/strong&gt;：不可以写成sizeof float。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;参考&quot;&gt;&lt;a href=&quot;#参考&quot; class=&quot;headerlink&quot; title=&quot;参考&quot;&gt;&lt;/a&gt;参考&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;http://www.cnblogs.com/mjios/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;M了个J的博客&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
</content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;计算机的基本能力就是计算，所以一门程序设计语言的计算能力是非常重要的。C语言之所以无所不能，是因为它不仅有丰富的数据类型，还有强大的计算能力。C语言一共有34种运算符，包括了常见的加减乘除运算。这讲就对C语言中的运算符做一个详细介绍。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="1.0　【C语法】" scheme="http://sanfordy.com/categories/1-0-%E3%80%90C%E8%AF%AD%E6%B3%95%E3%80%91/"/>
    
    
  </entry>
  
  <entry>
    <title>【11】流程控制</title>
    <link href="http://sanfordy.com/2016/07/31/1-0%20.C%E8%AF%AD%E6%B3%95/%E3%80%9011%E3%80%91%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6/"/>
    <id>http://sanfordy.com/2016/07/31/1-0 .C语法/【11】流程控制/</id>
    <published>2016-07-31T14:32:18.000Z</published>
    <updated>2016-08-09T08:25:16.000Z</updated>
    
    <content type="html">&lt;blockquote&gt;
&lt;p&gt;为了方便我们控制程序的运行流程，C语言提供3种流程结构，不同的流程结构可以实现不同的运行流程。这3种流程结构分别是：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;顺序结构：默认的流程结构。按照书写顺序执行每一条语句。&lt;/li&gt;
&lt;li&gt;选择结构：对给定的条件进行判断，再根据判断结果来决定执行哪一段代码。&lt;/li&gt;
&lt;li&gt;循环结构：在给定条件成立的情况下，反复执行某一段代码。&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;h3 id=&quot;默认的运行流程&quot;&gt;&lt;a href=&quot;#默认的运行流程&quot; class=&quot;headerlink&quot; title=&quot;默认的运行流程&quot;&gt;&lt;/a&gt;默认的运行流程&lt;/h3&gt;&lt;p&gt;默认情况下，程序的运行流程是这样的：运行程序后，系统会按书写顺序执行程序中的每一行代码。比如下面的程序：&lt;/p&gt;
&lt;p&gt;&amp;lt; 代码示例 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;Hello-1\n&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;Hello-2\n&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;Hello-3\n&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;lt; 输出结果 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight delphi&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Hello-&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Hello-&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Hello-&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;Program&lt;/span&gt; ended &lt;span class=&quot;keyword&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;exit&lt;/span&gt; code: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;其他运行流程&quot;&gt;&lt;a href=&quot;#其他运行流程&quot; class=&quot;headerlink&quot; title=&quot;其他运行流程&quot;&gt;&lt;/a&gt;其他运行流程&lt;/h3&gt;&lt;p&gt;但很多时候，我们并不想要按照默认的运行流程去走，比如想在某个条件成立的情况下才执行某一段代码，否则不执行。比如微信的这个界面：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2015.cnblogs.com/blog/776348/201607/776348-20160731215744731-1017647345.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;如果用户点击了注册按钮，我们就执行“跳转到注册界面”的代码；如果用户点击了登录按钮，我们就执行“跳转到登录界面”的代码。如果用户没做出任何操作，就不执行前面所说的两段代码。要想实现这种功能，那就要学会如何去控制程序的运行流程。&lt;/p&gt;
&lt;h3 id=&quot;流程结构&quot;&gt;&lt;a href=&quot;#流程结构&quot; class=&quot;headerlink&quot; title=&quot;流程结构&quot;&gt;&lt;/a&gt;流程结构&lt;/h3&gt;&lt;p&gt;为了方便我们控制程序的运行流程，C语言提供3种流程结构，不同的流程结构可以实现不同的运行流程。这3种流程结构分别是：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;顺序结构：默认的流程结构。按照书写顺序执行每一条语句。&lt;/li&gt;
&lt;li&gt;选择结构：对给定的条件进行判断，再根据判断结果来决定执行哪一段代码。&lt;/li&gt;
&lt;li&gt;循环结构：在给定条件成立的情况下，反复执行某一段代码。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;下面是这3种结构的流程图，大致预览一下即可：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2015.cnblogs.com/blog/776348/201607/776348-20160731215752450-665863719.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;顺序结构&quot;&gt;&lt;a href=&quot;#顺序结构&quot; class=&quot;headerlink&quot; title=&quot;顺序结构&quot;&gt;&lt;/a&gt;顺序结构&lt;/h2&gt;&lt;p&gt;顺序结构是3种结构中最简单的，也是默认的流程结构：程序中的语句是按照书写顺序执行的。在文章开头开始列出的代码段，就是顺序结构，这里就不多介绍了。&lt;/p&gt;
&lt;h2 id=&quot;选择结构1-if语句&quot;&gt;&lt;a href=&quot;#选择结构1-if语句&quot; class=&quot;headerlink&quot; title=&quot;选择结构1-if语句&quot;&gt;&lt;/a&gt;选择结构1-if语句&lt;/h2&gt;&lt;h3 id=&quot;形式一&quot;&gt;&lt;a href=&quot;#形式一&quot; class=&quot;headerlink&quot; title=&quot;形式一&quot;&gt;&lt;/a&gt;形式一&lt;/h3&gt;&lt;p&gt;先来看看if语句最简单的形式&lt;/p&gt;
&lt;h4 id=&quot;语法简介&quot;&gt;&lt;a href=&quot;#语法简介&quot; class=&quot;headerlink&quot; title=&quot;语法简介&quot;&gt;&lt;/a&gt;语法简介&lt;/h4&gt;&lt;p&gt;&amp;lt; 代码示例 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ( 条件 )&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    语句&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    语句&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ....&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;lt; 代码分析 &amp;gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如果if右边小括号()中的条件成立，也就是为“真”时，就会执行第2~6行大括号{}中的语句；如果条件为假，就不执行大括号{}中的语句。这里的if是关键字。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;举例&quot;&gt;&lt;a href=&quot;#举例&quot; class=&quot;headerlink&quot; title=&quot;举例&quot;&gt;&lt;/a&gt;举例&lt;/h4&gt;&lt;p&gt;&amp;lt; 代码示例 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; a = &lt;span class=&quot;number&quot;&gt;7&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ( a )&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;条件a成立\n&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;a的值为真\n&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;lt; 输出结果 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight delphi&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;条件a成立&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;a的值为真&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;Program&lt;/span&gt; ended &lt;span class=&quot;keyword&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;exit&lt;/span&gt; code: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;lt; 代码分析 &amp;gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;C语言规定所有非0值都为“真”，而a的值是7，因此第3行的条件是成立的，接着就会执行第5、6行代码。&lt;/li&gt;
&lt;li&gt;如果将a的值改为0，那么第3行的条件就不成立，就不会执行第5、6行代码。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;省略大括号&quot;&gt;&lt;a href=&quot;#省略大括号&quot; class=&quot;headerlink&quot; title=&quot;省略大括号{}&quot;&gt;&lt;/a&gt;省略大括号{}&lt;/h4&gt;&lt;p&gt;如果if后面大括号{}中只有一行代码时，可以省略大括号。形式如下：&lt;/p&gt;
&lt;p&gt;&amp;lt; 代码示例 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ( 条件 )&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    语句&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;lt; 代码分析 &amp;gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如果条件成立，只会执行if后面的第1条语句；如果条件不成立，就不会执行if后面的第1条语句。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;省略大括号带来的问题：&lt;/p&gt;
&lt;p&gt;&amp;lt; 代码示例 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; a = &lt;span class=&quot;number&quot;&gt;7&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ( a &amp;gt; &lt;span class=&quot;number&quot;&gt;9&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;aaa\n&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;bbb\n&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;lt; 输出结果 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight delphi&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;bbb&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;Program&lt;/span&gt; ended &lt;span class=&quot;keyword&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;exit&lt;/span&gt; code: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;lt; 代码分析 &amp;gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;因为第3行的a&amp;gt;9是不成立的，所以不会执行第4行代码。而第5行代码跟if语句是没有任何联系的，因此，第5行代码照常执行。&lt;/li&gt;
&lt;li&gt;由于第5行代码跟if语句是没有任何联系的，所以一般会把代码写成下面这样：&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; a = &lt;span class=&quot;number&quot;&gt;7&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ( a &amp;gt; &lt;span class=&quot;number&quot;&gt;9&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;aaa&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;bbb&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;为了保证代码的可读性，不建议省略大括号！！！&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;语句嵌套&quot;&gt;&lt;a href=&quot;#语句嵌套&quot; class=&quot;headerlink&quot; title=&quot;语句嵌套&quot;&gt;&lt;/a&gt;语句嵌套&lt;/h4&gt;&lt;p&gt;if语句内部是可以嵌套其他if语句的，如下面的例子：&lt;/p&gt;
&lt;p&gt;&amp;lt; 代码示例 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; a = &lt;span class=&quot;number&quot;&gt;7&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ( a &amp;gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;a的值大于0\n&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ( a&amp;lt;&lt;span class=&quot;number&quot;&gt;9&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;a的值小于9&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;lt; 输出结果 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;a的值大于&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;a的值小于&lt;span class=&quot;number&quot;&gt;9&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Program ended with &lt;span class=&quot;built_in&quot;&gt;exit&lt;/span&gt; code: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;lt; 代码分析 &amp;gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;第3行的a&amp;gt;0是成立的，因此会按顺序执行第4~11大括号中的代码。执行到第7行的时候，a&amp;lt;9也是成立的，因此会执行第9行代码。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;形式二&quot;&gt;&lt;a href=&quot;#形式二&quot; class=&quot;headerlink&quot; title=&quot;形式二&quot;&gt;&lt;/a&gt;形式二&lt;/h3&gt;&lt;p&gt;if还可以跟关键字else一起使用&lt;/p&gt;
&lt;h4 id=&quot;语法简介-1&quot;&gt;&lt;a href=&quot;#语法简介-1&quot; class=&quot;headerlink&quot; title=&quot;语法简介&quot;&gt;&lt;/a&gt;语法简介&lt;/h4&gt;&lt;p&gt;&amp;lt; 代码示例 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ( 条件 ) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    语句&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    语句&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;lt; 代码分析 &amp;gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如果条件成立，就会执行if后面大括号{}中的语句；如果条件不成立，就会执行else后面大括号{}中的语句。总之，两个大括号中一定会有1个被执行，而且只能执行的1个。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;当然，也可以省略大括号，写成下面的格式：&lt;/p&gt;
&lt;p&gt;&amp;lt; 代码示例 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ( 条件 )&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    语句&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    语句&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;lt; 代码分析 &amp;gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如果条件成立，就执行if后面的第1条语句；如果条件不成立，就执行else后面的第1条语句。但还是不建议省略大括号{}。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;举例-1&quot;&gt;&lt;a href=&quot;#举例-1&quot; class=&quot;headerlink&quot; title=&quot;举例&quot;&gt;&lt;/a&gt;举例&lt;/h4&gt;&lt;p&gt;&amp;lt; 代码示例 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; a = &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ( a==&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; ) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;a等于0&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;a不等于0&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;lt; 输出结果 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;a不等于&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Program ended with &lt;span class=&quot;built_in&quot;&gt;exit&lt;/span&gt; code: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;lt; 代码分析 &amp;gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;第2行的a==0不成立，所以会执行第5行代码。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;形式三&quot;&gt;&lt;a href=&quot;#形式三&quot; class=&quot;headerlink&quot; title=&quot;形式三&quot;&gt;&lt;/a&gt;形式三&lt;/h3&gt;&lt;p&gt;if和else还有一种比较复杂的用法&lt;/p&gt;
&lt;h4 id=&quot;语法简介-2&quot;&gt;&lt;a href=&quot;#语法简介-2&quot; class=&quot;headerlink&quot; title=&quot;语法简介&quot;&gt;&lt;/a&gt;语法简介&lt;/h4&gt;&lt;p&gt;&amp;lt; 代码示例 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ( 条件&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    语句&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ( 条件&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    语句&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ( 条件&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    语句&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    其他语句;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;lt; 代码分析 &amp;gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如果条件1成立，就执行条件1后面大括号{}中的内容：第2~4行&lt;/li&gt;
&lt;li&gt;如果条件1不成立，条件2成立，就执行条件2后面大括号{}中的内容：第6~8行&lt;/li&gt;
&lt;li&gt;如果条件1、条件2都不成立，条件3成立，就执行条件3后面大括号{}中的内容：第10~12行&lt;/li&gt;
&lt;li&gt;第13行的…表示可以有无限个else if&lt;/li&gt;
&lt;li&gt;如果所有的条件都不成立，就会执行else后面大括号{}中的内容：第15~17行&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;注意&lt;/strong&gt;：这么多大括号中，只有1个大括号内的代码会被执行。跟之前一样，所有的大括号都可以省略，但是不建议省略。必要的时候，最后面的else那一段（第14~17行）是可以省略的。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;举例-2&quot;&gt;&lt;a href=&quot;#举例-2&quot; class=&quot;headerlink&quot; title=&quot;举例&quot;&gt;&lt;/a&gt;举例&lt;/h4&gt;&lt;p&gt;&amp;lt; 代码示例 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; a = &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ( a==&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; ) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;a等于0&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;( a&amp;gt;&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; ) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;a大于0&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;a小于0&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;lt; 输出结果 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight delphi&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;a大于&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;Program&lt;/span&gt; ended &lt;span class=&quot;keyword&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;exit&lt;/span&gt; code: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;lt; 代码分析 &amp;gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;第2行中的a==0不成立，接着会检查第4行。第4行的a&amp;gt;0成立，因此会执行第5行代码。&lt;/li&gt;
&lt;li&gt;如果a的值是负数，那么第2、4行的条件都不成立，于是就会执行第7行代码。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;选择结构2-switch语句&quot;&gt;&lt;a href=&quot;#选择结构2-switch语句&quot; class=&quot;headerlink&quot; title=&quot;选择结构2-switch语句&quot;&gt;&lt;/a&gt;选择结构2-switch语句&lt;/h2&gt;&lt;h3 id=&quot;形式&quot;&gt;&lt;a href=&quot;#形式&quot; class=&quot;headerlink&quot; title=&quot;形式&quot;&gt;&lt;/a&gt;形式&lt;/h3&gt;&lt;p&gt;先来看看switch语句的使用形式：&lt;/p&gt;
&lt;p&gt;&amp;lt; 代码示例 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;switch&lt;/span&gt;(整型表达式)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; 数值&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        语句&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; 数值&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        语句&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ... ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; 数值n:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        语句n;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;default&lt;/span&gt; :&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        语句n+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;lt; 代码分析 &amp;gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;当整型表达式的值等于“数值1”时，就会执行“语句1”，后面的break表示退出整个switch语句，也就是直接跳到第16行代码。&lt;/li&gt;
&lt;li&gt;当整形表达式的值等于“数值2”时，就会执行“语句2”；后面的以此类推。如果在数值1~数值n中，没有一个值等于整型表达式的值，那么就会执行default中的语句n+1。&lt;/li&gt;
&lt;li&gt;由于所有的case后面都有个break，因此执行完任意一个case中的语句后，都会直接退出switch语句。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;举例-3&quot;&gt;&lt;a href=&quot;#举例-3&quot; class=&quot;headerlink&quot; title=&quot;举例&quot;&gt;&lt;/a&gt;举例&lt;/h3&gt;&lt;p&gt;&amp;lt; 代码分析 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; a = &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;switch&lt;/span&gt; (a) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;这是一个0&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;这是一个5&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;这是一个10&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;default&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;什么也不是&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;lt; 输出结果 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight delphi&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;这是一个&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;Program&lt;/span&gt; ended &lt;span class=&quot;keyword&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;exit&lt;/span&gt; code: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;lt; 代码分析 &amp;gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;因为a的值刚好等于第10行case后面的10，所以会执行第11行代码，输出结果：&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;break&quot;&gt;&lt;a href=&quot;#break&quot; class=&quot;headerlink&quot; title=&quot;break&quot;&gt;&lt;/a&gt;break&lt;/h3&gt;&lt;p&gt;break关键字的作用是退出整个switch语句。默认的格式中，每个case后面都有个break，因此执行完case中的语句后，就会退出switch语句。&lt;/p&gt;
&lt;p&gt;如果某个case后面没有break，意味着执行完这个case中的语句后，会按顺序执行后面所有case和default中的语句，直到遇到break为止：&lt;/p&gt;
&lt;p&gt;&amp;lt; 代码示例 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; a = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;switch&lt;/span&gt; (a) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;这是一个0\n&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;这是一个5\n&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;这是一个10\n&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;default&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;什么也不是\n&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;lt; 输出结果 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;这是一个&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;这是一个&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;这是一个&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Program ended with &lt;span class=&quot;built_in&quot;&gt;exit&lt;/span&gt; code: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;lt; 代码分析 &amp;gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;由于变量a的值等于第4行case后面的0，因此肯定会执行第5行代码。&lt;/li&gt;
&lt;li&gt;由于case 0中没有break语句，就不会退出switch语句，继续往下执行代码。&lt;/li&gt;
&lt;li&gt;由于a的值已经等于第4行case的值，接着不会再判断a的值是否等于其他case的值了，直接按顺序执行第7、9行代码。在第10行有个break，接着就会退出switch语句。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;在case中定义变量&quot;&gt;&lt;a href=&quot;#在case中定义变量&quot; class=&quot;headerlink&quot; title=&quot;在case中定义变量&quot;&gt;&lt;/a&gt;在case中定义变量&lt;/h3&gt;&lt;p&gt;有时候，我们可能会想在case中定义一些变量，这个时候，就必须用大括号{}括住case中的所有语句：&lt;/p&gt;
&lt;p&gt;&amp;lt; 代码示例 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; a = &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; b = &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; op = &lt;span class=&quot;string&quot;&gt;&#39;-&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;switch&lt;/span&gt; (op)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;+&#39;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; sum = a + b;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;a+b=%d\n&quot;&lt;/span&gt;, sum);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;-&#39;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; minus = a - b;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;a-b=%d\n&quot;&lt;/span&gt;, minus);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;default&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;不能识别的符号&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;lt; 输出结果 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;a-b=&lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Program ended with &lt;span class=&quot;built_in&quot;&gt;exit&lt;/span&gt; code: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;循环结构1-while循环&quot;&gt;&lt;a href=&quot;#循环结构1-while循环&quot; class=&quot;headerlink&quot; title=&quot;循环结构1-while循环&quot;&gt;&lt;/a&gt;循环结构1-while循环&lt;/h2&gt;&lt;p&gt;while通常用于不知道循环次数的循环。&lt;/p&gt;
&lt;h3 id=&quot;形式-1&quot;&gt;&lt;a href=&quot;#形式-1&quot; class=&quot;headerlink&quot; title=&quot;形式&quot;&gt;&lt;/a&gt;形式&lt;/h3&gt;&lt;p&gt;&amp;lt; 代码示例 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; ( 条件 )&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    语句&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    语句&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ....&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;lt; 代码分析 &amp;gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如果条件成立，就会执行循环体中的语句（“循环体”就是while后面大括号{}中的内容）。然后再次判断条件，重复上述过程，直到条件不成立就结束while循环&lt;/li&gt;
&lt;li&gt;while循环的特点：如果while中的条件一开始就不成立，那么循环体中的语句永远不会被执行&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;可以省略大括号{}，但是只会影响到while后面的第一条语句。不建议省略大括号：&lt;/p&gt;
&lt;p&gt;&amp;lt; 代码示例 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; ( 条件 )&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    语句&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;举例-4&quot;&gt;&lt;a href=&quot;#举例-4&quot; class=&quot;headerlink&quot; title=&quot;举例&quot;&gt;&lt;/a&gt;举例&lt;/h3&gt;&lt;p&gt;在屏幕上重复输出10次Hello World，每输出一次的换行：&lt;/p&gt;
&lt;p&gt;&amp;lt; 代码示例 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; count = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; ( count &amp;lt; &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;Hello World\n&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    count++;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;lt; 代码分析 &amp;gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如果省略第6行的count++，count就一直是0，那么count&amp;lt;10一直都是成立的，这个while循环将会陷入“死循环”，一直在重复执行第4行代码。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;注意&quot;&gt;&lt;a href=&quot;#注意&quot; class=&quot;headerlink&quot; title=&quot;注意&quot;&gt;&lt;/a&gt;注意&lt;/h3&gt;&lt;p&gt;如果写成下面这样，也会让程序进入“死循环”：&lt;/p&gt;
&lt;p&gt;&amp;lt; 代码示例 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; count = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; ( count &amp;lt; &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt; );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;Hello World\n&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    count++;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;lt; 代码分析 &amp;gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;注意第3行，while后面不小心加了个分号; ，一个分号表示一条空语句。&lt;/li&gt;
&lt;li&gt;可以看出：while循环只会影响到第3行的空语句，而第4~8行的代码块是不受while循环影响的&lt;/li&gt;
&lt;li&gt;由于count是0，那么count&amp;lt;10一直都是成立的，程序将会一直重复执行第3行的空语句，陷入死循环。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;循环结构2-do-while循环&quot;&gt;&lt;a href=&quot;#循环结构2-do-while循环&quot; class=&quot;headerlink&quot; title=&quot;循环结构2-do while循环&quot;&gt;&lt;/a&gt;循环结构2-do while循环&lt;/h2&gt;&lt;p&gt;do…while不是特别常用，通常用于需要先执行一次的循环。形式如下：&lt;/p&gt;
&lt;p&gt;&amp;lt; 代码示例 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;do&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    语句&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    语句&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125; &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; (条件);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;lt; 代码分析 &amp;gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;注意第5行，后面是加上一个分号;的。&lt;/li&gt;
&lt;li&gt;当执行到do-while循环时，首先会执行一遍循环体中的语句（“循环体”就是do后面大括号{}中的内容）。接着判断while中的条件，如果条件成立，就执行循环体中的语句。然后再次判断条件，重复上述过程，直到条件不成立就结束while循环。&lt;/li&gt;
&lt;li&gt;do-while循环的特点：不管while中的条件是否成立，循环体中的语句至少会被执行一遍。&lt;/li&gt;
&lt;li&gt;其实do while循环的用法跟while循环是差不多的，这里就不举例子了。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;循环结构3-for循环&quot;&gt;&lt;a href=&quot;#循环结构3-for循环&quot; class=&quot;headerlink&quot; title=&quot;循环结构3-for循环&quot;&gt;&lt;/a&gt;循环结构3-for循环&lt;/h2&gt;&lt;p&gt;for最常用，通常用于知道循环次数的循环。 &lt;/p&gt;
&lt;h3 id=&quot;形式-2&quot;&gt;&lt;a href=&quot;#形式-2&quot; class=&quot;headerlink&quot; title=&quot;形式&quot;&gt;&lt;/a&gt;形式&lt;/h3&gt;&lt;p&gt;for循环是所有循环结构中最复杂的：&lt;/p&gt;
&lt;p&gt;&amp;lt; 代码示例 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (语句&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;; 条件; 语句&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    语句&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    语句&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;lt; 代码分析 &amp;gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;for循环开始时，会先执行语句1，而且在整个循环过程中只执行一次语句1。&lt;/li&gt;
&lt;li&gt;接着判断条件，如果条件成立，就会执行循环体中的语句（“循环体”就是for后面大括号{}中的内容）。&lt;/li&gt;
&lt;li&gt;循环体执行完毕后，接下来会执行语句2，然后再次判断条件，重复上述过程，直到条件不成立就结束for循环。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;举例-5&quot;&gt;&lt;a href=&quot;#举例-5&quot; class=&quot;headerlink&quot; title=&quot;举例&quot;&gt;&lt;/a&gt;举例&lt;/h3&gt;&lt;p&gt;&amp;lt; 代码示例 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i&amp;lt;&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;; i++)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;%d  &quot;&lt;/span&gt;, i);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;lt; 输出结果 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Program ended with &lt;span class=&quot;built_in&quot;&gt;exit&lt;/span&gt; code: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;lt; 代码分析 &amp;gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;需要注意的是：变量i的作用域是第1~4行。一旦离开了这个for循环，变量i就失效了。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;补充&quot;&gt;&lt;a href=&quot;#补充&quot; class=&quot;headerlink&quot; title=&quot;补充&quot;&gt;&lt;/a&gt;补充&lt;/h3&gt;&lt;p&gt;如果for循环的初始化语句和循环一次后执行的语句是由多条语句组成的，就用逗号,隔开：&lt;/p&gt;
&lt;p&gt;&amp;lt; 代码示例 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; x = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, y =&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; x&amp;lt;&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;; x++, y+=&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;x=%d, y=%d \n&quot;&lt;/span&gt;, x, y);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;lt; 输出结果 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;x=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, y=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;x=&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, y=&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;x=&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, y=&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Program ended with &lt;span class=&quot;built_in&quot;&gt;exit&lt;/span&gt; code: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;break和continue&quot;&gt;&lt;a href=&quot;#break和continue&quot; class=&quot;headerlink&quot; title=&quot;break和continue&quot;&gt;&lt;/a&gt;break和continue&lt;/h2&gt;&lt;p&gt;接下来，介绍两个比较重要的语句：break和continue。&lt;/p&gt;
&lt;p&gt;break跳出本层循环，continue结束本次循环。这两者通常与if连⽤。&lt;/p&gt;
&lt;h3 id=&quot;break-1&quot;&gt;&lt;a href=&quot;#break-1&quot; class=&quot;headerlink&quot; title=&quot;break&quot;&gt;&lt;/a&gt;break&lt;/h3&gt;&lt;p&gt;前面在switch语句中已经用到了break，它的作用是跳出switch语句。它也可以用在循环结构中，这时候它的作用是跳出整个循环语句。&lt;/p&gt;
&lt;h4 id=&quot;举例-6&quot;&gt;&lt;a href=&quot;#举例-6&quot; class=&quot;headerlink&quot; title=&quot;举例&quot;&gt;&lt;/a&gt;举例&lt;/h4&gt;&lt;p&gt;这里以for循环为例子，break也可以用在while循环、do-while循环中：&lt;/p&gt;
&lt;p&gt;&amp;lt; 代码示例 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i&amp;lt;&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;; i++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;i=%d \n&quot;&lt;/span&gt;, i);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (i&amp;gt;&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;lt; 输出结果 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;i=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;i=&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;i=&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;i=&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Program ended with &lt;span class=&quot;built_in&quot;&gt;exit&lt;/span&gt; code: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;lt; 代码分析 &amp;gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;上面代码的意思是当i&amp;gt;2时，就跳出整个for循环，也就是结束for循环，所以输出结果是：&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;for循环嵌套&quot;&gt;&lt;a href=&quot;#for循环嵌套&quot; class=&quot;headerlink&quot; title=&quot;for循环嵌套&quot;&gt;&lt;/a&gt;for循环嵌套&lt;/h4&gt;&lt;p&gt;先来看一个for循环嵌套的例子，嵌套的意思就是：for循环内部又一个for循环：&lt;/p&gt;
&lt;p&gt;&amp;lt; 代码示例 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; x = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; x&amp;lt;&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;; x++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; y = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; y&amp;lt;&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;; y++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;x=%d, y=%d \n&quot;&lt;/span&gt;, x, y);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;lt; 输出结果 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;x=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, y=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;x=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, y=&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;x=&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, y=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;x=&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, y=&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Program ended with &lt;span class=&quot;built_in&quot;&gt;exit&lt;/span&gt; code: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这个时候如果在for循环中加入一个break，那么这个break究竟是跳出里面还是外面的for循环呢：&lt;/p&gt;
&lt;p&gt;&amp;lt; 代码示例 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; x = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; x&amp;lt;&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;; x++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; y = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; y&amp;lt;&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;; y++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;x=%d, y=%d \n&quot;&lt;/span&gt;, x, y);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;lt; 输出结果 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;x=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, y=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;x=&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, y=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Program ended with &lt;span class=&quot;built_in&quot;&gt;exit&lt;/span&gt; code: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;lt; 代码分析 &amp;gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;注意第5行的break，这个break的作用是跳出里面的for循环，并非外面的for循环。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;如果改变一下break的位置：&lt;/p&gt;
&lt;p&gt;&amp;lt; 代码示例 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; x = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; x&amp;lt;&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;; x++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; y = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; y&amp;lt;&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;; y++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;x=%d, y=%d \n&quot;&lt;/span&gt;, x, y);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;lt; 输出结果 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;x=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, y=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;x=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, y=&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Program ended with &lt;span class=&quot;built_in&quot;&gt;exit&lt;/span&gt; code: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;lt; 代码分析 &amp;gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;注意第6行的break，这个break的作用是跳出外面的for循环，并非里面的for循环。&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;说明&lt;/strong&gt;：规律已经很明显了：break只会影响它所在的那个for循环。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;continue&quot;&gt;&lt;a href=&quot;#continue&quot; class=&quot;headerlink&quot; title=&quot;continue&quot;&gt;&lt;/a&gt;continue&lt;/h3&gt;&lt;p&gt;continue只能使用在循环结构中，它的作用是跳过这一次循环，直接进入下一次循环。&lt;/p&gt;
&lt;p&gt;这里以for循环为例子，continue也可以用在while循环、do-while循环中：&lt;/p&gt;
&lt;p&gt;&amp;lt; 代码示例 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; x = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; x&amp;lt;&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;; x++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (x%&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;==&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;continue&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;x=%d \n&quot;&lt;/span&gt;, x);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;lt; 输出结果 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;x=&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;x=&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;x=&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;x=&lt;span class=&quot;number&quot;&gt;7&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;x=&lt;span class=&quot;number&quot;&gt;9&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Program ended with &lt;span class=&quot;built_in&quot;&gt;exit&lt;/span&gt; code: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;lt; 代码分析 &amp;gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;注意第2行，当x%2==0，也就是当x是2的倍数时，就跳过这次循环，不执行第6行语句，直接进入下一次循环。输出结果：&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;说明&lt;/strong&gt;：跟break一样，continue只会影响它所在的那个for循环。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;参考&quot;&gt;&lt;a href=&quot;#参考&quot; class=&quot;headerlink&quot; title=&quot;参考&quot;&gt;&lt;/a&gt;参考&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;http://www.cnblogs.com/mjios/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;M了个J的博客&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
</content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;为了方便我们控制程序的运行流程，C语言提供3种流程结构，不同的流程结构可以实现不同的运行流程。这3种流程结构分别是：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;顺序结构：默认的流程结构。按照书写顺序执行每一条语句。&lt;/li&gt;
&lt;li&gt;选择结构：对给定的条件进行判断，再根据判断结果来决定执行哪一段代码。&lt;/li&gt;
&lt;li&gt;循环结构：在给定条件成立的情况下，反复执行某一段代码。&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="1.0　【C语法】" scheme="http://sanfordy.com/categories/1-0-%E3%80%90C%E8%AF%AD%E6%B3%95%E3%80%91/"/>
    
    
  </entry>
  
  <entry>
    <title>【10】函数</title>
    <link href="http://sanfordy.com/2016/07/07/1-0%20.C%E8%AF%AD%E6%B3%95/%E3%80%9010%E3%80%91%E5%87%BD%E6%95%B0/"/>
    <id>http://sanfordy.com/2016/07/07/1-0 .C语法/【10】函数/</id>
    <published>2016-07-07T07:55:37.000Z</published>
    <updated>2016-08-09T07:38:51.000Z</updated>
    
    <content type="html">&lt;blockquote&gt;
&lt;p&gt;任何一个C语言程序都是由一个或者多个程序段（小程序）构成的，每个程序段都有自己的功能，我们一般称这些程序段为“函数”。所以，你可以说C语言程序是由函数构成的。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;函数的概念&quot;&gt;&lt;a href=&quot;#函数的概念&quot; class=&quot;headerlink&quot; title=&quot;函数的概念&quot;&gt;&lt;/a&gt;函数的概念&lt;/h2&gt;&lt;h3 id=&quot;什么是函数&quot;&gt;&lt;a href=&quot;#什么是函数&quot; class=&quot;headerlink&quot; title=&quot;什么是函数&quot;&gt;&lt;/a&gt;什么是函数&lt;/h3&gt;&lt;p&gt;任何一个C语言程序都是由一个或者多个程序段（小程序）构成的，每个程序段都有自己的功能，我们一般称这些程序段为“函数”。所以，你可以说C语言程序是由函数构成的。&lt;/p&gt;
&lt;p&gt;比如你用C语言编写了一个MP3播放器程序，那么它的程序结构如下图所示：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2015.cnblogs.com/blog/776348/201607/776348-20160707155751452-1805121758.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;函数就是用来实现某个功能的程序段，每一个函数都有自己的功能。因此，你应该把实现某个功能所需的代码都写在函数中。比如，有个函数的功能是播放MP3，那么播放MP3的代码都应该写到这个函数中。当调用（执行）一个函数时，计算机就会按顺序执行函数中的所有代码，从而展示函数所实现的功能。&lt;/p&gt;
&lt;h3 id=&quot;函数名&quot;&gt;&lt;a href=&quot;#函数名&quot; class=&quot;headerlink&quot; title=&quot;函数名&quot;&gt;&lt;/a&gt;函数名&lt;/h3&gt;&lt;p&gt;一般来说，我们会将不同的功能交给不同的函数去实现。比如，将暂停播放MP3的代码写到一个函数中，将停止播放MP3的代码写到另一个函数中。因此，一个C程序中可能会有很多的函数。为了方便调用和区分这些函数，我们需要为每一个函数都起一个唯一的名称，函数的命名必须按照标识符命名规则。利用函数名就可以调用到对应的函数。&lt;/p&gt;
&lt;h2 id=&quot;函数的分类&quot;&gt;&lt;a href=&quot;#函数的分类&quot; class=&quot;headerlink&quot; title=&quot;函数的分类&quot;&gt;&lt;/a&gt;函数的分类&lt;/h2&gt;&lt;p&gt;前面已经说过，C语言中的函数就是面向对象中的”方法”，C语言的函数可以大概分为3类：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;主函数，也就是main函数。每个程序中只能有一个、也必须有一个主函数。无论主函数写在什么位置，C程序总是从主函数开始执行。&lt;/li&gt;
&lt;li&gt;开发人员自定义的函数，可有可无，数目不限。&lt;/li&gt;
&lt;li&gt;C语言提供的库函数，例如stdio.h中的输出函数printf()和输入函数scanf()。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;函数的声明&quot;&gt;&lt;a href=&quot;#函数的声明&quot; class=&quot;headerlink&quot; title=&quot;函数的声明&quot;&gt;&lt;/a&gt;函数的声明&lt;/h2&gt;&lt;h3 id=&quot;函数的定义顺序&quot;&gt;&lt;a href=&quot;#函数的定义顺序&quot; class=&quot;headerlink&quot; title=&quot;函数的定义顺序&quot;&gt;&lt;/a&gt;函数的定义顺序&lt;/h3&gt;&lt;p&gt;在C语言中，函数的定义顺序是有讲究的，默认情况下，只有后面定义的函数才可以调用前面定义过的函数：&lt;/p&gt;
&lt;p&gt;&amp;lt; 代码示例 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; a, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; b)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return a + b;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//  这里是注释&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; c = sum(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;lt; 代码分析 &amp;gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;第5行定义的main函数调用了第1行的sum函数，这是合法的。如果调换sum函数和main函数的顺序，在标准的C编译器环境下是不合法的（不过在GCC编译器环境下只是一个警告）。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;如果想把函数的定义写在main函数后面，而且main函数能正常调用这些函数，那就必须在main函数的前面进行函数的声明：&lt;/p&gt;
&lt;p&gt;&amp;lt; 代码示例 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 只是做个函数声明，并不用实现&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; a, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; b)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; c = sum(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 函数的定义(实现)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; a, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; b)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return a + b;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;lt; 代码分析 &amp;gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在第11行定义了sum函数，在第2行对sum函数进行了声明，然后在第6行(main函数中)就可以正常调用sum函数了。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;函数声明的格式：返回值类型 函数名 (参数1, 参数2, …)&lt;/p&gt;
&lt;p&gt;只要你在main函数前面声明过一个函数，main函数就知道这个函数的存在，就可以调用这个函数。而且只要知道函数名、函数的返回值、函数接收多少个参数、每个参数是什么类型的，就能够调用这个函数了，因此，声明函数的时候可以省略参数名称。比如上面的sum函数声明可以写成这样：&lt;/p&gt;
&lt;p&gt;&amp;lt; 代码示例 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;lt; 代码分析 &amp;gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;究竟这个函数是做什么用的，还要看函数的定义。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;函数声明的注意事项&quot;&gt;&lt;a href=&quot;#函数声明的注意事项&quot; class=&quot;headerlink&quot; title=&quot;函数声明的注意事项&quot;&gt;&lt;/a&gt;函数声明的注意事项&lt;/h3&gt;&lt;p&gt;如果只有函数的声明，而没有函数的定义，那么程序将会在链接时出错，下面的写法是错误的：&lt;/p&gt;
&lt;p&gt;&amp;lt; 代码示例 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; a, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; b)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sum(&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;11&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;lt; 代码分析 &amp;gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在第1行声明了一个sum函数，但是并没有对sum函数进行定义，接着在第6行调用sum函数。&lt;/li&gt;
&lt;li&gt;这个程序是可以编译成功的，因为我们在main函数前面声明了sum函数(函数的声明和定义是两码事)，这个函数声明可以理解为：在语法上，骗一下main函数，告诉它sum函数是存在的，所以从语法的角度上main函数是可以调用sum函数的。究竟这个sum函数存不存在呢，有没有被定义呢？编译器是不管的。在编译阶段，编译器并不检测函数有没有定义，只有在链接的时候才会检测这个函数存不存在，也就是检测函数有没有被定义。&lt;/li&gt;
&lt;li&gt;因此，这个程序会在链接的时候报错，错误信息如下：&lt;br&gt;&lt;img src=&quot;http://images2015.cnblogs.com/blog/776348/201607/776348-20160707155851108-1963224110.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;我这里的源文件是main.c文件，所以编译成功后生成一个main.o文件。链接的时候，链接器会检测main.o中的函数有没有被定义。&lt;/li&gt;
&lt;li&gt;上面的错误信息大致意思是：在main.o文件中找不到sum这个标识符。&lt;/li&gt;
&lt;li&gt;错误信息中的linker是链接器的意思，下次看到这个linker，说明是链接阶段出错了。链接出错了，就不能生成可执行文件，程序就不能运行。&lt;/li&gt;
&lt;li&gt;这个错误的解决方案就是加上sum函数的定义。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;函数的定义&quot;&gt;&lt;a href=&quot;#函数的定义&quot; class=&quot;headerlink&quot; title=&quot;函数的定义&quot;&gt;&lt;/a&gt;函数的定义&lt;/h2&gt;&lt;p&gt;任何一个函数在使用之前都必须进行定义，定义函数的目的就是为了写清楚你这个函数是干啥用的，里面包含了哪些代码。函数的定义格式如下：&lt;/p&gt;
&lt;p&gt;&amp;lt; 代码示例 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;返回值类型  函数名(形式参数列表)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      函数体&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;函数定义示例&quot;&gt;&lt;a href=&quot;#函数定义示例&quot; class=&quot;headerlink&quot; title=&quot;函数定义示例&quot;&gt;&lt;/a&gt;函数定义示例&lt;/h3&gt;&lt;p&gt;比如定义一个函数用来计算两个整数的和。那么可以写成下面这样：&lt;/p&gt;
&lt;p&gt;&amp;lt; 代码示例 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; a, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; b)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; c = a + b;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return c;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; d = sum(&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;11&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;d is %d&quot;&lt;/span&gt;, d);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;lt; 输出结果 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight applescript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;d &lt;span class=&quot;keyword&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;21&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Program ended &lt;span class=&quot;keyword&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;exit&lt;/span&gt; code: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;lt; 代码分析 &amp;gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;分别在第3行、第9行定义了sum函数、main函数，其中sum函数的作用是计算两个整数的和。&lt;/li&gt;
&lt;li&gt;函数定义好后，并不会马上执行函数内部的代码，要有人调用它才会执行内部的代码。就好像你的手机虽然有打电话的功能，但是只有按了拨号键，才会执行打电话的功能。&lt;/li&gt;
&lt;li&gt;程序运行时就会先调用main函数，按顺序执行第11~14行代码，因为main函数是程序的入口。&lt;/li&gt;
&lt;li&gt;第11行的sum(10, 11)是调用sum函数，sum函数被调用了，就会分配存储空间给形式参数列表中的所有参数，也就是第3行中的变量a和变量b，它们都是“形式参数”。&lt;/li&gt;
&lt;li&gt;第11行中的10、11称为“实际参数”，它们将分别赋值给变量a、变量b，也就是相当于：&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; a = &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; b = &lt;span class=&quot;number&quot;&gt;11&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;既然调用了sum函数，就会按顺序执行sum函数中的代码，也就是第5~6行代码。&lt;/li&gt;
&lt;li&gt;第5行将a+b的值21赋值给了变量c，第6行使用return关键字将变量c返回给了函数调用者，也是说，第11行sum(10, 11)的值是21。那么变量d的值就是21。&lt;/li&gt;
&lt;li&gt;第13行的输出结果为：d is 21&lt;/li&gt;
&lt;li&gt;第3~7行中的变量a、b、c都只有在调用sum函数时，才会分配存储空间，当sum函数执行完毕后，变量a、b、c就会被释放存储空间。因此，它们的作用域仅限于sum函数内部。&lt;/li&gt;
&lt;li&gt;第3行sum左边的int称为“返回值类型”，第6行return关键字后面跟着的数值称为“返回值”，因此第6行的变量c就是返回值，返回值的数据类型应该跟“返回值类型”保持一致。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;函数定义的注意&quot;&gt;&lt;a href=&quot;#函数定义的注意&quot; class=&quot;headerlink&quot; title=&quot;函数定义的注意&quot;&gt;&lt;/a&gt;函数定义的注意&lt;/h3&gt;&lt;h4 id=&quot;函数名不能重复&quot;&gt;&lt;a href=&quot;#函数名不能重复&quot; class=&quot;headerlink&quot; title=&quot;函数名不能重复&quot;&gt;&lt;/a&gt;函数名不能重复&lt;/h4&gt;&lt;p&gt;默认情况下，函数的名字必须唯一。下面的写法是错误的：&lt;/p&gt;
&lt;p&gt;&amp;lt; 代码示例 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; a)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;lt; 代码分析 &amp;gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;第1、6行定义的函数的名称都是test，编译器会直接报错。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;函数都应该独立定义&quot;&gt;&lt;a href=&quot;#函数都应该独立定义&quot; class=&quot;headerlink&quot; title=&quot;函数都应该独立定义&quot;&gt;&lt;/a&gt;函数都应该独立定义&lt;/h4&gt;&lt;p&gt;下面的写法是错误的：&lt;/p&gt;
&lt;p&gt;&amp;lt; 代码示例 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;lt; 代码分析 &amp;gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在第3行把test函数定义在了main函数内部，这是错误的写法。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;形式参数和实际参数&quot;&gt;&lt;a href=&quot;#形式参数和实际参数&quot; class=&quot;headerlink&quot; title=&quot;形式参数和实际参数&quot;&gt;&lt;/a&gt;形式参数和实际参数&lt;/h2&gt;&lt;h3 id=&quot;基本概念&quot;&gt;&lt;a href=&quot;#基本概念&quot; class=&quot;headerlink&quot; title=&quot;基本概念&quot;&gt;&lt;/a&gt;基本概念&lt;/h3&gt;&lt;p&gt;形式参数：在定义函数时，函数名后面的小括号()中定义的变量称为形式参数，简称形参。&lt;/p&gt;
&lt;p&gt;实际参数：在调用函数时传入的值称为实际参数，简称实参。&lt;/p&gt;
&lt;h3 id=&quot;实参必须和形参个数一致&quot;&gt;&lt;a href=&quot;#实参必须和形参个数一致&quot; class=&quot;headerlink&quot; title=&quot;实参必须和形参个数一致&quot;&gt;&lt;/a&gt;实参必须和形参个数一致&lt;/h3&gt;&lt;p&gt;调用函数时传递的实参个数 必须和 函数的形参个数必须保持一致：&lt;/p&gt;
&lt;p&gt;&amp;lt; 代码示例 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; a, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; b, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; c)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return a + b + c;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sum(&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;9&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;7&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;lt; 代码分析 &amp;gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;第1行中sum函数中有3个形参，因此在第8行调用sum函数时，需要传入3个实参。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;值传递注意&quot;&gt;&lt;a href=&quot;#值传递注意&quot; class=&quot;headerlink&quot; title=&quot;值传递注意&quot;&gt;&lt;/a&gt;值传递注意&lt;/h3&gt;&lt;p&gt;当使用基本数据类型（char、int、float等）作为实参时，实参和形参之间只是值传递，修改形参的值并不影响到实参：&lt;/p&gt;
&lt;p&gt;&amp;lt; 代码示例 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; a)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    a = &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; b = &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    test(b);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;b的值是%d\n&quot;&lt;/span&gt;, b);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;lt; 输出结果 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight delphi&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;b的值是&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;Program&lt;/span&gt; ended &lt;span class=&quot;keyword&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;exit&lt;/span&gt; code: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;lt; 代码分析 &amp;gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在第3行定义了test函数，只有一个形参a。&lt;/li&gt;
&lt;li&gt;在第14行调用了test函数，接着就会分配内存给变量a。这里将变量b当做实参，那么变量b的值将传递给变量a。这个时候，内存中大致如下图所示：&lt;br&gt;&lt;img src=&quot;http://images2015.cnblogs.com/blog/776348/201607/776348-20160707155855624-785321241.png&quot; alt=&quot;&quot;&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;注意&lt;/strong&gt;：其实在内存中存储的是二进制数据，这里我写成10进制是为了直观性&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;执行完第5行代码后，变量a的值变成了10，但是变量b的值依然是5：&lt;br&gt;&lt;img src=&quot;http://images2015.cnblogs.com/blog/776348/201607/776348-20160707155901561-302125664.png&quot; alt=&quot;f&quot;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;函数可以没有形参&quot;&gt;&lt;a href=&quot;#函数可以没有形参&quot; class=&quot;headerlink&quot; title=&quot;函数可以没有形参&quot;&gt;&lt;/a&gt;函数可以没有形参&lt;/h3&gt;&lt;p&gt;定义一个函数时是可以没有形参的，比如下面的函数：&lt;/p&gt;
&lt;p&gt;&amp;lt; 代码示例 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;调用了test函数\n&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    test();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;lt; 输出结果 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight delphi&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;调用了test函数&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;Program&lt;/span&gt; ended &lt;span class=&quot;keyword&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;exit&lt;/span&gt; code: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;在第3行定义了test函数，可以发现，它的形参列表是空的，也就是没有形参。&lt;/li&gt;
&lt;li&gt;那么在第11行调用test函数时，就不用传递任何实参。&lt;/li&gt;
&lt;li&gt;其实，第9行定义的main函数也是没有形参的。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;数组作为实参&quot;&gt;&lt;a href=&quot;#数组作为实参&quot; class=&quot;headerlink&quot; title=&quot;数组作为实参&quot;&gt;&lt;/a&gt;数组作为实参&lt;/h3&gt;&lt;p&gt;数组元素作为参数，与普通变量一样，把数组名传入，即数组的首地址。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;注意&lt;/strong&gt;：此时，形参和实参实际上是同一段内存空间。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;返回值类型&quot;&gt;&lt;a href=&quot;#返回值类型&quot; class=&quot;headerlink&quot; title=&quot;返回值类型&quot;&gt;&lt;/a&gt;返回值类型&lt;/h2&gt;&lt;h3 id=&quot;返回值&quot;&gt;&lt;a href=&quot;#返回值&quot; class=&quot;headerlink&quot; title=&quot;返回值&quot;&gt;&lt;/a&gt;返回值&lt;/h3&gt;&lt;p&gt;返回值就是函数调用完后，返回给函数调用者的结果，用return关键字进行返回。定义函数时，要指明函数的返回值类型：&lt;/p&gt;
&lt;p&gt;&amp;lt; 代码示例 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;pi&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return &lt;span class=&quot;number&quot;&gt;3.4&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;double&lt;/span&gt; a = pi();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;lt; 代码分析 &amp;gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;第1行定义了一个pi函数，返回值类型是double，因此用return返回的数值应该是double类型的，这里返回的是3.14。&lt;/li&gt;
&lt;li&gt;第8行pi函数调用完毕后，函数调用者得到的值就是3.14，因此，变量a的值是3.14。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;函数可以没有返回值&quot;&gt;&lt;a href=&quot;#函数可以没有返回值&quot; class=&quot;headerlink&quot; title=&quot;函数可以没有返回值&quot;&gt;&lt;/a&gt;函数可以没有返回值&lt;/h3&gt;&lt;p&gt;一个函数可以没有返回值，如果没有返回值，应该用void表示返回值类型：&lt;/p&gt;
&lt;p&gt;&amp;lt; 代码示例 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;调用了test函数\n&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    test();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;lt; 输出结果 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight delphi&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;调用了test函数&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;Program&lt;/span&gt; ended &lt;span class=&quot;keyword&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;exit&lt;/span&gt; code: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;lt; 代码分析 &amp;gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在第3行定义了一个test函数，它是没有返回值的，所以第6行的return后面没有跟上任何数值，最后面的return语句可以省略。&lt;/li&gt;
&lt;li&gt;在第11行调用了test函数。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;函数默认返回值类型是int&quot;&gt;&lt;a href=&quot;#函数默认返回值类型是int&quot; class=&quot;headerlink&quot; title=&quot;函数默认返回值类型是int&quot;&gt;&lt;/a&gt;函数默认返回值类型是int&lt;/h3&gt;&lt;p&gt;如果一个函数没有明确写出返回值类型，那么代表这个函数的返回值类型是int：&lt;/p&gt;
&lt;p&gt;&amp;lt; 代码示例 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sum(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; a, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; b)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       return a + b;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;lt; 代码分析 &amp;gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;可以看到，第1行定义的sum函数没有明确写出返回值类型，那么这个sum函数的返回值类型就是int。因此，第3行return后面跟随的是int类型数据。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;return&quot;&gt;&lt;a href=&quot;#return&quot; class=&quot;headerlink&quot; title=&quot;return&quot;&gt;&lt;/a&gt;return&lt;/h2&gt;&lt;p&gt;return语句可以在函数内部返回一个值给函数调用者：&lt;/p&gt;
&lt;p&gt;&amp;lt; 代码示例 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; a, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; b)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return a + b;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; c = sum(&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;lt; 代码分析 &amp;gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;第3行使用了return语句，将a+b的值返回给了函数调用者，因此第8行变量c的值是13&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;注意&lt;/strong&gt;：一个函数内部可以多次使用return语句，使用了return语句后，函数就会马上停止执行，return语句后面的代码就不再被执行&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;递归函数&quot;&gt;&lt;a href=&quot;#递归函数&quot; class=&quot;headerlink&quot; title=&quot;递归函数&quot;&gt;&lt;/a&gt;递归函数&lt;/h2&gt;&lt;p&gt;函数自身调用自身，即函数内部又使用到了该函数功能，这个函数就叫做递归函数。&lt;/p&gt;
&lt;p&gt;在计算机中阶乘就可以使用递归调用：&lt;/p&gt;
&lt;p&gt;&amp;lt; 代码示例 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#import &amp;lt;Foundation/Foundation.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;fac&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; n)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; argc, &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; * argv[])&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; n = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; y = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;input an number &quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;scanf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;%d&quot;&lt;/span&gt;,&amp;amp;n);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    y = fac(n);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;%d!=%d\n&quot;&lt;/span&gt;,n,y);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;fac&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; n)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; m ;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (n &amp;lt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;n&amp;lt; 0,data error&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (n == &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;|| n== &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        m = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; m = fac(n &lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;)*n;&lt;span class=&quot;comment&quot;&gt;//精华(解释在下面)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return m;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/* 步骤：从里往外算，一层一层嵌套。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;假设n = 4;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;1.m = f(4 - 1) * 4,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2.m = f(3 - 1) * 3 * 4,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3.m = f(2 - 1) * 2 * 3 * 4,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4.此时n = 2,return m,即m返回给上一个调用他的函数 m = f(2 - 1) = 1;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;所以 m = 1 * 2 * 3 * 4 = 24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;lt; 输出结果 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;input an number &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;!=&lt;span class=&quot;number&quot;&gt;24&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Program ended with &lt;span class=&quot;built_in&quot;&gt;exit&lt;/span&gt; code: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;注意&lt;/strong&gt;：递归一定要有出口。 &lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;回调函数&quot;&gt;&lt;a href=&quot;#回调函数&quot; class=&quot;headerlink&quot; title=&quot;回调函数&quot;&gt;&lt;/a&gt;回调函数&lt;/h2&gt;&lt;p&gt;通过函数指针调用函数的函数。如果你把函数A的指针（地址）作为参数传递给另一个函数B，当这个指针被用来调用其所指向的函数A时，我们就说函数A是回调函数：&lt;/p&gt;
&lt;p&gt;&amp;lt; 代码示例 &amp;gt; &lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;#include &amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//  shouwNum内有两个参数：1.类型为整形的整数参数 2.类型为void (*)()的指针参数&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;void showNum (int,void (*)(int));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//  回调函数&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;void printNum(int);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;int main(int argc, const char * argv[]) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    showNum(110, printNum);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;void showNum(int a,void (*ptr)(int))&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    (* ptr)(a);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;void printNum(int b)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    printf(&quot;%d \n&quot;,b);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;lt; 输出结果 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;110&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Program ended with &lt;span class=&quot;built_in&quot;&gt;exit&lt;/span&gt; code: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;常见函数&quot;&gt;&lt;a href=&quot;#常见函数&quot; class=&quot;headerlink&quot; title=&quot;常见函数&quot;&gt;&lt;/a&gt;常见函数&lt;/h2&gt;&lt;h3 id=&quot;main函数&quot;&gt;&lt;a href=&quot;#main函数&quot; class=&quot;headerlink&quot; title=&quot;main函数&quot;&gt;&lt;/a&gt;main函数&lt;/h3&gt;&lt;p&gt;从第一个C语言程序开始，就认识了这个main函数。main函数是整个C程序的入口，有了main函数，C程序才能运行成功，而且整个C程序中只能有一个main函数。&lt;/p&gt;
&lt;p&gt;main函数的简单定义如下：&lt;/p&gt;
&lt;p&gt;&amp;lt; 代码示例 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;lt; 代码分析 &amp;gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;它可以没有形式参数，返回值是int类型。它的返回值用于说明程序的退出状态：如果返回0，则代表程序正常退出，否则代表程序异常退出。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;scanf函数&quot;&gt;&lt;a href=&quot;#scanf函数&quot; class=&quot;headerlink&quot; title=&quot;scanf函数&quot;&gt;&lt;/a&gt;scanf函数&lt;/h3&gt;&lt;p&gt;这是在stdio.h中声明的一个函数，因此使用前必须加入#include &lt;stdio.h&gt;。调用scanf函数时，需要传入变量的地址作为参数，scanf函数会等待标准输入设备（比如键盘）输入数据，并且将输入的数据赋值给地址对应的变量：&lt;/stdio.h&gt;&lt;/p&gt;
&lt;p&gt;&amp;lt; 代码分析 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;Please input your age:&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; age;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;scanf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;%d&quot;&lt;/span&gt;, &amp;amp;age);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;Your age is %d.&quot;&lt;/span&gt;, age);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;lt; 代码分析 &amp;gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;运行程序，执行完第1行代码，控制台会输出一句提示信息：please input your age:&lt;/li&gt;
&lt;li&gt;执行到第4行的scanf函数时，会等待用户的键盘输入，并不会往后执行代码。scanf的第1个参数是”%d”，说明要求用户以10进制的形式输入一个整数。这里要注意，scanf的第2个参数传递的不是age变量，而是age变量的地址&amp;amp;age，&amp;amp;是C语言中的一个地址运算符，可以用来获取变量的地址。&lt;/li&gt;
&lt;li&gt;接着我们可以在提示信息后面输入个8：please input your age:8&lt;/li&gt;
&lt;li&gt;输入完毕后，敲一下回车键，目的是告诉scanf函数我们已经输入完毕了，scanf函数会将输入的8赋值给age变量。&lt;/li&gt;
&lt;li&gt;scanf函数赋值完毕后，才会往后执行代码，执行到第6行时，控制器会输出：Your age is 8.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;scanf的注意事项：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;以回车确定输入结束。切记：只有回⻋才会结束输入。&lt;/li&gt;
&lt;li&gt;scanf(“%d%d”,&amp;amp;num1,&amp;amp;num2); // 限制输入格式。&lt;/li&gt;
&lt;li&gt;不要在格式串后面加’\n’字符，否则会抵消掉人工输⼊的回车。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;printf函数&quot;&gt;&lt;a href=&quot;#printf函数&quot; class=&quot;headerlink&quot; title=&quot;printf函数&quot;&gt;&lt;/a&gt;printf函数&lt;/h3&gt;&lt;p&gt;这是在stdio.h中声明的一个函数，因此使用前必须加入#include &lt;stdio.h&gt;，使用它可以向标准输出设备（比如屏幕）输出数据。&lt;/stdio.h&gt;&lt;/p&gt;
&lt;h4 id=&quot;简单用法&quot;&gt;&lt;a href=&quot;#简单用法&quot; class=&quot;headerlink&quot; title=&quot;简单用法&quot;&gt;&lt;/a&gt;简单用法&lt;/h4&gt;&lt;p&gt;printf(字符串, 格式符参数)：&lt;/p&gt;
&lt;p&gt;&amp;lt; 代码示例 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 使用常量作参数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;My age is %d\n&quot;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;26&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 也可以使用变量&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; age = &lt;span class=&quot;number&quot;&gt;17&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;My age is %d\n&quot;&lt;/span&gt;, age);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;lt; 输出结果 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight applescript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;My age &lt;span class=&quot;keyword&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;26&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;My age &lt;span class=&quot;keyword&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;17&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Program ended &lt;span class=&quot;keyword&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;exit&lt;/span&gt; code: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;lt; 代码分析 &amp;gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;格式符%d表示以有符号的十进制形式输出一个整型，格式符参数中的26和age会代替%d的位置。&lt;/li&gt;
&lt;li&gt;第2行代码中的\n是个转义字符，表示换行，所以输出了第一句”My age is 26”后会先换行，再输出”My age is 17”。&lt;/li&gt;
&lt;li&gt;如果去掉第2行中的\n，将会是这样的效果：My age is 26My age is 17&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;总结&lt;/strong&gt;：左边字符串中格式符的个数 必须跟 右边格式符参数的个数一样；格式符的类型决定了格式符参数的类型，比如使用%d，说明对应的格式符参数必须是整型。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;常用的格式符及其含义&quot;&gt;&lt;a href=&quot;#常用的格式符及其含义&quot; class=&quot;headerlink&quot; title=&quot;常用的格式符及其含义&quot;&gt;&lt;/a&gt;常用的格式符及其含义&lt;/h4&gt;&lt;p&gt;&lt;img src=&quot;http://images2015.cnblogs.com/blog/776348/201607/776348-20160718141032685-1803882138.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h4 id=&quot;精细的格式控制&quot;&gt;&lt;a href=&quot;#精细的格式控制&quot; class=&quot;headerlink&quot; title=&quot;精细的格式控制&quot;&gt;&lt;/a&gt;精细的格式控制&lt;/h4&gt;&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//  输出结果：The price is　　14.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;The price is %4d.&quot;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;14&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;你会发现”is”跟”14”的距离被拉开了，%4d的意思是输出宽度为4，而”14”的宽度为2，因此多出2个宽度，多出的宽度就会在左边用空格填补，因此你会看到”14”左边多了2个空格。&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//  输出结果：The price is 142434&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;The price is %4d.&quot;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;142434&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;如果实际数值宽度比较大，用%4d输出宽度为6的”142434”，那就会按照实际数值宽度6来输出。&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//  输出结果：The price is 14　　.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;The price is %-4d.&quot;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;14&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;你会发现”14”跟”.”的距离被拉开了，%-4d表示输出宽度为4，如果比实际数值宽度大，多出的宽度会在右边用空格填补。如果4比实际数值宽度小，就按照实际数值的宽度来输出。&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//  输出结果：My height is 179.95&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;My height is %.2f&quot;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;179.95f&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;保留两位小数。&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//  输出结果：My height is　　179.9&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;My height is %8.1f&quot;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;179.95f&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;同时设置输出宽度和小数位数，，输出宽度为8，保留1位小数。&lt;/p&gt;
&lt;h2 id=&quot;字符处理函数&quot;&gt;&lt;a href=&quot;#字符处理函数&quot; class=&quot;headerlink&quot; title=&quot;字符处理函数&quot;&gt;&lt;/a&gt;字符处理函数&lt;/h2&gt;&lt;p&gt;下面介绍的两个字符处理函数都是在stdio.h头文件中声明的。&lt;/p&gt;
&lt;h3 id=&quot;字符输出函数putchar&quot;&gt;&lt;a href=&quot;#字符输出函数putchar&quot; class=&quot;headerlink&quot; title=&quot;字符输出函数putchar&quot;&gt;&lt;/a&gt;字符输出函数putchar&lt;/h3&gt;&lt;p&gt;&amp;lt; 代码示例 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;putchar&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;65&lt;/span&gt;); &lt;span class=&quot;comment&quot;&gt;// A&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;putchar&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;A&#39;&lt;/span&gt;); &lt;span class=&quot;comment&quot;&gt;// A&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; a = &lt;span class=&quot;number&quot;&gt;65&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;putchar&lt;/span&gt;(a); &lt;span class=&quot;comment&quot;&gt;// A&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;lt; 代码分析 &amp;gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;上面的3种用法，输出的都是大写字母A。&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;注意&lt;/strong&gt;：putchar一次只能输出一个字符，而printf可以同时输出多个字符。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;字符输入函数getchar&quot;&gt;&lt;a href=&quot;#字符输入函数getchar&quot; class=&quot;headerlink&quot; title=&quot;字符输入函数getchar&quot;&gt;&lt;/a&gt;字符输入函数getchar&lt;/h3&gt;&lt;p&gt;&amp;lt; 代码示例 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; c;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;c = getchar();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;lt; 代码分析 &amp;gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;getchar会将用户输入的字符赋值给变量c。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;getchar函数可以读入空格、TAB，直到遇到回车为止（因为空格、TAB都有对应的ASCII码，getchar把他们当做ASCII码处理了）。&lt;/p&gt;
&lt;p&gt;getchar一次只能读入一个字符。&lt;/p&gt;
&lt;p&gt;getchar还能读入回车换行符，这时候你要敲2次回车键。第1次敲的回车换行符被getchar读入，第2次敲的回车键代表输入结束。&lt;/p&gt;
&lt;h2 id=&quot;参考&quot;&gt;&lt;a href=&quot;#参考&quot; class=&quot;headerlink&quot; title=&quot;参考&quot;&gt;&lt;/a&gt;参考&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;http://www.cnblogs.com/mjios/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;M了个J的博客&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
</content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;任何一个C语言程序都是由一个或者多个程序段（小程序）构成的，每个程序段都有自己的功能，我们一般称这些程序段为“函数”。所以，你可以说C语言程序是由函数构成的。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="1.0　【C语法】" scheme="http://sanfordy.com/categories/1-0-%E3%80%90C%E8%AF%AD%E6%B3%95%E3%80%91/"/>
    
    
  </entry>
  
  <entry>
    <title>【09】ASCII码</title>
    <link href="http://sanfordy.com/2016/06/19/1-0%20.C%E8%AF%AD%E6%B3%95/%E3%80%9009%E3%80%91ASCII%E7%A0%81/"/>
    <id>http://sanfordy.com/2016/06/19/1-0 .C语法/【09】ASCII码/</id>
    <published>2016-06-19T14:23:16.000Z</published>
    <updated>2016-08-09T06:21:42.000Z</updated>
    
    <content type="html">&lt;blockquote&gt;
&lt;p&gt;ASCII码是基于拉丁字母的一套电脑编码系统，是现今最通用的单字节编码系统，全称是“American Standard Code for Information Interchange”。编码系统，看起来好像很高级，其实就是一个字符集—字符的集合。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;ASCII码简介&quot;&gt;&lt;a href=&quot;#ASCII码简介&quot; class=&quot;headerlink&quot; title=&quot;ASCII码简介&quot;&gt;&lt;/a&gt;ASCII码简介&lt;/h2&gt;&lt;p&gt;ASCII码是基于拉丁字母的一套电脑编码系统，是现今最通用的单字节编码系统，全称是“American Standard Code for Information Interchange”。编码系统，看起来好像很高级，其实就是一个字符集—字符的集合。&lt;/p&gt;
&lt;p&gt;ASCII字符集包括了：所有的大写和小写英文字母，数字0到9，标点符号，以及一些特殊控制字符：如退格、删除、制表、回车，一共128个字符，全部都是“单字节字符”。&lt;/p&gt;
&lt;p&gt;在计算机中的任何数据都是以二进制形式存储的，因此每个ASCII字符在内存中是以二进制形式存储的，而且只占用1个字节，二进制数的值就称为这个ASCII字符的ASCII值。比如大写字母‘A’在内存中的二进制形式是：0100 0001，那么它的ASCII值就是65。&lt;/p&gt;
&lt;h2 id=&quot;ASCII码表&quot;&gt;&lt;a href=&quot;#ASCII码表&quot; class=&quot;headerlink&quot; title=&quot;ASCII码表&quot;&gt;&lt;/a&gt;ASCII码表&lt;/h2&gt;&lt;p&gt;下面是一张ASCII码字符表，ASCII码值的范围是0~127：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2015.cnblogs.com/blog/776348/201607/776348-20160701092939656-1944808901.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;ASCII码使用&quot;&gt;&lt;a href=&quot;#ASCII码使用&quot; class=&quot;headerlink&quot; title=&quot;ASCII码使用&quot;&gt;&lt;/a&gt;ASCII码使用&lt;/h2&gt;&lt;p&gt;我们都知道1个char型变量只占用1个字节的存储空间，而所有的ASCII字符都是单字节字符，因此char型变量能存储任何ASCII字符。而且在使用char型变量存储ASCII字符时，可以直接用ASCII字符，也可以用ASCII值：&lt;/p&gt;
&lt;p&gt;&amp;lt; 代码示例 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; c1 = &lt;span class=&quot;number&quot;&gt;65&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; c2 = &lt;span class=&quot;string&quot;&gt;&#39;A&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;c1=%c  c2=%c \n&quot;&lt;/span&gt;, c1, c2);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;lt; 输出结果 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight delphi&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;c1=A  c2=A &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;Program&lt;/span&gt; ended &lt;span class=&quot;keyword&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;exit&lt;/span&gt; code: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;lt; 代码分析 &amp;gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在第5、7行分别定义了字符型变量c1、c2。很明显，变量c2存储的是ACII字符‘A’；变量c1存储的是65，而ASCII值65对应的ASCII字符就是‘A’，因此变量c1存储的也是‘A’。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;下面来看看6和‘6’的区别：&lt;/p&gt;
&lt;p&gt;&amp;lt; 代码示例 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; c1 = &lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; c2 = &lt;span class=&quot;string&quot;&gt;&#39;6&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;c1=%d  c2=%d \n&quot;&lt;/span&gt;, c1, c2);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;lt; 输出结果 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight delphi&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;c1=&lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;  c2=&lt;span class=&quot;number&quot;&gt;54&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;Program&lt;/span&gt; ended &lt;span class=&quot;keyword&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;exit&lt;/span&gt; code: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;lt; 代码分析 &amp;gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;第5行给变量c1赋值了整数6，第7行给变量c2赋值了字符‘6’，‘6’的ASCII值是54。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;参考&quot;&gt;&lt;a href=&quot;#参考&quot; class=&quot;headerlink&quot; title=&quot;参考&quot;&gt;&lt;/a&gt;参考&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;http://www.cnblogs.com/mjios/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;M了个J的博客&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
</content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;ASCII码是基于拉丁字母的一套电脑编码系统，是现今最通用的单字节编码系统，全称是“American Standard Code for Information Interchange”。编码系统，看起来好像很高级，其实就是一个字符集—字符的集合。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="1.0　【C语法】" scheme="http://sanfordy.com/categories/1-0-%E3%80%90C%E8%AF%AD%E6%B3%95%E3%80%91/"/>
    
    
  </entry>
  
  <entry>
    <title>【08】进制</title>
    <link href="http://sanfordy.com/2016/06/19/1-0%20.C%E8%AF%AD%E6%B3%95/%E3%80%9008%E3%80%91%E8%BF%9B%E5%88%B6/"/>
    <id>http://sanfordy.com/2016/06/19/1-0 .C语法/【08】进制/</id>
    <published>2016-06-19T14:23:15.000Z</published>
    <updated>2016-08-09T06:11:44.000Z</updated>
    
    <content type="html">&lt;blockquote&gt;
&lt;p&gt;我们先来看看平时是如何表示一个整数的，最常见的肯定是用阿拉伯数字表示，比如“十二”，我们可以用12来表示，其实这种表示方式是基于一种叫做“十进制”的计数方式。“进制”是一种计数方式，编程中常见的进制有4种：十进制、二进制、八进制、十六进制。也就是说，同一个整数，我们至少有4种表示方式。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;我们先来看看平时是如何表示一个整数的，最常见的肯定是用阿拉伯数字表示，比如“十二”，我们可以用12来表示，其实这种表示方式是基于一种叫做“十进制”的计数方式。“进制”是一种计数方式，编程中常见的进制有4种：十进制、二进制、八进制、十六进制。也就是说，同一个整数，我们至少有4种表示方式。&lt;/p&gt;
&lt;h2 id=&quot;十进制&quot;&gt;&lt;a href=&quot;#十进制&quot; class=&quot;headerlink&quot; title=&quot;十进制&quot;&gt;&lt;/a&gt;十进制&lt;/h2&gt;&lt;h3 id=&quot;概念&quot;&gt;&lt;a href=&quot;#概念&quot; class=&quot;headerlink&quot; title=&quot;概念&quot;&gt;&lt;/a&gt;概念&lt;/h3&gt;&lt;p&gt;十进制是我们最熟悉、最常用的一种计数方式，它有两个特点：由0、1、2….9十个基本数字组成；运算规则是“逢十进一”。&lt;/p&gt;
&lt;h3 id=&quot;运算&quot;&gt;&lt;a href=&quot;#运算&quot; class=&quot;headerlink&quot; title=&quot;运算&quot;&gt;&lt;/a&gt;运算&lt;/h3&gt;&lt;p&gt;所谓“逢十进一”，似乎在小学数学中都已经学过了，也就是当数值满十时，就要向前进一位：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2015.cnblogs.com/blog/776348/201606/776348-20160623102519860-1011222561.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;个位数为9+1，满十了，十位数就进一。&lt;/p&gt;
&lt;h2 id=&quot;二进制&quot;&gt;&lt;a href=&quot;#二进制&quot; class=&quot;headerlink&quot; title=&quot;二进制&quot;&gt;&lt;/a&gt;二进制&lt;/h2&gt;&lt;h3 id=&quot;概念-1&quot;&gt;&lt;a href=&quot;#概念-1&quot; class=&quot;headerlink&quot; title=&quot;概念&quot;&gt;&lt;/a&gt;概念&lt;/h3&gt;&lt;p&gt;二进制是计算机内部使用的一种计数方式，它有两个特点：由0、1两个基本数字组成；运算规则是“逢二进一”。&lt;/p&gt;
&lt;h3 id=&quot;细节&quot;&gt;&lt;a href=&quot;#细节&quot; class=&quot;headerlink&quot; title=&quot;细节&quot;&gt;&lt;/a&gt;细节&lt;/h3&gt;&lt;p&gt;有人可能会问：为什么二进制里面没有2~9这些数字呢？都说了，逢二进一，因此当数字满二的时候就会进位。&lt;/p&gt;
&lt;p&gt;如果我写个1010，你能看出它是二进制还是十进制么？为了跟其他进制区分开来，书写二进制数的时候，需要以&lt;code&gt;0b&lt;/code&gt;或者&lt;code&gt;0B&lt;/code&gt;开头。比如0b1010是个二进制数，而1010则还是我们熟悉的十进制数，就是“一千零一十”&lt;/p&gt;
&lt;h3 id=&quot;运算-1&quot;&gt;&lt;a href=&quot;#运算-1&quot; class=&quot;headerlink&quot; title=&quot;运算&quot;&gt;&lt;/a&gt;运算&lt;/h3&gt;&lt;p&gt;做个简单的运算吧，比如1+1：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2015.cnblogs.com/blog/776348/201606/776348-20160623102524750-87756776.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;个位数是1+1，值满二了，于是十位数要进一。因此，在二进制中：1 + 1 = 0b10，这里的0b10表示的是十进制中的“二”，并不是“十”。&lt;/p&gt;
&lt;p&gt;以此类推，11 + 1 = 0b100：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2015.cnblogs.com/blog/776348/201606/776348-20160623102530235-234384441.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;二进制转为十进制&quot;&gt;&lt;a href=&quot;#二进制转为十进制&quot; class=&quot;headerlink&quot; title=&quot;二进制转为十进制&quot;&gt;&lt;/a&gt;二进制转为十进制&lt;/h3&gt;&lt;p&gt;进制里面有个“基数”的概念，基数是用来计算数值的，比如十进制的基数是10，因此十进制是这样算数的：1230 = 0 x 10&lt;sup&gt;0&lt;/sup&gt; + 3 x 10&lt;sup&gt;1&lt;/sup&gt; + 2 x 10&lt;sup&gt;2&lt;/sup&gt; + 1 x 10&lt;sup&gt;3&lt;/sup&gt; = 0 x 1 + 3 x 10 + 2 x 100 + 1 x 1000。&lt;/p&gt;
&lt;p&gt;二进制的基数是2，以此类推：0b1011 = 1 x 2&lt;sup&gt;0&lt;/sup&gt; + 1 x 2&lt;sup&gt;1&lt;/sup&gt; + 0 x 2&lt;sup&gt;2&lt;/sup&gt; + 1 x 2&lt;sup&gt;3&lt;/sup&gt; = 1 x 1 + 1 x 2 + 0 x 4 + 1 x 8 = 1 + 2 + 0 + 8 = 11，因此二进制数0b1011表示的数值是十进制中的11。&lt;/p&gt;
&lt;p&gt;一位二进制数能表示的最大值是1，而n位二进制数所能表示的最大值是0b111…1111，也就是说n位二进制数都是1，那么它的十进制数值为：1 x 2&lt;sup&gt;0&lt;/sup&gt; + 1 x 2&lt;sup&gt;1&lt;/sup&gt; + 1 x 2&lt;sup&gt;2&lt;/sup&gt; + 1 x 2&lt;sup&gt;3&lt;/sup&gt; + …. + 1 x 2&lt;sup&gt;n-1&lt;/sup&gt; = 2&lt;sup&gt;n&lt;/sup&gt; - 1。因此，n位二进制数所能表示的最大值是2&lt;sup&gt;n&lt;/sup&gt; - 1。也就是说，4位二进制数能表示的最大值是0b1111，十进制数值为：2&lt;sup&gt;4&lt;/sup&gt; - 1 = 15。&lt;/p&gt;
&lt;h2 id=&quot;八进制&quot;&gt;&lt;a href=&quot;#八进制&quot; class=&quot;headerlink&quot; title=&quot;八进制&quot;&gt;&lt;/a&gt;八进制&lt;/h2&gt;&lt;h3 id=&quot;概念-2&quot;&gt;&lt;a href=&quot;#概念-2&quot; class=&quot;headerlink&quot; title=&quot;概念&quot;&gt;&lt;/a&gt;概念&lt;/h3&gt;&lt;p&gt;八进制有两个特点：由0~7八个基本数字组成；运算规则是“逢八进一”。&lt;/p&gt;
&lt;h3 id=&quot;细节-1&quot;&gt;&lt;a href=&quot;#细节-1&quot; class=&quot;headerlink&quot; title=&quot;细节&quot;&gt;&lt;/a&gt;细节&lt;/h3&gt;&lt;p&gt;由于十进制和八进制中都包含了0~7，为了区分开来，在书写八进制数的时候，需要在前面加个&lt;code&gt;0&lt;/code&gt;。比如076是个八进制数，76则是个十进制数。&lt;/p&gt;
&lt;h3 id=&quot;运算-2&quot;&gt;&lt;a href=&quot;#运算-2&quot; class=&quot;headerlink&quot; title=&quot;运算&quot;&gt;&lt;/a&gt;运算&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;http://images2015.cnblogs.com/blog/776348/201606/776348-20160623102534906-1731486194.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;个位数是7+1，值满八了，于是十位数要进一。因此，在八进制中，7 + 1 = 010。010则表示十进制中的“八”，而不是“十”。&lt;/p&gt;
&lt;h3 id=&quot;八进制转十进制&quot;&gt;&lt;a href=&quot;#八进制转十进制&quot; class=&quot;headerlink&quot; title=&quot;八进制转十进制&quot;&gt;&lt;/a&gt;八进制转十进制&lt;/h3&gt;&lt;p&gt;八进制的基数是8，因此027计算出来就是十进制中的23：027 = 7 x 8&lt;sup&gt;0&lt;/sup&gt; + 2 x 8&lt;sup&gt;1&lt;/sup&gt; = 7 x 1 + 2 x 8 = 23。&lt;/p&gt;
&lt;h3 id=&quot;二进制转八进制&quot;&gt;&lt;a href=&quot;#二进制转八进制&quot; class=&quot;headerlink&quot; title=&quot;二进制转八进制&quot;&gt;&lt;/a&gt;二进制转八进制&lt;/h3&gt;&lt;p&gt;不难发现一个十进制数可以表示的最大值是9，而一个八进制数可以表示的最大值是7，恰好一个3位进制数可以表示的最大值0b111也是7。因此，我们可以用一个3位二进制数来代替一个1位八进制数：&lt;/p&gt;
&lt;p&gt;0b11110011 = 0b 011  110  011  = 0363。&lt;/p&gt;
&lt;h3 id=&quot;八进制转二进制&quot;&gt;&lt;a href=&quot;#八进制转二进制&quot; class=&quot;headerlink&quot; title=&quot;八进制转二进制&quot;&gt;&lt;/a&gt;八进制转二进制&lt;/h3&gt;&lt;p&gt;如果是八进制转为二进制，那就反过来，用一个3位二进制数来表示一个1位八进制数：&lt;/p&gt;
&lt;p&gt;025 = 0b 010  101 = 0b10101。&lt;/p&gt;
&lt;h2 id=&quot;十六进制&quot;&gt;&lt;a href=&quot;#十六进制&quot; class=&quot;headerlink&quot; title=&quot;十六进制&quot;&gt;&lt;/a&gt;十六进制&lt;/h2&gt;&lt;h3 id=&quot;概念-3&quot;&gt;&lt;a href=&quot;#概念-3&quot; class=&quot;headerlink&quot; title=&quot;概念&quot;&gt;&lt;/a&gt;概念&lt;/h3&gt;&lt;p&gt;十六进制有两个特点：由0~9和A~F组成，A~F分别表示10~15；运算规则是“逢十六进一”。&lt;/p&gt;
&lt;h3 id=&quot;细节-2&quot;&gt;&lt;a href=&quot;#细节-2&quot; class=&quot;headerlink&quot; title=&quot;细节&quot;&gt;&lt;/a&gt;细节&lt;/h3&gt;&lt;p&gt;由于十进制、八进制、十六进制中都包含了0~7，为了区分开来，在书写十六进制数的时候，需要在前面加个&lt;code&gt;0x&lt;/code&gt;或者&lt;code&gt;0X&lt;/code&gt;。比如0x76是个十六进制数，076是个八进制数，76则是个十进制数。&lt;/p&gt;
&lt;h3 id=&quot;运算-3&quot;&gt;&lt;a href=&quot;#运算-3&quot; class=&quot;headerlink&quot; title=&quot;运算&quot;&gt;&lt;/a&gt;运算&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;http://images2015.cnblogs.com/blog/776348/201606/776348-20160623102539938-225212688.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;个位数是B+5，也就是11+5，值满十六了，于是十位数要进一。因此，在十六进制中，B + 5 = 0x10。0x10则表示十进制中的“十六”，而不是“十”。&lt;/p&gt;
&lt;h3 id=&quot;十六进制转十进制&quot;&gt;&lt;a href=&quot;#十六进制转十进制&quot; class=&quot;headerlink&quot; title=&quot;十六进制转十进制&quot;&gt;&lt;/a&gt;十六进制转十进制&lt;/h3&gt;&lt;p&gt;十六进制的基数是16，F表示十进制中的15，因此0x2F计算出来就是十进制中的47：&lt;/p&gt;
&lt;p&gt;0x2F = 15 x 16&lt;sup&gt;0&lt;/sup&gt; + 2 x 16&lt;sup&gt;1&lt;/sup&gt; = 15 x 1 + 2 x 16 = 47&lt;/p&gt;
&lt;h3 id=&quot;二进制转十六进制&quot;&gt;&lt;a href=&quot;#二进制转十六进制&quot; class=&quot;headerlink&quot; title=&quot;二进制转十六进制&quot;&gt;&lt;/a&gt;二进制转十六进制&lt;/h3&gt;&lt;p&gt;一个十六进制数可以表示的最大值是15，恰好一个4位二进制数可以表示的最大值0b1111也是15。因此，我们可以用一个4位二进制数来代替一个1位十六进制数：&lt;/p&gt;
&lt;p&gt;0b11110011 = 0b 1111  0011  = 0xF3&lt;/p&gt;
&lt;h3 id=&quot;十六进制转二进制&quot;&gt;&lt;a href=&quot;#十六进制转二进制&quot; class=&quot;headerlink&quot; title=&quot;十六进制转二进制&quot;&gt;&lt;/a&gt;十六进制转二进制&lt;/h3&gt;&lt;p&gt;如果是十六进制转为二进制，那就反过来，用一个4位二进制数来表示一个1位十六进制数：&lt;/p&gt;
&lt;p&gt;0x25 = 0b 0010  0101=0b100101&lt;/p&gt;
&lt;h2 id=&quot;变量与进制&quot;&gt;&lt;a href=&quot;#变量与进制&quot; class=&quot;headerlink&quot; title=&quot;变量与进制&quot;&gt;&lt;/a&gt;变量与进制&lt;/h2&gt;&lt;h3 id=&quot;十进制与变量&quot;&gt;&lt;a href=&quot;#十进制与变量&quot; class=&quot;headerlink&quot; title=&quot;十进制与变量&quot;&gt;&lt;/a&gt;十进制与变量&lt;/h3&gt;&lt;p&gt;&amp;lt; 代码示例 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; a = &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;lt; 代码示例 &amp;gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在第3行定义了一个变量a，存储的是十进制整数10。其实，这个变量a在内存中是以二进制数的形式存储的，10的二进制形式是1010：&lt;br&gt;&lt;img src=&quot;http://images2015.cnblogs.com/blog/776348/201606/776348-20160623102544594-718950591.png&quot; alt=&quot;&quot;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;其他进制与变量&quot;&gt;&lt;a href=&quot;#其他进制与变量&quot; class=&quot;headerlink&quot; title=&quot;其他进制与变量&quot;&gt;&lt;/a&gt;其他进制与变量&lt;/h3&gt;&lt;p&gt;&amp;lt; 代码示例 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; a = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;b110; &lt;span class=&quot;comment&quot;&gt;// 十进制数：6&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; b = &lt;span class=&quot;number&quot;&gt;021&lt;/span&gt;; &lt;span class=&quot;comment&quot;&gt;// 十进制数：17&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; c = &lt;span class=&quot;number&quot;&gt;12&lt;/span&gt;; &lt;span class=&quot;comment&quot;&gt;// 十进制数：12&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; d = &lt;span class=&quot;number&quot;&gt;0x1D&lt;/span&gt;; &lt;span class=&quot;comment&quot;&gt;// 十进制数：29&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;lt; 代码分析 &amp;gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;上面的代码中，分别将4种不同进制的数值赋值给不同的整型变量。对应的十进制数值已经写在右边的注释中。它们最终都是以二进制的形式存储在内存中：&lt;br&gt;&lt;img src=&quot;http://images2015.cnblogs.com/blog/776348/201606/776348-20160623102549172-1114288608.png&quot; alt=&quot;&quot;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;参考&quot;&gt;&lt;a href=&quot;#参考&quot; class=&quot;headerlink&quot; title=&quot;参考&quot;&gt;&lt;/a&gt;参考&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;http://www.cnblogs.com/mjios/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;M了个J的博客&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
</content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;我们先来看看平时是如何表示一个整数的，最常见的肯定是用阿拉伯数字表示，比如“十二”，我们可以用12来表示，其实这种表示方式是基于一种叫做“十进制”的计数方式。“进制”是一种计数方式，编程中常见的进制有4种：十进制、二进制、八进制、十六进制。也就是说，同一个整数，我们至少有4种表示方式。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="1.0　【C语法】" scheme="http://sanfordy.com/categories/1-0-%E3%80%90C%E8%AF%AD%E6%B3%95%E3%80%91/"/>
    
    
  </entry>
  
  <entry>
    <title>【07】变量（三）</title>
    <link href="http://sanfordy.com/2016/06/18/1-0%20.C%E8%AF%AD%E6%B3%95/%E3%80%9007%E3%80%91%E5%8F%98%E9%87%8F%EF%BC%88%E4%B8%89%EF%BC%89/"/>
    <id>http://sanfordy.com/2016/06/18/1-0 .C语法/【07】变量（三）/</id>
    <published>2016-06-18T14:23:15.000Z</published>
    <updated>2016-08-09T01:17:47.000Z</updated>
    
    <content type="html">&lt;blockquote&gt;
&lt;p&gt;我们已经知道，在64bit编译器环境下，1个int类型变量取值范围是-231 ~ 231 - 1，最大值是231-1。有时候，我们要使用的整数可能比231-1还大，比如234这个整数，如果还坚持用int类型变量来存储这个值的话，就会损失精度，得到的是垃圾数据。为了解决这个问题，C语言允许我们给int类型的变量加一些类型修饰符，某些类型修饰符可以增大int类型变量的长度，这样的话，int类型变量能存储的数据范围就变大了。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;类型修饰符&quot;&gt;&lt;a href=&quot;#类型修饰符&quot; class=&quot;headerlink&quot; title=&quot;类型修饰符&quot;&gt;&lt;/a&gt;类型修饰符&lt;/h2&gt;&lt;h3 id=&quot;什么是类型修饰符&quot;&gt;&lt;a href=&quot;#什么是类型修饰符&quot; class=&quot;headerlink&quot; title=&quot;什么是类型修饰符&quot;&gt;&lt;/a&gt;什么是类型修饰符&lt;/h3&gt;&lt;p&gt;我们已经知道，在64bit编译器环境下，1个int类型变量取值范围是-231 ~ 231 - 1，最大值是231-1。有时候，我们要使用的整数可能比231-1还大，比如234这个整数，如果还坚持用int类型变量来存储这个值的话，就会损失精度，得到的是垃圾数据。为了解决这个问题，C语言允许我们给int类型的变量加一些类型修饰符，某些类型修饰符可以增大int类型变量的长度，这样的话，int类型变量能存储的数据范围就变大了。&lt;/p&gt;
&lt;p&gt;C语言提供了以下4种类型修饰符，4个都属于关键字：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;short  短型。&lt;/li&gt;
&lt;li&gt;long  长型。&lt;/li&gt;
&lt;li&gt;signed  有符号型。&lt;/li&gt;
&lt;li&gt;unsigned  无符号型。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;按照用途进行分类，short和long是一类，signed和unsigned是一类。&lt;/p&gt;
&lt;h3 id=&quot;用法演示&quot;&gt;&lt;a href=&quot;#用法演示&quot; class=&quot;headerlink&quot; title=&quot;用法演示&quot;&gt;&lt;/a&gt;用法演示&lt;/h3&gt;&lt;p&gt;这些说明符一般就是用来修饰int类型的，所以在使用时可以省略int：&lt;/p&gt;
&lt;p&gt;&amp;lt; 代码示例 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 下面两种写法是等价的&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;keyword&quot;&gt;short&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; s1 = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;keyword&quot;&gt;short&lt;/span&gt; s2 = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;comment&quot;&gt;// 下面两种写法是等价的&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; l1 = &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; l2 = &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;comment&quot;&gt;// 可以连续使用2个long&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; ll = &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;comment&quot;&gt;// 下面两种写法是等价的&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;keyword&quot;&gt;signed&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; si1 = &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;keyword&quot;&gt;signed&lt;/span&gt; si2 = &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;comment&quot;&gt;// 下面两种写法是等价的&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;keyword&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; us1 = &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;keyword&quot;&gt;unsigned&lt;/span&gt; us2 = &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;comment&quot;&gt;// 也可以同时使用2种修饰符&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;keyword&quot;&gt;signed&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;short&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; ss = &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;keyword&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; ul = &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;lt; 代码分析 &amp;gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;第2行中的short int和第3行中的short是等价的。&lt;/li&gt;
&lt;li&gt;看第10行，可以连续使用两个long。long的作用会在后面解释。&lt;/li&gt;
&lt;li&gt;注意第21和22行，可以同时使用两种不同的说明符。但是不能同时使用相同类型的修饰符，也就是说不能同时使用short和long 或者 不能同时使用signed和unsigned。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;short和long&quot;&gt;&lt;a href=&quot;#short和long&quot; class=&quot;headerlink&quot; title=&quot;short和long&quot;&gt;&lt;/a&gt;short和long&lt;/h3&gt;&lt;p&gt;short和long可以提供不同长度的整型数，也就是可以改变整型数的取值范围。在64bit编译器环境下，int占用4个字节（32bit），取值范围是-231~231-1；short占用2个字节（16bit），取值范围是-215~215-1；long占用8个字节（64bit），取值范围是-263~263-1。&lt;/p&gt;
&lt;p&gt;在64位编译器环境下，short占2个字节(16位)，int占4个字节(32位)，long占8个字节(64位)。因此，如果使用的整数不是很大的话，可以使用short代替int，这样的话，更节省内存开销。&lt;/p&gt;
&lt;p&gt;世界上的编译器林林总总，不同编译器环境下，int、short、long的取值范围和占用的长度又是不一样的。比如在16bit编译器环境下，long只占用4个字节。不过幸运的是，ANSI \ ISO制定了以下规则：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;short跟int至少为16位（2字节）。&lt;/li&gt;
&lt;li&gt;long至少为32位（4字节）。&lt;/li&gt;
&lt;li&gt;short的长度不能大于int，int的长度不能大于long。&lt;/li&gt;
&lt;li&gt;char一定为为8位（1字节），毕竟char是我们编程能用的最小数据类型。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;可以连续使用2个long，也就是long long。一般来说，long long的范围是不小于long的，比如在32bit编译器环境下，long long占用8个字节，long占用4个字节。不过在64bit编译器环境下，long long跟long是一样的，都占用8个字节。&lt;/p&gt;
&lt;p&gt;还有一点要明确的是：short int等价于short，long int等价于long，long long int等价于long long。&lt;/p&gt;
&lt;h3 id=&quot;long的使用注意&quot;&gt;&lt;a href=&quot;#long的使用注意&quot; class=&quot;headerlink&quot; title=&quot;long的使用注意&quot;&gt;&lt;/a&gt;long的使用注意&lt;/h3&gt;&lt;h4 id=&quot;常量&quot;&gt;&lt;a href=&quot;#常量&quot; class=&quot;headerlink&quot; title=&quot;常量&quot;&gt;&lt;/a&gt;常量&lt;/h4&gt;&lt;p&gt;long和int都能够存储整型常量，为了区分long和int，一般会在整型常量后面加个小写字母l，比如100l，表示long类型的常量。如果是long long类型呢，就加2个l，比如100ll。如果什么都不加，就是int类型的常量。因此，100是int类型的常量，100l是long类型的常量，100ll是long long类型的常量：&lt;/p&gt;
&lt;p&gt;&amp;lt; 代码示例 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; a = &lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; b = &lt;span class=&quot;number&quot;&gt;100l&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; c = &lt;span class=&quot;number&quot;&gt;100l&lt;/span&gt;l;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;lt; 代码分析 &amp;gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;变量a、b、c最终存储的值其实都是100，只不过占用的字节不相同，变量a用4个字节来存储100，变量b、c则用8个字节来存储100。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;其实，你直接将100赋值给long类型的变量也是没问题的，照样使用。因为100是个int类型的常量，只要有4个字节，就能存储它，而long类型的变量b有8个字节，那肯定可以装下100啦：&lt;/p&gt;
&lt;p&gt;&amp;lt; 代码示例 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; b = &lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;输出&quot;&gt;&lt;a href=&quot;#输出&quot; class=&quot;headerlink&quot; title=&quot;输出&quot;&gt;&lt;/a&gt;输出&lt;/h4&gt;&lt;p&gt;&amp;lt; 代码示例 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; a = &lt;span class=&quot;number&quot;&gt;100000000000l&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;%d\n&quot;&lt;/span&gt;, a);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;lt; 输出结果 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight delphi&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;1215752192&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;Program&lt;/span&gt; ended &lt;span class=&quot;keyword&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;exit&lt;/span&gt; code: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;lt; 代码分析 &amp;gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在第5行定义了long类型变量a，在第7行尝试输出a的值。注意了，这里用的是%d，表示以十进制整数格式输出，%d会把a当做int类型来输出，它认为a是4个字节的。由于a是long类型的，占用8个字节，但是输出a的时候，只会取其中4个字节的内容进行输出，所以输出结果又是传说的垃圾数据。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;那怎样才能完整地输出long类型呢？应该用格式符%ld：&lt;/p&gt;
&lt;p&gt;&amp;lt; 代码示例 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; a = &lt;span class=&quot;number&quot;&gt;100000000000l&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;%ld\n&quot;&lt;/span&gt;, a);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;lt; 输出结果 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight delphi&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;1000000000000&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;Program&lt;/span&gt; ended &lt;span class=&quot;keyword&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;exit&lt;/span&gt; code: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;注意第7行，双引号里面的是%ld，表示输出1个long类型的整数。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;如果是long long类型，应该用%lld：&lt;/p&gt;
&lt;p&gt;&amp;lt; 代码示例 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; a = &lt;span class=&quot;number&quot;&gt;100000000000l&lt;/span&gt;l;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;%lld\n&quot;&lt;/span&gt;, a);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;lt; 输出结果 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight delphi&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;1000000000000&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;Program&lt;/span&gt; ended &lt;span class=&quot;keyword&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;exit&lt;/span&gt; code: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;signed和unsigned&quot;&gt;&lt;a href=&quot;#signed和unsigned&quot; class=&quot;headerlink&quot; title=&quot;signed和unsigned&quot;&gt;&lt;/a&gt;signed和unsigned&lt;/h3&gt;&lt;p&gt;首先要明确的：&lt;code&gt;signed int&lt;/code&gt;等价于&lt;code&gt;signed&lt;/code&gt;，&lt;code&gt;unsigned int&lt;/code&gt;等价于&lt;code&gt;unsigned&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;signed&lt;/code&gt;和&lt;code&gt;unsigned&lt;/code&gt;的区别就是它们的最高位是否要当做符号位，并不会像&lt;code&gt;short&lt;/code&gt;和&lt;code&gt;long&lt;/code&gt;那样改变数据的长度，即所占的字节数。&lt;/p&gt;
&lt;h4 id=&quot;signed&quot;&gt;&lt;a href=&quot;#signed&quot; class=&quot;headerlink&quot; title=&quot;signed&quot;&gt;&lt;/a&gt;signed&lt;/h4&gt;&lt;p&gt;&lt;code&gt;signed&lt;/code&gt;表示有符号，也就是说最高位要当做符号位，所以包括正数、负数和0。其实int的最高位本来就是符号位，已经包括了正负数和0了，因此signed和int是一样的，signed等价于signed int，也等价于int。signed的取值范围是-231 ~ 231 - 1。&lt;/p&gt;
&lt;h4 id=&quot;unsigned&quot;&gt;&lt;a href=&quot;#unsigned&quot; class=&quot;headerlink&quot; title=&quot;unsigned&quot;&gt;&lt;/a&gt;unsigned&lt;/h4&gt;&lt;p&gt;&lt;code&gt;unsigned&lt;/code&gt;表示无符号，也就是说最高位并不当做符号位，所以不包括负数。在64bit编译器环境下面，int占用4个字节（32bit），因此unsigned的取值范围是：0000 0000 0000 0000 0000 0000 0000 0000 ~ 1111 1111 1111 1111 1111 1111 1111 1111，也就是0 ~ 232 - 1。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;注意&lt;/strong&gt;：signed、unsigned也可以修饰char，long还可以修饰double。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;不同数据类型所占用的存储空间&quot;&gt;&lt;a href=&quot;#不同数据类型所占用的存储空间&quot; class=&quot;headerlink&quot; title=&quot;不同数据类型所占用的存储空间&quot;&gt;&lt;/a&gt;不同数据类型所占用的存储空间&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;http://images2015.cnblogs.com/blog/776348/201606/776348-20160618225017760-1752659694.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;自动类型提升&quot;&gt;&lt;a href=&quot;#自动类型提升&quot; class=&quot;headerlink&quot; title=&quot;自动类型提升&quot;&gt;&lt;/a&gt;自动类型提升&lt;/h2&gt;&lt;h3 id=&quot;什么是自动类型提升&quot;&gt;&lt;a href=&quot;#什么是自动类型提升&quot; class=&quot;headerlink&quot; title=&quot;什么是自动类型提升&quot;&gt;&lt;/a&gt;什么是自动类型提升&lt;/h3&gt;&lt;p&gt;先来看看下面的一则运算：&lt;/p&gt;
&lt;p&gt;&amp;lt; 代码示例 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; a = &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;double&lt;/span&gt; d = a + &lt;span class=&quot;number&quot;&gt;9.5&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;%f \n&quot;&lt;/span&gt;, d);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;lt; 输出结果 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight delphi&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;19.500000&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;Program&lt;/span&gt; ended &lt;span class=&quot;keyword&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;exit&lt;/span&gt; code: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;在第5行定义了一个int类型的变量a，赋值了一个整数10。&lt;/li&gt;
&lt;li&gt;接着在第7行取出a的值10，加上浮点数9.5，这里做了一个“加法运算”，并且将“和”赋值给d。所以d的值应该是19.5。&lt;/li&gt;
&lt;li&gt;在第9行使用格式符%f输出浮点型变量d，默认是保留6位小数的。&lt;/li&gt;
&lt;li&gt;看似这么简单的运算，其实包含了一些语法细节在里面。严格来说，相同数据类型的值才能进行运算（比如加法运算），而且运算结果依然是同一种数据类型。第7行的情况是：变量a的值10是int类型（4字节），9.5是double类型（8字节）。很明显，10和9.5并不是相同数据类型。按理来说，10和9.5是不允许进行加法运算的。但是，系统会自动对占用内存较少的类型做一个“自动类型提升”的操作，也就把10提升为double类型。也就是说，本来是用4个字节来存放10的，现在改为用8个字节来存放10。因此，10和9.5现在都是用8个字节来存放的，都是double类型，然后就可以进行运算了。并且把运算结果赋值给double类型的变量d。&lt;/li&gt;
&lt;li&gt;需要注意的是：经过第7行代码后，变量a一直都还是int类型的，并没有变成double类型。1个变量在它定义的时候是什么类型，那么就一直都是什么类型。“自动类型提升”只是在运算过程中进行的。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;常见的自动类型提升&quot;&gt;&lt;a href=&quot;#常见的自动类型提升&quot; class=&quot;headerlink&quot; title=&quot;常见的自动类型提升&quot;&gt;&lt;/a&gt;常见的自动类型提升&lt;/h3&gt;&lt;p&gt;&amp;lt; 代码示例 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;float&lt;/span&gt; a = &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt; + &lt;span class=&quot;number&quot;&gt;3.45f&lt;/span&gt;;&lt;span class=&quot;comment&quot;&gt;// int 提升为 float&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; b = &lt;span class=&quot;string&quot;&gt;&#39;A&#39;&lt;/span&gt; + &lt;span class=&quot;number&quot;&gt;32&lt;/span&gt;; &lt;span class=&quot;comment&quot;&gt;// char 提升为 int&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;double&lt;/span&gt; c = &lt;span class=&quot;number&quot;&gt;10.3f&lt;/span&gt; + &lt;span class=&quot;number&quot;&gt;5.7&lt;/span&gt;; &lt;span class=&quot;comment&quot;&gt;// float 提升为 double&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;注意第5行，系统会将字符’A’提升为int类型数据，也就是转为’A’的ASCII值后再跟32进行加法运算。’A’的ASCII值是65，因此变量b的值为65+32=97。&lt;/li&gt;
&lt;li&gt;这个自动类型提升，知道有这么一回事就行了，不用死记这规则，因为系统会自动执行这个操作。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;强制类型转换&quot;&gt;&lt;a href=&quot;#强制类型转换&quot; class=&quot;headerlink&quot; title=&quot;强制类型转换&quot;&gt;&lt;/a&gt;强制类型转换&lt;/h2&gt;&lt;h3 id=&quot;什么是强制类型转换&quot;&gt;&lt;a href=&quot;#什么是强制类型转换&quot; class=&quot;headerlink&quot; title=&quot;什么是强制类型转换&quot;&gt;&lt;/a&gt;什么是强制类型转换&lt;/h3&gt;&lt;p&gt;先来看看下面的代码：&lt;/p&gt;
&lt;p&gt;&amp;lt; 代码示例 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;10.7&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;%d \n&quot;&lt;/span&gt;, i);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; j = (int) &lt;span class=&quot;number&quot;&gt;10.7&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;%d \n&quot;&lt;/span&gt;, j);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;lt; 输出结果 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight delphi&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;Program&lt;/span&gt; ended &lt;span class=&quot;keyword&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;exit&lt;/span&gt; code: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;注意第5行，我们将一个8个字节的浮点数10.7赋值给了只有4个字节存储空间的整型变量i。可以想象得到，把8个字节的内容塞给4个字节，肯定会损失精度。这里面也有一点语法细节，其实第5行做了一个“强制类型转换”的操作：由于左边是int类型的变量i，那么就会强制把double类型的10.7转换为int类型的10，并且把转换后的值赋值给了整型变量i。由于C语言是语法限制不严格，所以系统会自动强制转换，如果换做是其他语法严格的语言，比如Java，第5行代码早就报错了。&lt;/li&gt;
&lt;li&gt;如果写得严格一点，明显地进行“强制类型转换”，应该写成第8行，在10.7的前面加了个(int)，表示强制转换为int类型的数据。这样就绝对不会有语法问题了。总之你将一个浮点型数据转换为整型数据，就会丢失小数部分的值。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;常见的强制类型转换&quot;&gt;&lt;a href=&quot;#常见的强制类型转换&quot; class=&quot;headerlink&quot; title=&quot;常见的强制类型转换&quot;&gt;&lt;/a&gt;常见的强制类型转换&lt;/h3&gt;&lt;p&gt;这个强制类型转换，知道有这么一回事就行了，不用死记这规则，因为很多时候系统会自动执行这个操作：&lt;/p&gt;
&lt;p&gt;&amp;lt; 代码示例 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; a = &lt;span class=&quot;number&quot;&gt;198l&lt;/span&gt;; &lt;span class=&quot;comment&quot;&gt;// long 转换为 int&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; b = &lt;span class=&quot;number&quot;&gt;65&lt;/span&gt;; &lt;span class=&quot;comment&quot;&gt;// int 转换为 char&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; c = &lt;span class=&quot;number&quot;&gt;19.5f&lt;/span&gt;; &lt;span class=&quot;comment&quot;&gt;// float 转换为 int&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;其他用法&quot;&gt;&lt;a href=&quot;#其他用法&quot; class=&quot;headerlink&quot; title=&quot;其他用法&quot;&gt;&lt;/a&gt;其他用法&lt;/h3&gt;&lt;p&gt;前面看到的强制转换好像都是“大类型”转为“小类型”，其实这是不一样的，也可以由“小类型”转为“大类型”：&lt;/p&gt;
&lt;p&gt;&amp;lt; 代码示例 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; a = &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;double&lt;/span&gt; b = (double)a  + &lt;span class=&quot;number&quot;&gt;9.6&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;lt; 代码分析 &amp;gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;注意第5行，先将a的值强制转换为double类型后，再跟9.6进行加法运算。这样的话，系统就不用执行“自动类型提升”的操作了。其实你不强转也可以的，因为系统会做一个“自动类型提升”的操作，将变量a的值10提升为double类型。知道有这用法就行了，以后某些地方会用得上。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;参考&quot;&gt;&lt;a href=&quot;#参考&quot; class=&quot;headerlink&quot; title=&quot;参考&quot;&gt;&lt;/a&gt;参考&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;http://www.cnblogs.com/mjios/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;M了个J的博客&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
</content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;我们已经知道，在64bit编译器环境下，1个int类型变量取值范围是-231 ~ 231 - 1，最大值是231-1。有时候，我们要使用的整数可能比231-1还大，比如234这个整数，如果还坚持用int类型变量来存储这个值的话，就会损失精度，得到的是垃圾数据。为了解决这个问题，C语言允许我们给int类型的变量加一些类型修饰符，某些类型修饰符可以增大int类型变量的长度，这样的话，int类型变量能存储的数据范围就变大了。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="1.0　【C语法】" scheme="http://sanfordy.com/categories/1-0-%E3%80%90C%E8%AF%AD%E6%B3%95%E3%80%91/"/>
    
    
  </entry>
  
  <entry>
    <title>【06】变量（二）</title>
    <link href="http://sanfordy.com/2016/06/07/1-0%20.C%E8%AF%AD%E6%B3%95/%E3%80%9006%E3%80%91%E5%8F%98%E9%87%8F%EF%BC%88%E4%BA%8C%EF%BC%89/"/>
    <id>http://sanfordy.com/2016/06/07/1-0 .C语法/【06】变量（二）/</id>
    <published>2016-06-07T14:40:54.000Z</published>
    <updated>2016-08-09T00:53:45.000Z</updated>
    
    <content type="html">&lt;blockquote&gt;
&lt;p&gt;在C语言中，你声明一个局部变量后，没有经过初始化赋值是可以使用的，但这是很危险的，不建议这样做。大多数人应该觉得变量b打印出来应该是0，其实不是。因为系统会随意给变量b赋值，得到的是垃圾数据。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;变量和内存的关系&quot;&gt;&lt;a href=&quot;#变量和内存的关系&quot; class=&quot;headerlink&quot; title=&quot;变量和内存的关系&quot;&gt;&lt;/a&gt;变量和内存的关系&lt;/h2&gt;&lt;h3 id=&quot;变量示例&quot;&gt;&lt;a href=&quot;#变量示例&quot; class=&quot;headerlink&quot; title=&quot;变量示例&quot;&gt;&lt;/a&gt;变量示例&lt;/h3&gt;&lt;p&gt;&amp;lt; 代码示例 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; a = &lt;span class=&quot;string&quot;&gt;&#39;A&#39;&lt;/span&gt;; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; b = &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;变量a中的‘A’是用1个字节来存储的，1个字节共8位，变量a在内存中的存储形式是0100 0001，至于为什么‘A’的二进制是这样呢，后面再讨论。&lt;/li&gt;
&lt;li&gt;变量b中的10是用4个字节来存储的，4个字节共32位，因此变量b在内存中的存储形式应该是0000 0000 0000 0000 0000 0000 0000 1010。&lt;/li&gt;
&lt;li&gt;上述变量a、b在内存中的存储情况大致如下表所示（“存储的内容”那一列的一个小格子就代表一个字节，“地址”那一列是指每个字节的地址。）：&lt;br&gt;&lt;img src=&quot;http://images2015.cnblogs.com/blog/776348/201606/776348-20160607225259808-1160410400.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;从图中可以看出，变量b占用了内存地址从ffc1~ffc4的4个字节，变量a占用了内存地址为ffc5的1个字节。每个字节都有自己的地址，其实变量也有地址。变量存储单元的第一个字节的地址就是该变量的地址。变量a的地址是ffc5，变量b的地址是ffc1。内存寻址是从大到小的，也就是说做什么事都会先从内存地址较大的字节开始，因此系统会优先分配地址值较大的字节给变量。由于是先定义变量a、后定义变量b，因此你会看到变量a的地址ffc5比变量b的地址ffc1大。注意看表格中变量b存储的内容，变量b的二进制形式是：0000 0000 0000 0000 0000 0000 0000 1010。由于内存寻址是从大到小的，所以是从内存地址最大的字节开始存储数据，存放顺序是ffc4-&amp;gt;ffc3-&amp;gt; ffc2-&amp;gt;ffc1，所以把前面的0000 0000都放在ffc2~ffc4中，最后面的八位0000 1010放在ffc1中。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;查看变量的内存地址&quot;&gt;&lt;a href=&quot;#查看变量的内存地址&quot; class=&quot;headerlink&quot; title=&quot;查看变量的内存地址&quot;&gt;&lt;/a&gt;查看变量的内存地址&lt;/h3&gt;&lt;p&gt;在调试过程中，我们经常会采取打印的方式查看变量的地址：&lt;/p&gt;
&lt;p&gt;&amp;lt; 代码示例 &amp;gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;main.c&lt;/em&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; a = &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;变量a的地址是：%p&quot;&lt;/span&gt;, &amp;amp;a);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;lt; 输出结果 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;变量a的地址是：&lt;span class=&quot;number&quot;&gt;0x7fff5fbff8f8&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;lt; 代码分析 &amp;gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;第6行中的&amp;amp;是一个地址运算符，&amp;amp;a表示取得变量a的地址。格式符%p是专门用来输出地址的。这个0x7fff5fbff8f8就是变量a的内存地址。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;变量的使用注意&quot;&gt;&lt;a href=&quot;#变量的使用注意&quot; class=&quot;headerlink&quot; title=&quot;变量的使用注意&quot;&gt;&lt;/a&gt;变量的使用注意&lt;/h2&gt;&lt;h3 id=&quot;不能重复定义同一个变量&quot;&gt;&lt;a href=&quot;#不能重复定义同一个变量&quot; class=&quot;headerlink&quot; title=&quot;不能重复定义同一个变量&quot;&gt;&lt;/a&gt;不能重复定义同一个变量&lt;/h3&gt;&lt;p&gt;下面的代码是错误的：&lt;/p&gt;
&lt;p&gt;&amp;lt; 代码示例 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;89&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;lt; CRASH &amp;gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;编译器会报第5行的错，错误的原因很简单，第3行和第5行都是定义变量i，因此在内存中会是这样：&lt;br&gt;&lt;img src=&quot;http://images2015.cnblogs.com/blog/776348/201606/776348-20160607225305090-942626929.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;内存中会出现两块存储空间，而且名字都叫i，那如果我想取出变量i的值，那你说计算机取10好还是取89好呢？因此，这种做法肯定是不可以的。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;同类型变量之间可以相互赋值&quot;&gt;&lt;a href=&quot;#同类型变量之间可以相互赋值&quot; class=&quot;headerlink&quot; title=&quot;同类型变量之间可以相互赋值&quot;&gt;&lt;/a&gt;同类型变量之间可以相互赋值&lt;/h3&gt;&lt;p&gt;&amp;lt; 代码示例 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; a = i;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;lt; 代码分析 &amp;gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在第3行定义了变量i且初始值为10；接着在第5行定义了变量a，并且将变量i的值赋值给了a。在内存中大致如下图所示：&lt;br&gt;&lt;img src=&quot;http://images2015.cnblogs.com/blog/776348/201606/776348-20160607225310043-2108240599.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;变量i和变量a存储的值都是10。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;变量的作用域&quot;&gt;&lt;a href=&quot;#变量的作用域&quot; class=&quot;headerlink&quot; title=&quot;变量的作用域&quot;&gt;&lt;/a&gt;变量的作用域&lt;/h3&gt;&lt;p&gt;变量的作用范围（作用域）是从定义变量的那一行代码开始，下面的代码是错误的：&lt;/p&gt;
&lt;p&gt;&amp;lt; 代码示例 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; a = i;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; b = i;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;lt; CRASH &amp;gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;编译器会报第3行的错误，错误原因是：标识符i找不到。我们是在第5行定义了变量i，因此变量i从第5行开始才有效，在前面的第3行是无效的。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;没有经过初始化的变量是可以使用的&quot;&gt;&lt;a href=&quot;#没有经过初始化的变量是可以使用的&quot; class=&quot;headerlink&quot; title=&quot;没有经过初始化的变量是可以使用的&quot;&gt;&lt;/a&gt;没有经过初始化的变量是可以使用的&lt;/h3&gt;&lt;p&gt;在C语言中，你声明一个局部变量后，没有经过初始化赋值是可以使用的，但这是很危险的，不建议这样做。大多数人应该觉得变量b打印出来应该是0，其实不是。因为系统会随意给变量b赋值，得到的是垃圾数据：&lt;/p&gt;
&lt;p&gt;&amp;lt; 代码示例 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; b;           &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;%d&quot;&lt;/span&gt;, b);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;lt; 输出结果 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight dns&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;1606422622&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;lt; 代码分析 &amp;gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;上述代码的打印结果是个垃圾数据，因此局部变量还是必须先进行初始化赋值，然后再使用，这样才是最安全的做法。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;如果是全局的int类型变量，系统会默认赋值为0：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2015.cnblogs.com/blog/776348/201606/776348-20160607225318965-1449503471.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;char使用注意事项&quot;&gt;&lt;a href=&quot;#char使用注意事项&quot; class=&quot;headerlink&quot; title=&quot;char使用注意事项&quot;&gt;&lt;/a&gt;char使用注意事项&lt;/h3&gt;&lt;h4 id=&quot;char的取值范围&quot;&gt;&lt;a href=&quot;#char的取值范围&quot; class=&quot;headerlink&quot; title=&quot;char的取值范围&quot;&gt;&lt;/a&gt;char的取值范围&lt;/h4&gt;&lt;p&gt;char的取值范围是ASCII码字符或者-128~127的整数，所以使用char存储大写字母A有2种赋值方式：&lt;/p&gt;
&lt;p&gt;&amp;lt; 代码示例 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 方式1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; c = &lt;span class=&quot;string&quot;&gt;&#39;A&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 方式2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; c = &lt;span class=&quot;number&quot;&gt;65&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;lt; 代码分析 &amp;gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;上面两种方式是等效的，因为大写字母A的ASCII码值刚好为65。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;char只能存储一个字符&quot;&gt;&lt;a href=&quot;#char只能存储一个字符&quot; class=&quot;headerlink&quot; title=&quot;char只能存储一个字符&quot;&gt;&lt;/a&gt;char只能存储一个字符&lt;/h4&gt;&lt;p&gt;汉字或者字符串需要用字符数组来存储，因为一个汉字占了2个字符，一个字符串是由一个或者多个字符组成的。因此，下面的写法都是错误的：&lt;/p&gt;
&lt;p&gt;&amp;lt; 代码示例 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;char c1 = &#39;我&#39;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;char c2 = &#39;123&#39;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;char c3 = &quot;123&quot;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;补码相关&quot;&gt;&lt;a href=&quot;#补码相关&quot; class=&quot;headerlink&quot; title=&quot;补码相关&quot;&gt;&lt;/a&gt;补码相关&lt;/h3&gt;&lt;p&gt;其实任何数值在内存中都是以补码的形式存储的：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;正数的补码与原码相同。比如9的原码和补码都是1001。&lt;/li&gt;
&lt;li&gt;负数的补码等于它正数的原码取反后再+1。（取反的意思就是0变1、1变0）。那么-10的补码计算过程如下：&lt;ul&gt;
&lt;li&gt;先算出10的二进制形式：0000 0000 0000 0000 0000 0000 0000 1010。&lt;/li&gt;
&lt;li&gt;对10的二进制进行取反：1111 1111 1111 1111 1111 1111 1111 0101。&lt;/li&gt;
&lt;li&gt;取反后的结果+1：1111 1111 1111 1111 1111 1111 1111 0110，因此，整数-10在内存中的二进制形式是：1111 1111 1111 1111 1111 1111 1111 0110。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;变量的作用域-1&quot;&gt;&lt;a href=&quot;#变量的作用域-1&quot; class=&quot;headerlink&quot; title=&quot;变量的作用域&quot;&gt;&lt;/a&gt;变量的作用域&lt;/h2&gt;&lt;h3 id=&quot;作用域简介&quot;&gt;&lt;a href=&quot;#作用域简介&quot; class=&quot;headerlink&quot; title=&quot;作用域简介&quot;&gt;&lt;/a&gt;作用域简介&lt;/h3&gt;&lt;p&gt;变量的作用域就是指变量的作用范围。先来看看下面的程序：&lt;/p&gt;
&lt;p&gt;&amp;lt; 代码示例 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; a = &lt;span class=&quot;number&quot;&gt;7&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;lt; 代码分析 &amp;gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在第3行定义了一个变量a，当执行到这行代码时，系统就会为变量a分配存储空间。&lt;/li&gt;
&lt;li&gt;当main函数执行完毕，也就是执行完第5行代码了，变量a所占用的内存就会被系统自动回收。&lt;/li&gt;
&lt;li&gt;因此，变量a的作用范围是从定义它的那行开始，一直到它所在的大括号{}结束，也就是第3~6行，一旦离开这个范围，变量a就失效了。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;代码块&quot;&gt;&lt;a href=&quot;#代码块&quot; class=&quot;headerlink&quot; title=&quot;代码块&quot;&gt;&lt;/a&gt;代码块&lt;/h3&gt;&lt;p&gt;代码块其实就是用大括号{}括住的一块代码：&lt;/p&gt;
&lt;p&gt;&amp;lt; 代码示例 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; a = &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;a=%d&quot;&lt;/span&gt;, a);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    a = &lt;span class=&quot;number&quot;&gt;9&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;注意第3~7行的大括号，这就是一个代码块。&lt;/li&gt;
&lt;li&gt;当执行到第4行时，系统会分配内存给变量a。&lt;/li&gt;
&lt;li&gt;当代码块执行完毕，也就是执行完第6行代码后，变量a所占用的内存就会被系统回收。&lt;/li&gt;
&lt;li&gt;因此，变量a的作用范围是从定义它的那行开始，一直到它所在的大括号{}结束，也就是第4~7行，离开这个范围，变量a就失效了。&lt;/li&gt;
&lt;li&gt;所以，上面的程序是编译失败的，第9行代码是错误的，变量a在第7行的时候已经失效了，不可能在第9行使用。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;如果是下面这种情况：&lt;/p&gt;
&lt;p&gt;&amp;lt; 代码示例 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; a = &lt;span class=&quot;number&quot;&gt;9&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; a = &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;a=%d&quot;&lt;/span&gt;, a);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;lt; 输出结果 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight ini&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;a&lt;/span&gt;=&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;注意第3、6行，各自定义了一个变量a，这种情况是没问题的。C语言规定：在不同作用域中允许有同名变量，系统会为它们分配不同的存储空间。&lt;/li&gt;
&lt;li&gt;在第3行定义的变量a的作用域是：第3~12行；在第6行定义的变量a的作用域是：第6~9行。&lt;/li&gt;
&lt;li&gt;最后注意第8行：尝试输出变量a的值。那这里输出的是哪一个变量a呢？其实这里采取的是“就近原则”，也就是第8行访问的是在第6行定义的变量a，并不是在第3行的变量a。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;参考&quot;&gt;&lt;a href=&quot;#参考&quot; class=&quot;headerlink&quot; title=&quot;参考&quot;&gt;&lt;/a&gt;参考&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;http://www.cnblogs.com/mjios/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;M了个J的博客&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
</content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;在C语言中，你声明一个局部变量后，没有经过初始化赋值是可以使用的，但这是很危险的，不建议这样做。大多数人应该觉得变量b打印出来应该是0，其实不是。因为系统会随意给变量b赋值，得到的是垃圾数据。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="1.0　【C语法】" scheme="http://sanfordy.com/categories/1-0-%E3%80%90C%E8%AF%AD%E6%B3%95%E3%80%91/"/>
    
    
  </entry>
  
  <entry>
    <title>【05】变量（一）</title>
    <link href="http://sanfordy.com/2016/06/07/1-0%20.C%E8%AF%AD%E6%B3%95/%E3%80%9005%E3%80%91%E5%8F%98%E9%87%8F%EF%BC%88%E4%B8%80%EF%BC%89/"/>
    <id>http://sanfordy.com/2016/06/07/1-0 .C语法/【05】变量（一）/</id>
    <published>2016-06-07T07:31:04.000Z</published>
    <updated>2016-08-08T15:29:10.000Z</updated>
    
    <content type="html">&lt;blockquote&gt;
&lt;p&gt;常量表示的数据是不可以改的，而用变量表示的数据是可以经常修改的。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;什么是变量&quot;&gt;&lt;a href=&quot;#什么是变量&quot; class=&quot;headerlink&quot; title=&quot;什么是变量&quot;&gt;&lt;/a&gt;什么是变量&lt;/h2&gt;&lt;p&gt;常量表示的数据是不可以改的，而用变量表示的数据是可以经常修改的。&lt;/p&gt;
&lt;h2 id=&quot;变量的定义&quot;&gt;&lt;a href=&quot;#变量的定义&quot; class=&quot;headerlink&quot; title=&quot;变量的定义&quot;&gt;&lt;/a&gt;变量的定义&lt;/h2&gt;&lt;p&gt;跟其他语言一样，C语言中用变量来存储计算过程使用的值，任何变量都必须先定义类型再使用。为什么一定要先定义呢？因为变量的类型决定了变量占用的存储空间，所以定义变量类型，就是为了给该变量分配适当的存储空间，以便存放数据。比如你是char类型，我就只给你分配1个字节就够了，没必要分配2个字节、3个字节乃至更多的存储空间。&lt;/p&gt;
&lt;h2 id=&quot;变量类型&quot;&gt;&lt;a href=&quot;#变量类型&quot; class=&quot;headerlink&quot; title=&quot;变量类型&quot;&gt;&lt;/a&gt;变量类型&lt;/h2&gt;&lt;p&gt;我们在定义变量的时候，需要指明变量类型，系统会根据变量类型来分配相应的存储空间。不同数据类型所占用的存储空间是不一样的，如果是字符型（char）变量，就分配1个字节的存储空间；如果是整型（int）变量，就分配4个字节的存储空间。&lt;/p&gt;
&lt;p&gt;变量类型的还一个作用是用来约束变量所存放数据的类型。一旦给变量指明了类型，那么这个变量就只能存储这种类型的数据，比如整型（int）变量只能存储整型数据，不能存储浮点型数据。&lt;/p&gt;
&lt;h2 id=&quot;变量名&quot;&gt;&lt;a href=&quot;#变量名&quot; class=&quot;headerlink&quot; title=&quot;变量名&quot;&gt;&lt;/a&gt;变量名&lt;/h2&gt;&lt;p&gt;在程序运行过程，肯定会定义大量的变量，每个变量都有自己的存储空间。那怎么区分这些变量呢？怎么找到变量对应的存储空间呢？为了区分这些变量，定义变量的时候应该为每个变量指定一个变量名，变量名也是标识符的一种。当我们要修改变量的数据时，系统会根据变量名找到变量对应的存储空间，将存储空间里面的数据改掉。&lt;/p&gt;
&lt;p&gt;变量的命名规则：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;只能由数字、字母、下划线组成，并且不能以数字开头。&lt;/li&gt;
&lt;li&gt;不可以与系统保留字同名。&lt;/li&gt;
&lt;li&gt;不能使用重复的变量名。&lt;/li&gt;
&lt;li&gt;见名知意（规范）。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;变量的分类&quot;&gt;&lt;a href=&quot;#变量的分类&quot; class=&quot;headerlink&quot; title=&quot;变量的分类&quot;&gt;&lt;/a&gt;变量的分类&lt;/h2&gt;&lt;h3 id=&quot;根据变量的作用域&quot;&gt;&lt;a href=&quot;#根据变量的作用域&quot; class=&quot;headerlink&quot; title=&quot;根据变量的作用域&quot;&gt;&lt;/a&gt;根据变量的作用域&lt;/h3&gt;&lt;p&gt;C语言根据变量作用域的不同，将变量分为&lt;code&gt;局部变量&lt;/code&gt;、&lt;code&gt;全局变量&lt;/code&gt;。&lt;/p&gt;
&lt;h4 id=&quot;局部变量&quot;&gt;&lt;a href=&quot;#局部变量&quot; class=&quot;headerlink&quot; title=&quot;局部变量&quot;&gt;&lt;/a&gt;局部变量&lt;/h4&gt;&lt;p&gt;定义：在函数内部定义的变量，称为局部变量。形式参数也属于局部变量。&lt;/p&gt;
&lt;p&gt;作用域：局部变量只在定义它的函数内部有效，即局部变量只有在定义它的函数内部使用，其它函数不能使用它。&lt;/p&gt;
&lt;h4 id=&quot;全局变量&quot;&gt;&lt;a href=&quot;#全局变量&quot; class=&quot;headerlink&quot; title=&quot;全局变量&quot;&gt;&lt;/a&gt;全局变量&lt;/h4&gt;&lt;p&gt;定义：在所有函数外部定义的变量，称为全局变量。&lt;/p&gt;
&lt;p&gt;作用域：全局变量的作用范围是从定义变量的位置开始到源程序结束，即全局变量可以被在其定义位置之后的其它函数所共享。&lt;/p&gt;
&lt;p&gt;&amp;lt; 代码示例 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//  a是全局变量&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; a;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt; &lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#123;   &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//  b是局部变量。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; b;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;根据变量的存储地点&quot;&gt;&lt;a href=&quot;#根据变量的存储地点&quot; class=&quot;headerlink&quot; title=&quot;根据变量的存储地点&quot;&gt;&lt;/a&gt;根据变量的存储地点&lt;/h3&gt;&lt;p&gt;有3个地方可以用于存储变量：普通内存、运行时堆栈、硬件寄存器。变量的存储地点决定了变量何时创建、何时销毁以及它的值能保持多久，也就是决定了变量的生命周期。&lt;/p&gt;
&lt;p&gt;C语言根据变量存储地点的不同，可以把变量分为：&lt;code&gt;自动变量&lt;/code&gt;、&lt;code&gt;静态变量&lt;/code&gt;、&lt;code&gt;寄存器变量&lt;/code&gt;。&lt;/p&gt;
&lt;h4 id=&quot;自动变量&quot;&gt;&lt;a href=&quot;#自动变量&quot; class=&quot;headerlink&quot; title=&quot;自动变量&quot;&gt;&lt;/a&gt;自动变量&lt;/h4&gt;&lt;p&gt;定义：自动变量是存储在堆栈中的。&lt;/p&gt;
&lt;p&gt;哪些是自动变量：被关键字&lt;code&gt;auto&lt;/code&gt;修饰的局部变量都是自动变量，但是极少使用这个关键字，基本上是废的，因为所有的局部变量在默认情况下都是自动变量。&lt;/p&gt;
&lt;p&gt;生命周期：在程序执行到声明自动变量的代码块（函数）时，自动变量才被创建，当自动变量所在的代码块（函数）执行完毕后，这些自动变量就会自行销毁。如果一个函数被重复调用，这些自动变量每次都会重新创建。&lt;/p&gt;
&lt;p&gt;&amp;lt; 代码示例 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//  a和b是自动变量&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; a, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; b)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;comment&quot;&gt;//  c是自动变量&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; c = a + b;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;comment&quot;&gt;//  d是自动变量&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;auto&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; d;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;静态变量&quot;&gt;&lt;a href=&quot;#静态变量&quot; class=&quot;headerlink&quot; title=&quot;静态变量&quot;&gt;&lt;/a&gt;静态变量&lt;/h4&gt;&lt;p&gt;定义：静态变量是存储在静态内存中的，也就是不属于堆栈。&lt;/p&gt;
&lt;p&gt;哪些是静态变量：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;所有的全局变量都是静态变量。&lt;/li&gt;
&lt;li&gt;被关键字&lt;code&gt;static&lt;/code&gt;修饰的局部变量也是静态变量。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;生命周期：静态变量在程序&lt;code&gt;运行之前&lt;/code&gt;创建并且只会创建一次，在程序的整个运行期间始终存在，直到程序结束。&lt;/p&gt;
&lt;p&gt;&amp;lt; 代码示例 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; a;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; b = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    b++;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; c = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    c++;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;b=%d, c=%d \n&quot;&lt;/span&gt;, b, c);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 连续调用3次test函数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i&amp;lt;&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;; i++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        test();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;lt; 输出结果 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight nix&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;b=1,&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;c=1&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;b=2,&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;c=1&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;b=3,&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;c=1&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Program ended &lt;span class=&quot;keyword&quot;&gt;with&lt;/span&gt; exit code: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;lt; 代码分析 &amp;gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;第3行的变量a、第6行的变量b都是静态变量，第9行的变量c、第16行的变量i是自动变量。&lt;/li&gt;
&lt;li&gt;因为第6行的变量b是静态变量，所以它只会被创建一次，而且生命周期会延续到程序结束。因为它只会创建一次，所以第6行代码只会执行一次，下次再调用test函数时，变量b的值不会被重新初始化为0。&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;注意&lt;/strong&gt;：虽然第6行的变量b是静态变量，但是只改变了它生命周期，并没有改变它的作用域，变量b还是只能在test函数内部使用。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;寄存器变量&quot;&gt;&lt;a href=&quot;#寄存器变量&quot; class=&quot;headerlink&quot; title=&quot;寄存器变量&quot;&gt;&lt;/a&gt;寄存器变量&lt;/h4&gt;&lt;p&gt;定义：存储在硬件寄存器中的变量，称为寄存器变量。寄存器变量比存储在内存中的变量访问效率更高（默认情况下，自动变量和静态变量都是放在内存中的）。&lt;/p&gt;
&lt;p&gt;哪些变量是寄存器变量：被关键字&lt;code&gt;register&lt;/code&gt;修饰的自动变量都是寄存器变量。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;注意&lt;/strong&gt;：&lt;br&gt;1.只有局部变量才可以是寄存器变量；&lt;br&gt;2.寄存器变量只限于int、char和指针类型变量使用。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;生命周期：因为寄存器变量本身就是局部变量，所以函数中的寄存器变量在调用该函数时占用寄存器中存放的值，当函数结束时释放寄存器，变量消失。&lt;/p&gt;
&lt;p&gt;使用注意：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;由于计算机中寄存器数目有限，不能使用太多的寄存器变量。如果寄存器使用饱和时，程序将寄存器变量自动转换为自动变量处理。&lt;/li&gt;
&lt;li&gt;为了提高运算速度，一般会将一些频繁使用的局部变量定义为寄存器变量，这样程序尽可能地为它分配寄存器存放，而不用内存。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&amp;lt; 代码示例 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &lt;span class=&quot;comment&quot;&gt;//  a是个寄存器变量。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &lt;span class=&quot;keyword&quot;&gt;register&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; a;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     return &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;变量定义&quot;&gt;&lt;a href=&quot;#变量定义&quot; class=&quot;headerlink&quot; title=&quot;变量定义&quot;&gt;&lt;/a&gt;变量定义&lt;/h2&gt;&lt;p&gt;总结可得，定义变量需要2个条件：变量类型、变量名。代码如下：&lt;/p&gt;
&lt;p&gt;&amp;lt; 代码示例 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; c;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;lt; 代码分析 &amp;gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在第3行定义了一个名字为i的整型变量，说明i只能存储整型数据；在第5行定义了一个名字为c的字符型变量，说明c只能存储字符型数据。&lt;/li&gt;
&lt;li&gt;于是，系统就会在内存中分别为变量i、c分配一定的存储空间，如下图所示，i和c各占用一块存储空间：&lt;br&gt;&lt;img src=&quot;http://images2015.cnblogs.com/blog/776348/201606/776348-20160607173556355-1508318186.png&quot; alt=&quot;&quot;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;如果是同一种类型的变量，可以连续定义，变量名之间用逗号,隔开。代码如下：&lt;/p&gt;
&lt;p&gt;&amp;lt; 代码示例 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; a, c;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;lt; 代码分析 &amp;gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;第3行代码的意思是定义了2个int类型的变量，变量名分别为a、c。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;变量的使用&quot;&gt;&lt;a href=&quot;#变量的使用&quot; class=&quot;headerlink&quot; title=&quot;变量的使用&quot;&gt;&lt;/a&gt;变量的使用&lt;/h2&gt;&lt;h3 id=&quot;先定义，再初始化&quot;&gt;&lt;a href=&quot;#先定义，再初始化&quot; class=&quot;headerlink&quot; title=&quot;先定义，再初始化&quot;&gt;&lt;/a&gt;先定义，再初始化&lt;/h3&gt;&lt;p&gt;前面已经定义了两个变量，但是这两个变量并没有存储任何值，我们需要给变量进行第一次赋值，也叫做“初始化”。&lt;/p&gt;
&lt;p&gt;变量赋值的格式是：变量名 = 值;&lt;/p&gt;
&lt;p&gt;这个等号”=”是一个赋值运算符，将右边的值赋值给左边的变量，也就是将右边的值存储到左边变量的存储空间中：&lt;/p&gt;
&lt;p&gt;&amp;lt; 代码示例 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    i = &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; c;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    c = &lt;span class=&quot;string&quot;&gt;&#39;A&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;lt; 代码分析 &amp;gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在第4行给变量i赋值一个整型常量10，在第7行给变量c赋值一个字符型常量’A’。像第4、7行这样的赋值操作，称为“赋值运算”。&lt;/li&gt;
&lt;li&gt;内存中大致如下图所示，整数10存储在i的存储空间中，字母A存储在c的存储空间中。（其实我这个图并不是很准确，因为内存中的所有数据都是以0和1的形式存储的，比如10，它会存储成1010；字母 A ，它会存储成1000001。这里为了达到直观的效果，就没有写成二进制形式）&lt;br&gt;&lt;img src=&quot;http://images2015.cnblogs.com/blog/776348/201606/776348-20160607173911043-638078260.png&quot; alt=&quot;&quot;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;定义的同时初始化&quot;&gt;&lt;a href=&quot;#定义的同时初始化&quot; class=&quot;headerlink&quot; title=&quot;定义的同时初始化&quot;&gt;&lt;/a&gt;定义的同时初始化&lt;/h3&gt;&lt;p&gt;上面的代码也可以写成下面这样，在定义变量的同时进行初始化：&lt;/p&gt;
&lt;p&gt;&amp;lt; 代码示例 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;float&lt;/span&gt; f = &lt;span class=&quot;number&quot;&gt;10.9f&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;double&lt;/span&gt; d = &lt;span class=&quot;number&quot;&gt;9.8&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;lt; 代码分析 &amp;gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;内存分析如下：&lt;br&gt;&lt;img src=&quot;http://images2015.cnblogs.com/blog/776348/201606/776348-20160607174035683-177628936.png&quot; alt=&quot;&quot;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;可以不断修改&quot;&gt;&lt;a href=&quot;#可以不断修改&quot; class=&quot;headerlink&quot; title=&quot;可以不断修改&quot;&gt;&lt;/a&gt;可以不断修改&lt;/h3&gt;&lt;p&gt;既然i是个变量，说明它的值可以不断地改变，看下面的代码：&lt;/p&gt;
&lt;p&gt;&amp;lt; 代码示例 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    i = &lt;span class=&quot;number&quot;&gt;89&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; c = &lt;span class=&quot;string&quot;&gt;&#39;A&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;lt; 代码分析 &amp;gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在第3行定义了变量i，并且初始值为10。紧接着在第5行把i的值改为89，这个89会覆盖以前存储的10。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;const关键字&quot;&gt;&lt;a href=&quot;#const关键字&quot; class=&quot;headerlink&quot; title=&quot;const关键字&quot;&gt;&lt;/a&gt;const关键字&lt;/h3&gt;&lt;p&gt;刚才提到，默认情况下，变量的值是可以不断改变的。不过，有时候我们会希望变量的值只在定义的时候初始化一次，以后都不能再改变，这个时候我们就可以使用&lt;code&gt;const&lt;/code&gt;关键字来修饰变量：&lt;/p&gt;
&lt;p&gt;&amp;lt; 代码示例 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    i = &lt;span class=&quot;number&quot;&gt;11&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;lt; 代码分析 &amp;gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;注意第3行，在&lt;code&gt;int&lt;/code&gt;的前面加了个&lt;code&gt;const&lt;/code&gt;关键字。表示变量i的值只会初始化一次，也就是说i的值永远都是一开始的10，以后都不能再改了。所以编译器会报第5行代码的错误，不允许再次修改i的值。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;参考&quot;&gt;&lt;a href=&quot;#参考&quot; class=&quot;headerlink&quot; title=&quot;参考&quot;&gt;&lt;/a&gt;参考&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;http://www.cnblogs.com/mjios/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;M了个J的博客&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
</content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;常量表示的数据是不可以改的，而用变量表示的数据是可以经常修改的。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="1.0　【C语法】" scheme="http://sanfordy.com/categories/1-0-%E3%80%90C%E8%AF%AD%E6%B3%95%E3%80%91/"/>
    
    
  </entry>
  
  <entry>
    <title>【04】常量</title>
    <link href="http://sanfordy.com/2016/06/07/1-0%20.C%E8%AF%AD%E6%B3%95/%E3%80%9004%E3%80%91%E5%B8%B8%E9%87%8F/"/>
    <id>http://sanfordy.com/2016/06/07/1-0 .C语法/【04】常量/</id>
    <published>2016-06-07T07:13:20.000Z</published>
    <updated>2016-08-06T14:35:01.000Z</updated>
    
    <content type="html">&lt;blockquote&gt;
&lt;p&gt;“量”表示数据。常量，则表示一些固定的数据，也就是不能改变的数据。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;什么是常量&quot;&gt;&lt;a href=&quot;#什么是常量&quot; class=&quot;headerlink&quot; title=&quot;什么是常量&quot;&gt;&lt;/a&gt;什么是常量&lt;/h2&gt;&lt;p&gt;“量”表示数据。常量，则表示一些固定的数据，也就是不能改变的数据。&lt;/p&gt;
&lt;h2 id=&quot;常量的类型&quot;&gt;&lt;a href=&quot;#常量的类型&quot; class=&quot;headerlink&quot; title=&quot;常量的类型&quot;&gt;&lt;/a&gt;常量的类型&lt;/h2&gt;&lt;h3 id=&quot;整型常量（int）&quot;&gt;&lt;a href=&quot;#整型常量（int）&quot; class=&quot;headerlink&quot; title=&quot;整型常量（int）&quot;&gt;&lt;/a&gt;整型常量（int）&lt;/h3&gt;&lt;p&gt;其实就是&lt;code&gt;int&lt;/code&gt;类型的数据，包括了所有的整数，比如6、27、109、256、-10、0、-289等。&lt;/p&gt;
&lt;h3 id=&quot;浮点型常量（float-double）&quot;&gt;&lt;a href=&quot;#浮点型常量（float-double）&quot; class=&quot;headerlink&quot; title=&quot;浮点型常量（float\double）&quot;&gt;&lt;/a&gt;浮点型常量（float\double）&lt;/h3&gt;&lt;p&gt;浮点型常量分为&lt;code&gt;double&lt;/code&gt;和&lt;code&gt;float&lt;/code&gt;两种数据类型。&lt;/p&gt;
&lt;h4 id=&quot;double&quot;&gt;&lt;a href=&quot;#double&quot; class=&quot;headerlink&quot; title=&quot;double&quot;&gt;&lt;/a&gt;double&lt;/h4&gt;&lt;p&gt;双精度浮点型，其实就是小数。比如5.43、-2.3、0.0等，注意，0.0也算是个小数。&lt;/p&gt;
&lt;h4 id=&quot;float&quot;&gt;&lt;a href=&quot;#float&quot; class=&quot;headerlink&quot; title=&quot;float&quot;&gt;&lt;/a&gt;float&lt;/h4&gt;&lt;p&gt;单精度浮点型，也是小数，比&lt;code&gt;double&lt;/code&gt;的精确程度低，也就是说所能表示的小数位数比较少。为了跟&lt;code&gt;double&lt;/code&gt;区分开来， &lt;code&gt;float&lt;/code&gt; 型数据都是以&lt;code&gt;f&lt;/code&gt;结尾的，比如5.43f、-2.3f、0.0f。需要注意的是，绝对不能有10f这样格式的，编译器会直接报错，只有小数才允许加上f。&lt;/p&gt;
&lt;h3 id=&quot;字符常量（char）&quot;&gt;&lt;a href=&quot;#字符常量（char）&quot; class=&quot;headerlink&quot; title=&quot;字符常量（char）&quot;&gt;&lt;/a&gt;字符常量（char）&lt;/h3&gt;&lt;p&gt;将一个数字（0~9）、英文字母（a~z、A~Z）或者其他符号（+、-、!、?等）用单引号括起来，这样构成的就是字符常量。比如‘6’、‘a’、‘F’、‘+’、‘$’等。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;注意&lt;/strong&gt;：单引号只能括住1个字符，而且不能是中文字符，下面的写法是错误的：‘abc’、‘123456’、‘男’。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;字符串常量&quot;&gt;&lt;a href=&quot;#字符串常量&quot; class=&quot;headerlink&quot; title=&quot;字符串常量&quot;&gt;&lt;/a&gt;字符串常量&lt;/h3&gt;&lt;p&gt;将一个或者多个字符用双引号（“”）括起来，这样构成的就是字符串常量。比如“6”、“男”、“哇哈哈”、“abcd”、“my_car4”，其实printf(“Hello World”);语句中的“Hello World”就是字符串常量。&lt;/p&gt;
&lt;h2 id=&quot;参考&quot;&gt;&lt;a href=&quot;#参考&quot; class=&quot;headerlink&quot; title=&quot;参考&quot;&gt;&lt;/a&gt;参考&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;http://www.cnblogs.com/mjios/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;M了个J的博客&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
</content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;“量”表示数据。常量，则表示一些固定的数据，也就是不能改变的数据。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="1.0　【C语法】" scheme="http://sanfordy.com/categories/1-0-%E3%80%90C%E8%AF%AD%E6%B3%95%E3%80%91/"/>
    
    
  </entry>
  
  <entry>
    <title>【03】数据</title>
    <link href="http://sanfordy.com/2016/06/07/1-0%20.C%E8%AF%AD%E6%B3%95/%E3%80%9003%E3%80%91%E6%95%B0%E6%8D%AE/"/>
    <id>http://sanfordy.com/2016/06/07/1-0 .C语法/【03】数据/</id>
    <published>2016-06-07T06:27:08.000Z</published>
    <updated>2016-08-06T14:18:18.000Z</updated>
    
    <content type="html">&lt;blockquote&gt;
&lt;p&gt;在我们使用计算机的过程中，会接触到各种各样的数据，有文档数据、图片数据、视频数据，还有聊QQ时产生的文字数据、用迅雷下载的文件数据等。这讲我们就来介绍C语言中数据的处理。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;在我们使用计算机的过程中，会接触到各种各样的数据，有文档数据、图片数据、视频数据，还有聊QQ时产生的文字数据、用迅雷下载的文件数据等。这讲我们就来介绍C语言中数据的处理。&lt;/p&gt;
&lt;h2 id=&quot;数据的存储&quot;&gt;&lt;a href=&quot;#数据的存储&quot; class=&quot;headerlink&quot; title=&quot;数据的存储&quot;&gt;&lt;/a&gt;数据的存储&lt;/h2&gt;&lt;h3 id=&quot;数据形态&quot;&gt;&lt;a href=&quot;#数据形态&quot; class=&quot;headerlink&quot; title=&quot;数据形态&quot;&gt;&lt;/a&gt;数据形态&lt;/h3&gt;&lt;p&gt;首先来看看计算机是怎么存储数据的。总的来说，计算机中存储的数据可以分为两种：静态数据和动态数据。&lt;/p&gt;
&lt;h4 id=&quot;静态数据&quot;&gt;&lt;a href=&quot;#静态数据&quot; class=&quot;headerlink&quot; title=&quot;静态数据&quot;&gt;&lt;/a&gt;静态数据&lt;/h4&gt;&lt;p&gt;概念：静态数据是指一些永久性的数据，一般存储在硬盘中。硬盘的存储空间一般都比较大，现在普通计算机的硬盘都有500G左右，因此硬盘中可以存放一些比较大的文件。&lt;/p&gt;
&lt;p&gt;存储的时长：计算机关闭之后再开启，这些数据依旧还在，只要你不主动删掉或者硬盘没坏，这些数据永远都在。&lt;/p&gt;
&lt;p&gt;哪些是静态数据：静态数据一般是以文件的形式存储在硬盘上，比如文档、照片、视频等。&lt;/p&gt;
&lt;h4 id=&quot;动态数据&quot;&gt;&lt;a href=&quot;#动态数据&quot; class=&quot;headerlink&quot; title=&quot;动态数据&quot;&gt;&lt;/a&gt;动态数据&lt;/h4&gt;&lt;p&gt;概念：动态数据指在程序运行过程中，动态产生的临时数据，一般存储在内存中。内存的存储空间一般都比较小，现在普通计算机的内存只有4G左右，因此要谨慎使用内存，不要占用太多的内存空间。&lt;/p&gt;
&lt;p&gt;存储的时长：计算机关闭之后，这些临时数据就会被清除。&lt;/p&gt;
&lt;p&gt;哪些是动态数据：当运行某个程序（软件）时，整个程序就会被加载到内存中，在程序运行过程中，会产生各种各样的临时数据，这些临时数据都是存储在内存中的。当程序停止运行或者计算机被强制关闭时，这个程序产生的所有临时数据都会被清除。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;说明&lt;/strong&gt;：你可能会问，既然硬盘的存储空间这么大，为何不把所有的应用程序加载到硬盘中去执行呢？有个主要原因是内存的访问速度比硬盘快N倍。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;动态数据和静态数据的转换&quot;&gt;&lt;a href=&quot;#动态数据和静态数据的转换&quot; class=&quot;headerlink&quot; title=&quot;动态数据和静态数据的转换&quot;&gt;&lt;/a&gt;动态数据和静态数据的转换&lt;/h4&gt;&lt;p&gt;硬盘和内存是计算机使用最频繁的两个硬件，它们之间的数据经常要进行转换。&lt;/p&gt;
&lt;p&gt;比如，硬盘上有个叫做“C语言.mp4”的视频文件，现在要使用暴风影音来播放：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2015.cnblogs.com/blog/776348/201606/776348-20160607143556418-1431912984.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;首先打开暴风影音软件，计算机会将暴风影音加载到内存中，紧接着计算机会读取硬盘中视频文件的内容到内存中。暴风影音会解析读取到的文件内容，以视频的形式呈现给用户看。这就完成了一个由静态数据到动态数据的转换。&lt;/p&gt;
&lt;p&gt;再比如，你使用迅雷从网上下载一个叫做“C语言.mp4”的视频文件：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2015.cnblogs.com/blog/776348/201606/776348-20160607143719574-1356202246.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;首先打开迅雷软件，计算机会将迅雷加载到内存中，紧接着迅雷就会从互联网下载视频文件。大家都知道，这个下载过程肯定是要耗点时间的，主要受文件大小和下载速度的影响。每个时间段内下载获取的数据都是先放到内存中，然后再写入到硬盘中。所有数据下载完毕后，硬盘中就会有一个完整的视频文件。这就完成了动态数据到静态数据的转换。&lt;/p&gt;
&lt;h3 id=&quot;存储形式&quot;&gt;&lt;a href=&quot;#存储形式&quot; class=&quot;headerlink&quot; title=&quot;存储形式&quot;&gt;&lt;/a&gt;存储形式&lt;/h3&gt;&lt;h4 id=&quot;二进制存储&quot;&gt;&lt;a href=&quot;#二进制存储&quot; class=&quot;headerlink&quot; title=&quot;二进制存储&quot;&gt;&lt;/a&gt;二进制存储&lt;/h4&gt;&lt;p&gt;计算机只能识别0和1。因此，前面所说的静态数据和动态数据，都是以0和1的形式存储的，这种存储方式称为“二进制存储”。有人可能觉得很诧异，只是0和1怎么可能表示这多的数据呢？没错，如果只是一位数字的话，只能表示2种数据：要么是0，要么是1。但是如果有多位数字的话，那情况就不一样了。如果有2位数字，那么就能表示4种数据：00、01、10、11；如果有3位数字呢，就能表示8种数据；以此类推，如果有n位数字，就能表示2的n次方种数据。可以发现，只要位数足够，0和1所能表示的数据是非常庞大的。&lt;/p&gt;
&lt;h4 id=&quot;比特位和字节&quot;&gt;&lt;a href=&quot;#比特位和字节&quot; class=&quot;headerlink&quot; title=&quot;比特位和字节&quot;&gt;&lt;/a&gt;比特位和字节&lt;/h4&gt;&lt;p&gt;平时我们在计算机上看到的MP4、MP3、照片等文件，都是由0和1组合成的，只不过计算机解析了这些0和1，以图形界面的形式呈现在我们眼前。文件越大，所包含的0和1就越多，为了方便计算文件大小，对计量单位做了个规定：1个二进制位为1bit，也就是1个0或1就为1bit，bit的中文翻译是“比特位”；8个二进制位为1byte，也就是8个0或1就为1byte，1byte=8bit，byte的中文翻译是“字节”。平时我们所说的某个文件大小为64B，就是64字节的意思，内部包含了64x8个0和1。&lt;/p&gt;
&lt;p&gt;数据换算：1 KB = 1024 B，1 MB = 1024 KB，1 GB = 1024 MB，1 TB = 1024 GB。&lt;/p&gt;
&lt;h2 id=&quot;数据的类型&quot;&gt;&lt;a href=&quot;#数据的类型&quot; class=&quot;headerlink&quot; title=&quot;数据的类型&quot;&gt;&lt;/a&gt;数据的类型&lt;/h2&gt;&lt;p&gt;C语言有丰富的数据类型，因此它很适合用来编写数据库，如DB2、Oracle都是C语言写的。&lt;/p&gt;
&lt;p&gt;作为程序员，最关心的肯定是内存中的动态数据，因为我们写的程序就是运行在内存中的。程序在运行过程中，会产生各种各样的动态临时数据，为了方便数据的运算和操作，C语言对这些数据进行了分类，提供了丰富的数据类型。大致如下图所示：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2015.cnblogs.com/blog/776348/201606/776348-20160607143724168-1786196972.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;在图中众多数据类型中，最常用的是4种基本数据类型：char、int、float、double，而最重要的是指针类型，指针使用得当的话，不仅可以节省代码量，还可以优化内存管理、提高性能。因此，指针是一个非常重要的概念，必须重视。如果你说C语言中除了指针，其他都学得挺好的，那你干脆说你没学过C语言。&lt;/p&gt;
&lt;p&gt;这些丰富的数据在C语言中可以用常量或者变量来表示（后面会介绍常量和变量的使用）。&lt;/p&gt;
&lt;h2 id=&quot;数据的访问&quot;&gt;&lt;a href=&quot;#数据的访问&quot; class=&quot;headerlink&quot; title=&quot;数据的访问&quot;&gt;&lt;/a&gt;数据的访问&lt;/h2&gt;&lt;p&gt;数据访问一般分为直接访问和间接访问。&lt;/p&gt;
&lt;h3 id=&quot;直接访问&quot;&gt;&lt;a href=&quot;#直接访问&quot; class=&quot;headerlink&quot; title=&quot;直接访问&quot;&gt;&lt;/a&gt;直接访问&lt;/h3&gt;&lt;p&gt;直接访问内存单元中的内容。例如: a = 20; b = 2 * a等。&lt;/p&gt;
&lt;h3 id=&quot;间接访问&quot;&gt;&lt;a href=&quot;#间接访问&quot; class=&quot;headerlink&quot; title=&quot;间接访问&quot;&gt;&lt;/a&gt;间接访问&lt;/h3&gt;&lt;p&gt;通过内存单元编号以及数据所占字节数访问内存中数据。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;注意&lt;/strong&gt;：指针是间接访问的常用方式。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;不同编译器环境下基本数据类型的存储长度&quot;&gt;&lt;a href=&quot;#不同编译器环境下基本数据类型的存储长度&quot; class=&quot;headerlink&quot; title=&quot;不同编译器环境下基本数据类型的存储长度&quot;&gt;&lt;/a&gt;不同编译器环境下基本数据类型的存储长度&lt;/h2&gt;&lt;p&gt;红色的代表常用的数据类型：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2015.cnblogs.com/blog/776348/201606/776348-20160607143728402-1476722878.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;参考&quot;&gt;&lt;a href=&quot;#参考&quot; class=&quot;headerlink&quot; title=&quot;参考&quot;&gt;&lt;/a&gt;参考&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;http://www.cnblogs.com/mjios/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;M了个J的博客&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
</content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;在我们使用计算机的过程中，会接触到各种各样的数据，有文档数据、图片数据、视频数据，还有聊QQ时产生的文字数据、用迅雷下载的文件数据等。这讲我们就来介绍C语言中数据的处理。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="1.0　【C语法】" scheme="http://sanfordy.com/categories/1-0-%E3%80%90C%E8%AF%AD%E6%B3%95%E3%80%91/"/>
    
    
  </entry>
  
  <entry>
    <title>【02】C语言语法</title>
    <link href="http://sanfordy.com/2016/05/30/1-0%20.C%E8%AF%AD%E6%B3%95/%E3%80%9002%E3%80%91C%E8%AF%AD%E8%A8%80%E8%AF%AD%E6%B3%95/"/>
    <id>http://sanfordy.com/2016/05/30/1-0 .C语法/【02】C语言语法/</id>
    <published>2016-05-30T02:23:42.000Z</published>
    <updated>2016-08-08T14:46:16.000Z</updated>
    
    <content type="html">&lt;blockquote&gt;
&lt;p&gt;C语言属于一门高级语言，其实所有的高级语言的基本语法组成部分都是一样的，只是表现形式不太一样。就好像亚洲人和非洲人，大家都有人类的结构：2只手、2只脚、1个头，只是他们外表不太一样，比如肤色、脸型。因此，你掌握好了一门高级语言，再去学习其他高级语言，那是相当快的。而且，很多其他高级语言，比如后面要学习的Objective-C，都是基于C语言、从C语言衍生出来的，好好学习C语言吧，绝对不吃亏。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;C语言属于一门高级语言，其实所有的高级语言的基本语法组成部分都是一样的，只是表现形式不太一样。就好像亚洲人和非洲人，大家都有人类的结构：2只手、2只脚、1个头，只是他们外表不太一样，比如肤色、脸型。因此，你掌握好了一门高级语言，再去学习其他高级语言，那是相当快的。而且，很多其他高级语言，比如后面要学习的Objective-C，都是基于C语言、从C语言衍生出来的，好好学习C语言吧，绝对不吃亏。&lt;/p&gt;
&lt;h2 id=&quot;关键字&quot;&gt;&lt;a href=&quot;#关键字&quot; class=&quot;headerlink&quot; title=&quot;关键字&quot;&gt;&lt;/a&gt;关键字&lt;/h2&gt;&lt;h3 id=&quot;什么是关键字&quot;&gt;&lt;a href=&quot;#什么是关键字&quot; class=&quot;headerlink&quot; title=&quot;什么是关键字&quot;&gt;&lt;/a&gt;什么是关键字&lt;/h3&gt;&lt;p&gt;关键字就是C语言提供的有特殊含义的符号，有些地方也叫做“保留字”。&lt;/p&gt;
&lt;h3 id=&quot;都有哪些关键字&quot;&gt;&lt;a href=&quot;#都有哪些关键字&quot; class=&quot;headerlink&quot; title=&quot;都有哪些关键字&quot;&gt;&lt;/a&gt;都有哪些关键字&lt;/h3&gt;&lt;p&gt;C语言一共提供了32个关键字，这些关键字都被C语言赋予了特殊含义：&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;auto&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;switch&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;enum&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;register&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;typedef&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;extern&lt;/span&gt; return &lt;span class=&quot;keyword&quot;&gt;union&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;float&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;short&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;continue&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;signed&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;goto&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;sizeof&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;volatile&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;大致浏览一遍即可，不用去百度每个关键字的作用，这些关键字以后会经常用到的，到时候你想不记住都难。&lt;/p&gt;
&lt;h3 id=&quot;如何辨别关键字&quot;&gt;&lt;a href=&quot;#如何辨别关键字&quot; class=&quot;headerlink&quot; title=&quot;如何辨别关键字&quot;&gt;&lt;/a&gt;如何辨别关键字&lt;/h3&gt;&lt;p&gt;这些关键字会经常跟其他符号混在一起使用，一个程序里面这么多英文符号，我怎么知道那些是关键字呢？关键字有2大特征：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;全部都是小写。&lt;/li&gt;
&lt;li&gt;在开发工具或者智能文本编辑工具（比如UltraEdit）中会显示特殊颜色。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;比如下面这段C程序在UltraEdit中呈现的样子：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2015.cnblogs.com/blog/776348/201606/776348-20160607104437855-2085184487.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;在这段代码中，只有int和return是关键字，C语言中的所有关键字在UltraEdit中都会显示蓝色！可以看出，main并不是关键字。至于int和return究竟有什么特殊含义，这里先不做讨论，后面会详细介绍。&lt;/p&gt;
&lt;h2 id=&quot;标识符&quot;&gt;&lt;a href=&quot;#标识符&quot; class=&quot;headerlink&quot; title=&quot;标识符&quot;&gt;&lt;/a&gt;标识符&lt;/h2&gt;&lt;h3 id=&quot;什么是标识符&quot;&gt;&lt;a href=&quot;#什么是标识符&quot; class=&quot;headerlink&quot; title=&quot;什么是标识符&quot;&gt;&lt;/a&gt;什么是标识符&lt;/h3&gt;&lt;p&gt;在程序中使用的变量名、函数名、标号等统称为标识符。除库函数的函数名由系统定义外，其余都由用户自定义。C规定，标识符只能是字母(A～Z，a～z)、数字(0～9)、下划线(_)组成的字符串，并且其第一个字符不能是数字。&lt;/p&gt;
&lt;h3 id=&quot;注意&quot;&gt;&lt;a href=&quot;#注意&quot; class=&quot;headerlink&quot; title=&quot;注意&quot;&gt;&lt;/a&gt;注意&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;标准C不限制标识符的长度，但它受各种版本的C语言编译系统限制，同时也受到具体机器的限制。例如在某版本C中规定标识符前八位有效，当两个标识符前八位相同时，则被认为是同一个标识符。&lt;/li&gt;
&lt;li&gt;在标识符中，大小写是有区别的。例如BOOK和book是两个不同的标识符。&lt;/li&gt;
&lt;li&gt;标识符虽然可由程序员随意定义，但标识符是用于标识某个量的符号。因此，命名应尽量有相应的意义，以便阅读理解，作到“顾名思义”。如果标识符中含有多个单词，可以使用驼峰标识（除开第一个单词，后面每个单词的首字母都是大写）：firstName、myFirstName，或者使用下划线_来连接：first_name、my_first_name。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;表达式&quot;&gt;&lt;a href=&quot;#表达式&quot; class=&quot;headerlink&quot; title=&quot;表达式&quot;&gt;&lt;/a&gt;表达式&lt;/h2&gt;&lt;p&gt;表达式是由常量、变量与运算符组成的。例如：3+5，a += b!&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;注意&lt;/strong&gt;：表达式都会返回值。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;语句&quot;&gt;&lt;a href=&quot;#语句&quot; class=&quot;headerlink&quot; title=&quot;语句&quot;&gt;&lt;/a&gt;语句&lt;/h2&gt;&lt;p&gt;语句是程序执⾏的最小单位，以分号结尾。 &lt;/p&gt;
&lt;h2 id=&quot;参考&quot;&gt;&lt;a href=&quot;#参考&quot; class=&quot;headerlink&quot; title=&quot;参考&quot;&gt;&lt;/a&gt;参考&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;http://www.cnblogs.com/mjios/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;M了个J的博客&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
</content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;C语言属于一门高级语言，其实所有的高级语言的基本语法组成部分都是一样的，只是表现形式不太一样。就好像亚洲人和非洲人，大家都有人类的结构：2只手、2只脚、1个头，只是他们外表不太一样，比如肤色、脸型。因此，你掌握好了一门高级语言，再去学习其他高级语言，那是相当快的。而且，很多其他高级语言，比如后面要学习的Objective-C，都是基于C语言、从C语言衍生出来的，好好学习C语言吧，绝对不吃亏。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="1.0　【C语法】" scheme="http://sanfordy.com/categories/1-0-%E3%80%90C%E8%AF%AD%E6%B3%95%E3%80%91/"/>
    
    
  </entry>
  
  <entry>
    <title>【01】第一个C程序代码分析</title>
    <link href="http://sanfordy.com/2016/05/17/1-0%20.C%E8%AF%AD%E6%B3%95/%E3%80%9001%E3%80%91%E7%AC%AC%E4%B8%80%E4%B8%AAC%E7%A8%8B%E5%BA%8F%E4%BB%A3%E7%A0%81%E5%88%86%E6%9E%90/"/>
    <id>http://sanfordy.com/2016/05/17/1-0 .C语法/【01】第一个C程序代码分析/</id>
    <published>2016-05-17T14:49:20.000Z</published>
    <updated>2016-08-07T07:02:07.000Z</updated>
    
    <content type="html">&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;#include&lt;/code&gt;是C语言的预处理指令之一，所谓预处理，就是在编译之前做的处理，预处理指令一般以&lt;code&gt;#&lt;/code&gt;开头。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;Xcode创建C程序步骤&quot;&gt;&lt;a href=&quot;#Xcode创建C程序步骤&quot; class=&quot;headerlink&quot; title=&quot;Xcode创建C程序步骤&quot;&gt;&lt;/a&gt;Xcode创建C程序步骤&lt;/h2&gt;&lt;h3 id=&quot;打开Xcode&quot;&gt;&lt;a href=&quot;#打开Xcode&quot; class=&quot;headerlink&quot; title=&quot;打开Xcode&quot;&gt;&lt;/a&gt;打开Xcode&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;http://images2015.cnblogs.com/blog/776348/201606/776348-20160607114753808-1887444754.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;选择命令行程序&quot;&gt;&lt;a href=&quot;#选择命令行程序&quot; class=&quot;headerlink&quot; title=&quot;选择命令行程序&quot;&gt;&lt;/a&gt;选择命令行程序&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;http://images2015.cnblogs.com/blog/776348/201606/776348-20160607114803121-1487331799.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;填写项目名称并选择使用C语言&quot;&gt;&lt;a href=&quot;#填写项目名称并选择使用C语言&quot; class=&quot;headerlink&quot; title=&quot;填写项目名称并选择使用C语言&quot;&gt;&lt;/a&gt;填写项目名称并选择使用C语言&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;http://images2015.cnblogs.com/blog/776348/201606/776348-20160607114813058-523307311.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;选择保存目录&quot;&gt;&lt;a href=&quot;#选择保存目录&quot; class=&quot;headerlink&quot; title=&quot;选择保存目录&quot;&gt;&lt;/a&gt;选择保存目录&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;http://images2015.cnblogs.com/blog/776348/201606/776348-20160607114825027-90093732.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;自动生成如下代码&quot;&gt;&lt;a href=&quot;#自动生成如下代码&quot; class=&quot;headerlink&quot; title=&quot;自动生成如下代码&quot;&gt;&lt;/a&gt;自动生成如下代码&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;http://images2015.cnblogs.com/blog/776348/201606/776348-20160607114837011-470505554.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;代码分析&quot;&gt;&lt;a href=&quot;#代码分析&quot; class=&quot;headerlink&quot; title=&quot;代码分析&quot;&gt;&lt;/a&gt;代码分析&lt;/h2&gt;&lt;p&gt;打开项目中的main.c文件（C程序的源文件拓展名为&lt;code&gt;.c&lt;/code&gt;），可以发现它是C程序中的唯一一个源文件：&lt;/p&gt;
&lt;p&gt;&amp;lt; 代码示例 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; argc, &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; * argv[])&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// insert code here...&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;Hello, World!\n&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;接下来分析一下每行代码的意义。&lt;/p&gt;
&lt;h3 id=&quot;预处理命令（-include）&quot;&gt;&lt;a href=&quot;#预处理命令（-include）&quot; class=&quot;headerlink&quot; title=&quot;预处理命令（#include）&quot;&gt;&lt;/a&gt;预处理命令（#include）&lt;/h3&gt;&lt;p&gt;&lt;code&gt;#include&lt;/code&gt;是C语言的预处理指令之一，所谓预处理，就是在编译之前做的处理，预处理指令一般以&lt;code&gt;#&lt;/code&gt;开头。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;#include&lt;/code&gt;指令后面会跟着一个文件名，预处理器发现&lt;code&gt;#include&lt;/code&gt;指令后，就会根据文件名去查找文件，并把这个文件的内容包含到当前文件中。被包含文件中的文本将替换源文件中的&lt;code&gt;#include&lt;/code&gt;指令，就像你把被包含文件中的全部内容拷贝到这个&lt;code&gt;#include&lt;/code&gt;指令所在的位置一样。&lt;/p&gt;
&lt;p&gt;如果被包含的文件拓展名为&lt;code&gt;.h&lt;/code&gt;，我们称之为”头文件”（Header File），头文件可以用来声明函数（”函数”就是面向对象中的”方法”），要想使用这些函数，就必须先用&lt;code&gt;#include&lt;/code&gt;指令包含函数所在的头文件。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;#include&lt;/code&gt;指令不仅仅限于&lt;code&gt;.h&lt;/code&gt;头文件，&lt;code&gt;可以包含任何编译器能识别的C/C++代码文件&lt;/code&gt;，包括&lt;code&gt;.c&lt;/code&gt;、&lt;code&gt;.hpp&lt;/code&gt;、.&lt;code&gt;cpp&lt;/code&gt;等，甚至&lt;code&gt;.txt&lt;/code&gt;、&lt;code&gt;.abc&lt;/code&gt;等等都可以，也就是说你完全可以将第3行到第9行的代码放到其他文件中，然后用 &lt;code&gt;#include&lt;/code&gt;指令包含进来。比如将第3行到第9行的代码放到 my.txt 中：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2015.cnblogs.com/blog/776348/201606/776348-20160607114905949-694429859.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;在main.c源文件中包含my.txt文件：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2015.cnblogs.com/blog/776348/201606/776348-20160607114916043-985670090.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;程序还是可以照常运行的，因为&lt;code&gt;#include&lt;/code&gt;的功能就是将文件内容完全拷贝到&lt;code&gt;#include&lt;/code&gt;指令所在的位置。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;注意&lt;/strong&gt;：不过你可能会疑惑，为什么&lt;code&gt;stdio.h&lt;/code&gt;用尖括号&amp;lt;&amp;gt;，而my.txt用双引号””？这个很好区别，如果是系统自带的文件，最好用&amp;lt;&amp;gt;；如果是开发人员自己创建的文件，最好用””。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;说明&lt;/strong&gt;：这里用txt文件纯属演示，平时做项目不会这样做，除非吃饱了撑着，才会把代码都写到txt中去。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;库函数（stdio-h）&quot;&gt;&lt;a href=&quot;#库函数（stdio-h）&quot; class=&quot;headerlink&quot; title=&quot;库函数（stdio.h）&quot;&gt;&lt;/a&gt;库函数（stdio.h）&lt;/h3&gt;&lt;p&gt;&lt;code&gt;stdio.h&lt;/code&gt;是C语言函数库中的一个头文件，里面定义了一些标准输入输出函数。在main.c的第1行代码中，用&lt;code&gt;#include&lt;/code&gt;指令包含了&lt;code&gt;stdio.h&lt;/code&gt;文件。&lt;/p&gt;
&lt;p&gt;这里之所以包含&lt;code&gt;stdio.h&lt;/code&gt;文件，是因为在第7行中用到了在&lt;code&gt;stdio.h&lt;/code&gt;内部声明的&lt;code&gt;printf&lt;/code&gt;函数，这个函数可以向标准输出设备（比如显示器屏幕）输出数据，屏幕上输出的文字就是第7行代码&lt;code&gt;printf(&amp;quot;Hello, World!\n&amp;quot;)&lt;/code&gt;造成的，双引号“”内的文本为C语言的字符串。&lt;/p&gt;
&lt;h3 id=&quot;主函数（main）&quot;&gt;&lt;a href=&quot;#主函数（main）&quot; class=&quot;headerlink&quot; title=&quot;主函数（main）&quot;&gt;&lt;/a&gt;主函数（main）&lt;/h3&gt;&lt;p&gt;前面也已经提到，C中的函数就是面向对象中的”方法”。 C语言是一门面向过程的语言，是以过程为中心的编程思想，就是先分析出解决问题所需要的步骤，然后用函数把这些步骤一步一步实现，使用的时候一个一个依次调用函数就可以了。&lt;/p&gt;
&lt;p&gt;一个C程序中一定会有一个&lt;code&gt;main&lt;/code&gt;函数，也只能有一个&lt;code&gt;main&lt;/code&gt;函数。&lt;code&gt;main&lt;/code&gt;函数是整个C程序的入口。&lt;code&gt;main.c&lt;/code&gt;的第3行代码就定义了一个&lt;code&gt;main&lt;/code&gt;函数。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;main&lt;/code&gt;函数的返回值为&lt;code&gt;int&lt;/code&gt;类型，接收2个参数，其实可以不写参数， main 函数可以简化成这样：&lt;/p&gt;
&lt;p&gt;&amp;lt; 代码示例 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;main()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// insert code here...&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;Hello, World!\n&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;lt; 代码分析 &amp;gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;这里的main函数没有写返回值类型，并不代表函数没有返回值，而是表示返回值类型为int类型，void才代表函数没有返回值。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;由于C语言的语法限制不严格，我们还可以进一步简化 main 函数：&lt;/p&gt;
&lt;p&gt;&amp;lt; 代码示例 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;main()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// insert code here...&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;Hello, World!\n&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;lt; 代码分析 &amp;gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;虽然它要求main函数返回int类型的值，但我们可以不返回。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;开发和运行C程序的步骤&quot;&gt;&lt;a href=&quot;#开发和运行C程序的步骤&quot; class=&quot;headerlink&quot; title=&quot;开发和运行C程序的步骤&quot;&gt;&lt;/a&gt;开发和运行C程序的步骤&lt;/h2&gt;&lt;p&gt;步骤图如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2015.cnblogs.com/blog/776348/201606/776348-20160607114923027-1543894669.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;编写程序&quot;&gt;&lt;a href=&quot;#编写程序&quot; class=&quot;headerlink&quot; title=&quot;编写程序&quot;&gt;&lt;/a&gt;编写程序&lt;/h3&gt;&lt;p&gt;C语言源文件的扩展名为&lt;code&gt;.c&lt;/code&gt;，源程序（代码）以&lt;code&gt;ASCII&lt;/code&gt;码形式存储于源文件，不能直接被计算机执行，因为计算机只能识别二进制指令，也就是0和1。&lt;/p&gt;
&lt;h3 id=&quot;编译（生成目标文件）&quot;&gt;&lt;a href=&quot;#编译（生成目标文件）&quot; class=&quot;headerlink&quot; title=&quot;编译（生成目标文件）&quot;&gt;&lt;/a&gt;编译（生成目标文件）&lt;/h3&gt;&lt;p&gt;把C的源文件（代码）翻译成计算机可以识别的二进制形式的目标文件，这个过程称为编译，由C的编译器完成。&lt;/p&gt;
&lt;p&gt;在编译的同时，还对源程序的语法等进行检查。若出现语法错误，则编译失败。如果编译成功则生成目标文件，目标文件名跟源程序文件名一样，扩展名为&lt;code&gt;.obj&lt;/code&gt;。比如，mj.c编译后生成目标文件mj.obj。&lt;/p&gt;
&lt;p&gt;每个源文件是单独进行编译的，假如一个项目中有多个.c源文件，编译成功会生成多个对应的&lt;code&gt;.obj&lt;/code&gt;目标。一般情况下，目标文件之间是有关联的，比如a.obj可能会调用b.obj中定义的一个函数，因此它们都不能够单独被计算机执行，而且&lt;code&gt;目标文件中并不包含程序运行所需要的库函数&lt;/code&gt;等。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;说明&lt;/strong&gt;：在编译之前会进行预处理（例如&lt;code&gt;#include&lt;/code&gt;指令）。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;注意&lt;/strong&gt;：编译器不会编译&lt;code&gt;.h&lt;/code&gt;文件，因为在编译前会进行预处理，预处理会把&lt;code&gt;.h&lt;/code&gt;文件的代码拷贝到&lt;code&gt;.c&lt;/code&gt;文件中，从而一起编译。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;链接（生成可执行文件）&quot;&gt;&lt;a href=&quot;#链接（生成可执行文件）&quot; class=&quot;headerlink&quot; title=&quot;链接（生成可执行文件）&quot;&gt;&lt;/a&gt;链接（生成可执行文件）&lt;/h3&gt;&lt;p&gt;将所有有关联的&lt;code&gt;obj&lt;/code&gt;目标文件，以及系统提供的C库函数等组合在一起生成一个可执行文件的过程，称为”链接”。链接生成的可执行文件的文件名跟源程序文件同名，扩展名为&lt;code&gt;.exe&lt;/code&gt;，计算机可以直接执行。&lt;/p&gt;
&lt;h3 id=&quot;运行&quot;&gt;&lt;a href=&quot;#运行&quot; class=&quot;headerlink&quot; title=&quot;运行&quot;&gt;&lt;/a&gt;运行&lt;/h3&gt;&lt;p&gt;如果是在Windows环境下，直接双击&lt;code&gt;.exe&lt;/code&gt;文件即可运行C语言程序。&lt;/p&gt;
&lt;p&gt;由于我们的第一个C程序，是在Mac OS X系统环境下用Xcode创建的命令行项目，Mac OS X系统是基于UNIX系统的，因此生成的可执行文件的这样的:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2015.cnblogs.com/blog/776348/201606/776348-20160607114929699-1395943059.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;双击可以用终端打开：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images2015.cnblogs.com/blog/776348/201606/776348-20160607114935215-625977268.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;多文件开发&quot;&gt;&lt;a href=&quot;#多文件开发&quot; class=&quot;headerlink&quot; title=&quot;多文件开发&quot;&gt;&lt;/a&gt;多文件开发&lt;/h2&gt;&lt;p&gt;在大型项目开发中程序中所有的代码都写到一个文件中是不现实的，我们通常将一个子操作分为两个文件：&lt;code&gt;.c&lt;/code&gt;文件和&lt;code&gt;.h&lt;/code&gt;文件。在&lt;code&gt;.c&lt;/code&gt;文件中实现对应的函数，在&lt;code&gt;.h&lt;/code&gt;中进行函数声明。&lt;/p&gt;
&lt;p&gt;&amp;lt; 代码示例 &amp;gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;main.c&lt;/em&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;message.h&quot;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; argc, &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; * argv[])&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    showMessage();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;main.c&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;em&gt;message.h&lt;/em&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;showMessage&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;em&gt;message.c&lt;/em&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;message.h&quot;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;showMessage&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;Hello, World!\n&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;lt; 输出结果 &amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Hello, World!&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Program ended with &lt;span class=&quot;built_in&quot;&gt;exit&lt;/span&gt; code: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;lt; 代码分析 &amp;gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;可以发现程序仍然可以正常运行。&lt;/li&gt;
&lt;li&gt;但是我们思考一个问题，如果我们不分成两个文件，直接在主函数文件中包含message.c是否也可以正常运行呢？答案是否定的，原因是由于编译生成的两个文件main.obj和message.obj在链接时会发现main.obj中已经有message.obj中定义的showMessage函数，抛出“标示符重复”的错误：&lt;br&gt;&lt;img src=&quot;http://images2015.cnblogs.com/blog/776348/201606/776348-20160607114940746-1062903242.png&quot; alt=&quot;&quot;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;参考&quot;&gt;&lt;a href=&quot;#参考&quot; class=&quot;headerlink&quot; title=&quot;参考&quot;&gt;&lt;/a&gt;参考&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;http://www.cnblogs.com/mjios/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;M了个J的博客&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
</content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;#include&lt;/code&gt;是C语言的预处理指令之一，所谓预处理，就是在编译之前做的处理，预处理指令一般以&lt;code&gt;#&lt;/code&gt;开头。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="1.0　【C语法】" scheme="http://sanfordy.com/categories/1-0-%E3%80%90C%E8%AF%AD%E6%B3%95%E3%80%91/"/>
    
    
  </entry>
  
  <entry>
    <title>【00】C语言简介</title>
    <link href="http://sanfordy.com/2016/05/11/1-0%20.C%E8%AF%AD%E6%B3%95/%E3%80%9000%E3%80%91C%E8%AF%AD%E8%A8%80%E7%AE%80%E4%BB%8B/"/>
    <id>http://sanfordy.com/2016/05/11/1-0 .C语法/【00】C语言简介/</id>
    <published>2016-05-11T15:24:05.000Z</published>
    <updated>2016-08-09T15:51:14.000Z</updated>
    
    <content type="html">&lt;blockquote&gt;
&lt;p&gt;C语言于1972年发明，首次使用是用于重写&lt;code&gt;UNIX&lt;/code&gt;操作系统（&lt;code&gt;UNIX&lt;/code&gt;以前是用汇编写的）。随着&lt;code&gt;UNIX&lt;/code&gt;操作系统的成功，C语言也得到了大幅度地推广，至今还是世界上最流行、使用最广泛的高级程序设计语言之一。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;计算机常识&quot;&gt;&lt;a href=&quot;#计算机常识&quot; class=&quot;headerlink&quot; title=&quot;计算机常识&quot;&gt;&lt;/a&gt;计算机常识&lt;/h2&gt;&lt;p&gt;在学习C语言之前，先要了解一些计算机常识。&lt;/p&gt;
&lt;h3 id=&quot;计算机只能识别0和1&quot;&gt;&lt;a href=&quot;#计算机只能识别0和1&quot; class=&quot;headerlink&quot; title=&quot;计算机只能识别0和1&quot;&gt;&lt;/a&gt;计算机只能识别0和1&lt;/h3&gt;&lt;p&gt;大家都知道，计算机要通电才能工作，说白了，它跟电视、洗衣机一样，都是电器。电器都有个共同的能力：懂得判断通电还是断电，通电就能工作，断电就停止工作。因此，从根本上讲，计算机只能识别电信号：高电平信号（通电）、低电平信号（断电），它只知道某个开关是通电还是断电。我们用1代表高电平，0代表低电平。也就说，&lt;code&gt;计算机只能识别0和1。&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&quot;二进制&quot;&gt;&lt;a href=&quot;#二进制&quot; class=&quot;headerlink&quot; title=&quot;二进制&quot;&gt;&lt;/a&gt;二进制&lt;/h3&gt;&lt;p&gt;因为计算机只能识别0和1，因此计算机所能识别的指令和数据都是用二进制数（0和1）来表示的。所谓二进制，就是用0和1来表示所有的数。不过我们日常生活中最常用的是十进制，用0~9来表示所有的数。&lt;/p&gt;
&lt;h4 id=&quot;二进制指令&quot;&gt;&lt;a href=&quot;#二进制指令&quot; class=&quot;headerlink&quot; title=&quot;二进制指令&quot;&gt;&lt;/a&gt;二进制指令&lt;/h4&gt;&lt;p&gt;给计算机灌输一些指令，它就能执行相应的操作，而计算机只能识别由0和1组成的指令。在计算机发展初期，计算机的指令长度为16，即以16个二进制数（0或1）组成一条指令，例如，用1011011000000000这条指令，是让计算机进行一次加法运算。因此，如果要想计算机执行一系列的操作，就必须编写许多条由0和1组成的指令，可以想象的到，这个工作量是如此巨大。&lt;/p&gt;
&lt;h4 id=&quot;二进制数据&quot;&gt;&lt;a href=&quot;#二进制数据&quot; class=&quot;headerlink&quot; title=&quot;二进制数据&quot;&gt;&lt;/a&gt;二进制数据&lt;/h4&gt;&lt;p&gt;平时我们在计算机中存储的一些数据，比如文档、照片、视频等，都是以0和1的形式存储的。只不过计算机解析了这一大堆的0和1，以图形界面的形式将数据展示在我们眼前。&lt;/p&gt;
&lt;h2 id=&quot;程序设计语言的发展史&quot;&gt;&lt;a href=&quot;#程序设计语言的发展史&quot; class=&quot;headerlink&quot; title=&quot;程序设计语言的发展史&quot;&gt;&lt;/a&gt;程序设计语言的发展史&lt;/h2&gt;&lt;p&gt;我们可以利用程序设计语言来编写程序，再将编好的程序运行到计算机上，计算机就能够按照程序中所说的去做。从计算机诞生至今，程序设计语言大致经历了3个发展阶段：&lt;code&gt;机器语言&lt;/code&gt;、&lt;code&gt;汇编语言&lt;/code&gt;、&lt;code&gt;高级语言&lt;/code&gt;。其中， C语言属于高级语言。&lt;/p&gt;
&lt;h3 id=&quot;机器语言&quot;&gt;&lt;a href=&quot;#机器语言&quot; class=&quot;headerlink&quot; title=&quot;机器语言&quot;&gt;&lt;/a&gt;机器语言&lt;/h3&gt;&lt;h4 id=&quot;什么是机器语言&quot;&gt;&lt;a href=&quot;#什么是机器语言&quot; class=&quot;headerlink&quot; title=&quot;什么是机器语言&quot;&gt;&lt;/a&gt;什么是机器语言&lt;/h4&gt;&lt;p&gt;在计算器诞生初期， 所有的计算机程序都是直接用计算机能识别的二进制指令来编写的，也就是说所有的代码里面只有0和1。这种程序设计语言就是“机器语言”。这些由0和1组成的二进制指令，又叫做“机器指令”。&lt;/p&gt;
&lt;h4 id=&quot;优点&quot;&gt;&lt;a href=&quot;#优点&quot; class=&quot;headerlink&quot; title=&quot;优点&quot;&gt;&lt;/a&gt;优点&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;执行效率高：由于机器语言编写出来的代码是能被计算机直接识别的，因此机器语言是直接对硬件产生作用的，程序的执行效率非常高。&lt;/li&gt;
&lt;li&gt;可操作硬件：机器语言能直接访问、控制计算机的各种硬件设备，如磁盘、存储器、CPU、I/O端口等。&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&quot;缺点&quot;&gt;&lt;a href=&quot;#缺点&quot; class=&quot;headerlink&quot; title=&quot;缺点&quot;&gt;&lt;/a&gt;缺点&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;难记：用机器语言编写程序，编程人员要首先熟记所用计算机的全部指令和指令的涵义，指令又多又难记。&lt;/li&gt;
&lt;li&gt;可读性差：编出的程序全是些0和1的指令代码，可读性差，还容易出错。&lt;/li&gt;
&lt;li&gt;可移植性差：由于机器语言是直接对硬件产生作用的，对硬件的依赖性很强，因此不同型号计算机的机器语言又不一样。也就是说，如果2台不同型号的机器想实现一样的功能，需要编写2套完全不同的代码。&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;说明&lt;/strong&gt;：机器语言很难掌握和推广，现在除了计算机生产厂家的专业人员外，绝大多数的程序员已经不再去学习机器语言了。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;汇编语言&quot;&gt;&lt;a href=&quot;#汇编语言&quot; class=&quot;headerlink&quot; title=&quot;汇编语言&quot;&gt;&lt;/a&gt;汇编语言&lt;/h3&gt;&lt;h4 id=&quot;什么是汇编语言&quot;&gt;&lt;a href=&quot;#什么是汇编语言&quot; class=&quot;headerlink&quot; title=&quot;什么是汇编语言&quot;&gt;&lt;/a&gt;什么是汇编语言&lt;/h4&gt;&lt;p&gt;由于机器语言的种种弊端，严重影响开发效率，后面就出现了汇编语言。汇编语言其实就是符号化的机器语言，它用一个符号（英文单词、数字）来代表一条机器指令。比如，在机器语言中，用1011011000000000这条指令，是让计算机进行一次加法运算；而在汇编语言中，用英文单词 “ADD”就可以表示加法运算。一个有意义的英文单词，很明显比一串又臭又长的二进制指令，直观好记多了。&lt;/p&gt;
&lt;p&gt;由于计算机只能识别0和1，用汇编语言编写的代码是不能被计算机所识别的，像刚才的”ADD”，计算机肯定不知道是什么意思。因此，用汇编语言编写的代码需要翻译成二进制指令后，才能被计算机识别。这个翻译的工作交给编译器去做。&lt;/p&gt;
&lt;h4 id=&quot;优点-1&quot;&gt;&lt;a href=&quot;#优点-1&quot; class=&quot;headerlink&quot; title=&quot;优点&quot;&gt;&lt;/a&gt;优点&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;可读性较好：对比机器语言，汇编语言的代码可读性好。&lt;/li&gt;
&lt;li&gt;可操作硬件：汇编语言能像机器语言一样，可以直接访问、控制计算机的各种硬件设备，如磁盘、存储器、CPU、I/O端口等。使用汇编语言，可以访问所有能够被访问的软、硬件资源。&lt;/li&gt;
&lt;li&gt;目标代码简短：目标代码就是经编译器翻译过后的二进制代码，占用内存少，执行速度快。（计算机中所有程序的运行都是在内存中进行的，因此内存的性能对计算机的影响非常大。其作用是用于暂时存放CPU中的运算数据，以及与硬盘等外部存储器交换的数据。只要计算机在运行中， CPU就会把需要运算的数据调到内存中进行运算，当运算完成后内存再将结果传送出来，内存的运行也决定了计算机的稳定运行。）计算机的内存是有限的，因此一个应用程序运行时所占用的内存越少越好。&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&quot;缺点-1&quot;&gt;&lt;a href=&quot;#缺点-1&quot; class=&quot;headerlink&quot; title=&quot;缺点&quot;&gt;&lt;/a&gt;缺点&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;可移植性差：汇编语言是面向机器的，通常是为特定的计算机或系列计算机专门设计的。因此，不同的机器有不同的汇编语言语法和编译器，代码缺乏可移植性，也就是说，一个程序只能在一种机器上运行，换到其他机器上就不能运行。&lt;/li&gt;
&lt;li&gt;难记：汇编语言的符号非常多、难记，即使是完成简单的功能也需要大量的汇编语言代码，很容易产生BUG，难于调试。&lt;/li&gt;
&lt;li&gt;开发效率低：使用汇编语言必须对硬件非常了解，开发效率很低，周期长且单调。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;高级语言&quot;&gt;&lt;a href=&quot;#高级语言&quot; class=&quot;headerlink&quot; title=&quot;高级语言&quot;&gt;&lt;/a&gt;高级语言&lt;/h3&gt;&lt;h4 id=&quot;什么是高级语言&quot;&gt;&lt;a href=&quot;#什么是高级语言&quot; class=&quot;headerlink&quot; title=&quot;什么是高级语言&quot;&gt;&lt;/a&gt;什么是高级语言&lt;/h4&gt;&lt;p&gt;由于汇编语言依赖于硬件，代码可移植性差，符号又多又难记，于是人类就发明了非常接近自然语言的高级语言。后面要学习的C语言就是高级语言。&lt;/p&gt;
&lt;h4 id=&quot;优点-2&quot;&gt;&lt;a href=&quot;#优点-2&quot; class=&quot;headerlink&quot; title=&quot;优点&quot;&gt;&lt;/a&gt;优点&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;可读性最好：语法和结构类似于普通英文，且远离对硬件的直接操作，使得一般人经过学习之后都可以编程，而不用太熟悉硬件知识。&lt;/li&gt;
&lt;li&gt;代码简洁：比如要计算2个数的和，在高级语言中可以写得非常简洁：d=a+b。但是在机器语言和汇编语言中，就需要几条甚至几十条指令，而且不同机器还要编写不同的指令代码。&lt;/li&gt;
&lt;li&gt;可移植性好：用高级语言编写的同一个程序还可以在不同的机器上运行，具有可移植性。&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;注意&lt;/strong&gt;：用高级语言编写的程序不能直接被计算机识别，需要经编译器翻译成二进制指令后，才能运行到计算机上。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;C语言简史&quot;&gt;&lt;a href=&quot;#C语言简史&quot; class=&quot;headerlink&quot; title=&quot;C语言简史&quot;&gt;&lt;/a&gt;C语言简史&lt;/h2&gt;&lt;p&gt;C语言于1972年发明，首次使用是用于重写&lt;code&gt;UNIX&lt;/code&gt;操作系统（&lt;code&gt;UNIX&lt;/code&gt;以前是用汇编写的）。随着&lt;code&gt;UNIX&lt;/code&gt;操作系统的成功，C语言也得到了大幅度地推广，至今还是世界上最流行、使用最广泛的高级程序设计语言之一。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;注意&lt;/strong&gt;：C语言是一门面向过程的语言，非面向对象的语言。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;C语言的优点&quot;&gt;&lt;a href=&quot;#C语言的优点&quot; class=&quot;headerlink&quot; title=&quot;C语言的优点&quot;&gt;&lt;/a&gt;C语言的优点&lt;/h2&gt;&lt;h3 id=&quot;丰富的运算符&quot;&gt;&lt;a href=&quot;#丰富的运算符&quot; class=&quot;headerlink&quot; title=&quot;丰富的运算符&quot;&gt;&lt;/a&gt;丰富的运算符&lt;/h3&gt;&lt;p&gt;计算机的基本功能就是计算，因此一门程序设计语言的计算能力是非常重要的。C语言提供了34种运算符，计算类型及其丰富，其中包括了最基本的加减乘除运算。&lt;/p&gt;
&lt;h3 id=&quot;丰富的数据类型&quot;&gt;&lt;a href=&quot;#丰富的数据类型&quot; class=&quot;headerlink&quot; title=&quot;丰富的数据类型&quot;&gt;&lt;/a&gt;丰富的数据类型&lt;/h3&gt;&lt;p&gt;C语言之所以生命力如何强大，很大一部分是因为它拥有丰富的数据类型。C语言的数据类型有：整型（int）、实型（float）、字符型（char）、数组类型（int []）、指针类型（void *）、结构体类型（struct）、共用体类型（union）等。众多数据类型中，最强大的是指针，通过指针我们可以直接访问内存地址。指针使用得当的话，不仅可以节省代码量，还可以优化内存管理、提高性能。因此，指针是一个非常重要的概念，必须重视。如果你说 C语言中除了指针，其他都学得挺好的，那你干脆说你没学过C语言。正因为C语言数据类型丰富，运算能力极强，因此很多数据库都是用C语言编写的，比如&lt;code&gt;DB2&lt;/code&gt;、&lt;code&gt;Oracle&lt;/code&gt;等。&lt;/p&gt;
&lt;h3 id=&quot;允许直接访问物理地址，对硬件进行操作&quot;&gt;&lt;a href=&quot;#允许直接访问物理地址，对硬件进行操作&quot; class=&quot;headerlink&quot; title=&quot;允许直接访问物理地址，对硬件进行操作&quot;&gt;&lt;/a&gt;允许直接访问物理地址，对硬件进行操作&lt;/h3&gt;&lt;p&gt;由于C语言允许直接访问物理地址，可以直接对硬件进行操作，因此它既具有高级语言的功能，又具有低级语言的许多功能，能够像汇编语言一样对位（bit）、字节和地址进行操作，而这三者是计算机最基本的工作单元。&lt;/p&gt;
&lt;h3 id=&quot;高效率的目标代码&quot;&gt;&lt;a href=&quot;#高效率的目标代码&quot; class=&quot;headerlink&quot; title=&quot;高效率的目标代码&quot;&gt;&lt;/a&gt;高效率的目标代码&lt;/h3&gt;&lt;p&gt;对比汇编语言，C语言可读性好，易于调试、修改和移植，代码质量与汇编语言相当。&lt;/p&gt;
&lt;h3 id=&quot;可移植性好&quot;&gt;&lt;a href=&quot;#可移植性好&quot; class=&quot;headerlink&quot; title=&quot;可移植性好&quot;&gt;&lt;/a&gt;可移植性好&lt;/h3&gt;&lt;p&gt;在一个环境上用C语言编写的程序，不改动或稍加改动，就可移植到另一个完全不同的环境中运行。&lt;/p&gt;
&lt;h2 id=&quot;C语言的缺点&quot;&gt;&lt;a href=&quot;#C语言的缺点&quot; class=&quot;headerlink&quot; title=&quot;C语言的缺点&quot;&gt;&lt;/a&gt;C语言的缺点&lt;/h2&gt;&lt;h3 id=&quot;封装性差、安全性低&quot;&gt;&lt;a href=&quot;#封装性差、安全性低&quot; class=&quot;headerlink&quot; title=&quot;封装性差、安全性低&quot;&gt;&lt;/a&gt;封装性差、安全性低&lt;/h3&gt;&lt;p&gt;由于C语言是面向过程的，因此它的数据封装性差、安全性低，这就是C语言和其他面向对象语言的区别之一。面向对象语言的特性之一就是数据的封装性。&lt;/p&gt;
&lt;h3 id=&quot;语法限制不严格&quot;&gt;&lt;a href=&quot;#语法限制不严格&quot; class=&quot;headerlink&quot; title=&quot;语法限制不严格&quot;&gt;&lt;/a&gt;语法限制不严格&lt;/h3&gt;&lt;p&gt;对变量的类型约束不严格，对数组下标越界不作检查等。&lt;/p&gt;
&lt;h2 id=&quot;C语言能做什么&quot;&gt;&lt;a href=&quot;#C语言能做什么&quot; class=&quot;headerlink&quot; title=&quot;C语言能做什么&quot;&gt;&lt;/a&gt;C语言能做什么&lt;/h2&gt;&lt;h3 id=&quot;开发计算机软件&quot;&gt;&lt;a href=&quot;#开发计算机软件&quot; class=&quot;headerlink&quot; title=&quot;开发计算机软件&quot;&gt;&lt;/a&gt;开发计算机软件&lt;/h3&gt;&lt;p&gt;由于C语言具有强大的数据处理能力，而且允许直接访问物理地址，直接对硬件操作，因此它适于编写系统软件、图形处理、单片机程序、嵌入式系统开发甚至是用于科研。&lt;/p&gt;
&lt;h3 id=&quot;开发Android&quot;&gt;&lt;a href=&quot;#开发Android&quot; class=&quot;headerlink&quot; title=&quot;开发Android&quot;&gt;&lt;/a&gt;开发Android&lt;/h3&gt;&lt;p&gt;很多操作系统的底层都是用C语言写的，比如 android 。&lt;/p&gt;
&lt;h3 id=&quot;开发iOS&quot;&gt;&lt;a href=&quot;#开发iOS&quot; class=&quot;headerlink&quot; title=&quot;开发iOS&quot;&gt;&lt;/a&gt;开发iOS&lt;/h3&gt;&lt;p&gt;iOS开发中的核心语言是Objective-C（简称OC），OC是在C语言的基础上加了一层面向对象语法。&lt;/p&gt;
&lt;h2 id=&quot;参考&quot;&gt;&lt;a href=&quot;#参考&quot; class=&quot;headerlink&quot; title=&quot;参考&quot;&gt;&lt;/a&gt;参考&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;http://www.cnblogs.com/mjios/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;M了个J的博客&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
</content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;C语言于1972年发明，首次使用是用于重写&lt;code&gt;UNIX&lt;/code&gt;操作系统（&lt;code&gt;UNIX&lt;/code&gt;以前是用汇编写的）。随着&lt;code&gt;UNIX&lt;/code&gt;操作系统的成功，C语言也得到了大幅度地推广，至今还是世界上最流行、使用最广泛的高级程序设计语言之一。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="1.0　【C语法】" scheme="http://sanfordy.com/categories/1-0-%E3%80%90C%E8%AF%AD%E6%B3%95%E3%80%91/"/>
    
    
  </entry>
  
</feed>
